cset: moving following pidspec: 4974
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.172949891 seconds)
loading group "string"... done (took 0.522285178 seconds)
loading group "linalg"... done (took 9.801668405 seconds)
loading group "parallel"... done (took 0.17233363 seconds)
loading group "find"... done (took 2.465547553 seconds)
loading group "tuple"... done (took 2.359823205 seconds)
loading group "dates"... done (took 1.430944892 seconds)
loading group "micro"... done (took 0.647474961 seconds)
loading group "io"... done (took 0.684368192 seconds)
loading group "scalar"... done (took 55.483502711 seconds)
loading group "sparse"... done (took 13.641805942 seconds)
loading group "broadcast"... done (took 1.345478001 seconds)
loading group "union"... done (took 2.569434139 seconds)
loading group "simd"... done (took 3.808623944 seconds)
loading group "random"... done (took 14.423740707 seconds)
loading group "problem"... done (took 2.256759721 seconds)
loading group "array"... done (took 23.335706051 seconds)
loading group "misc"... done (took 1.678916286 seconds)
loading group "sort"... done (took 3.709155909 seconds)
loading group "collection"... done (took 21.21580625 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.897768217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.179321405 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.247166915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.637650041 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.318384564 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206665137 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.206092326 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.208506074 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.6557261 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.221588361 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.198611077 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414044077 seconds)
done (took 7.193280401 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.391804025 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.09226898 seconds)
    (2/2) benchmarking "String"...
    done (took 0.242937147 seconds)
  done (took 0.980568442 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.106414516 seconds)
    (2/2) benchmarking "String"...
    done (took 0.148334791 seconds)
  done (took 0.901673172 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138981805 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.196288438 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.152656441 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.15099282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140691353 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.154425111 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.138323025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.154120131 seconds)
  done (took 1.733517827 seconds)
done (took 4.797991273 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.531866964 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.014361618 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.53277541 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.220429162 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.350350061 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.365592318 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.325557195 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.280564022 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134173284 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.118759507 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.245803711 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.526637965 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.452377039 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.035877137 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099738944 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.159460333 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.209568253 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.948307447 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.126420151 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155013979 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.544263529 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.257027265 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.163400656 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.153298252 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.233500155 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.172916153 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173124704 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.151065052 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.720429248 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.180390067 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.241296325 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.129573763 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171393488 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.209655367 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.28351338 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156702347 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.720301195 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.246751057 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126758495 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146074382 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.783932619 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164309448 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.252056494 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14971588 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115040176 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193497177 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.14297479 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122003751 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.156630035 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14706878 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213606808 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.498953027 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.151935755 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.244285561 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.153024382 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.746163597 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.139695292 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.331145995 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.183218755 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.154225603 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.121614209 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.152386957 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.200156648 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139474849 seconds)
  done (took 23.348901654 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.250527117 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.255698792 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.1242768 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.210183756 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1920525 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.127856722 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.151146255 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.124751585 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.178043579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.229891486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.191638989 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.261288192 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.139696461 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.136831606 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.234261382 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.299340812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.18055254 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.153509133 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.154769325 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.142315725 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.19041836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.14362321 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.159211337 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.159232224 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.218713986 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.251484284 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.157956111 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.173413946 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.151953877 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.146144471 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.191445226 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.21313709 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.125374374 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151228108 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.240155904 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.155570749 seconds)
  done (took 7.240899189 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.281249681 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147259873 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.309106983 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231633269 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.172463283 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.240043304 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.225012319 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.33515847 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365653407 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226043298 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.265279241 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172882635 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.143421739 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141924833 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.126869763 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.143892714 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.888079112 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.216154719 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.184803435 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.230108161 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158325676 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.142225663 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.411662641 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.133340443 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.148617745 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142016837 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114637596 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.271707172 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139444165 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.526931588 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.146471987 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159557652 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.161276858 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.259396193 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.170822934 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.186048327 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15813305 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.130709727 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.150587859 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.260451869 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14461177 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.142309644 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126047735 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.182143616 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.179815165 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.15369572 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154963486 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18383632 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.150245877 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155424114 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.193178766 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.244342553 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.229628045 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.134361188 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323037802 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.168522342 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145411753 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.156696074 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.89172192 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167622537 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146319587 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.125960487 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159597506 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.144169363 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.504071427 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166272245 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.193781359 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.129358387 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.209060971 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16008828 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.165210936 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134474781 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150669299 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.155378529 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.153160737 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128222912 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.151536835 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.127474613 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.154643157 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132226294 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.164692061 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149755439 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.129272056 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195478146 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.159272788 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.153968432 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.174903001 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.152971282 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.132647053 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178907981 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.145779275 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.136885036 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.251459966 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16385909 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.165637263 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160108327 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.177192913 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.151095974 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.354195569 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.132721626 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.148240371 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.173503735 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.150236111 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17745936 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.164138425 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130486159 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151153642 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.126512337 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.146371305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196064957 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.148866916 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.127925023 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.154539817 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.14089879 seconds)
  done (took 32.979109304 seconds)
done (took 64.225736807 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.502399769 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10860158 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129463939 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11373369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130642547 seconds)
  done (took 1.724620592 seconds)
done (took 2.443584285 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.238090577 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.336240992 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.245574039 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.163250987 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216880057 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212081673 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.199430308 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209969454 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.2183353 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.232062418 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.12948993 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.237057921 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.224261147 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.215011053 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.126279461 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.24871488 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.210718588 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197056071 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.244489602 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152358376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.163408625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.151580396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168852152 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.136062975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168773838 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150774863 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.171587834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15166529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.159976252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135155613 seconds)
  done (took 2.436199026 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.19623925 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149494434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162522252 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.141120404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166333172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.136262875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146786307 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167502758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.172546251 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148582397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.16101904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135575206 seconds)
  done (took 2.410090878 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.1255352 seconds)
done (took 10.013751495 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249370337 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.899224313 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.206856991 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.313183407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.38149603 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.321883383 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.67761319 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.254037384 seconds)
  done (took 16.14784902 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.271137899 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.144093212 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.157689851 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.138829564 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.159515624 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143789429 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.164637436 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.14530641 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.162095624 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.147461762 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.158665271 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.147344608 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.157635671 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.141816786 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.163213246 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141711805 seconds)
  done (took 3.331479622 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.186669851 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.185069457 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146321939 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16473436 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143503185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.168631025 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.1513346 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.165244294 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.144009815 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.161657586 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.151325726 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.166530358 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.164410581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.14584741 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.168995454 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.16731241 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161855248 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.149135374 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.183747141 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.14925242 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.165598617 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.146480149 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.164619172 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.149031222 seconds)
  done (took 4.653587237 seconds)
done (took 24.862423348 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.204810552 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15336883 seconds)
  done (took 1.097423369 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.22025767 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.231937729 seconds)
  done (took 1.197273456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.164859039 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157571113 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.171701826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.170566454 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.142499064 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159635741 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.183572211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.142517072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.160788384 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.142835253 seconds)
  done (took 2.34375744 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.145648618 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.161666995 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.156293646 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.226473134 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.167072795 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.144675967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.163783763 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.143007677 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.164334866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.139919827 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.164683142 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.158398529 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.161774242 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.160585911 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.163847974 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.16518432 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.151947376 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.160665984 seconds)
  done (took 3.648596292 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142189004 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.143777899 seconds)
  done (took 1.033045719 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145245579 seconds)
    (2/7) benchmarking "second"...
    done (took 0.158485562 seconds)
    (3/7) benchmarking "month"...
    done (took 0.143513365 seconds)
    (4/7) benchmarking "year"...
    done (took 0.160730077 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.142052032 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.158458814 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.142887067 seconds)
  done (took 1.803033448 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.597942907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276397407 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.411273263 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108818592 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.161087747 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37625486 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.159446864 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10695718 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108629383 seconds)
  done (took 3.089805019 seconds)
done (took 14.959399258 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.14357055 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.340906261 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.691449757 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.164094147 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.160101507 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.204301432 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.403031766 seconds)
done (took 2.863225488 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361748792 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.217027335 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.12463699 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.144287912 seconds)
  done (took 1.601036553 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133820248 seconds)
    (2/2) benchmarking "read"...
    done (took 0.166403834 seconds)
  done (took 1.058703 seconds)
done (took 3.415488259 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.16288625 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.161607953 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.146118731 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.164244668 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.14556244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.162697704 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.143454308 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.159695038 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.144069954 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.159655895 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.144053825 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.162646583 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.14353731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.163183738 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143261253 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.163824687 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144475306 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.161475929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142793647 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.164207345 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.144694433 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161105247 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.144812907 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163063336 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.145905896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.16554994 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.142225156 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.159185657 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162710106 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.145012557 seconds)
  done (took 5.374022389 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.269041891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.137166497 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.159867161 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.149228827 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.157444893 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.142671027 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.15730899 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.140911918 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.160809452 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.141131141 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.15857999 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.139584574 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.160279907 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.140813319 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.160309037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.145101346 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.166613567 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138404079 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.154521921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.139902387 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.157824136 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.137552363 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154647199 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.138230038 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.155953639 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.134979338 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.155293581 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.13823059 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138630691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.154009032 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.140508399 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.156532801 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.137952225 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.166764893 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13983918 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.15605562 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142562599 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.153294326 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.138202605 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.152746778 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134842413 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.155883381 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.137373542 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.161255433 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.137851185 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.15528575 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.138351824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.157553466 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.139275554 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.159601339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135809551 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.15698171 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.14008476 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.156539864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.14098358 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.152887753 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.139220763 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.153730199 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.142585087 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.139746964 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.156606928 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.138663369 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.166805508 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.142194415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.176707395 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.16430898 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.141463865 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.140804181 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.15691402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.142763522 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.1585032 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.147848303 seconds)
  done (took 11.603925131 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.141329988 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141537473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.16204604 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.14228066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162271311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.144589008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160930858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139973943 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157452557 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140347745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161937935 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.141780147 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160976453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142478738 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162170925 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.141193723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.160849402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1424177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.160802999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.144453533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142680195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.162905197 seconds)
  done (took 4.086135212 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.290075376 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.147344254 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.212406199 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.172180138 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.160900461 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.175709265 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147776523 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.167917301 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145144193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.169009937 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149074317 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162522076 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.177613077 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151426705 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168204405 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.151560871 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.162718443 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.150300097 seconds)
  done (took 3.83770949 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.139106926 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137864822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157950745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138651977 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156710254 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138270375 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157885465 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.142158026 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161446804 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.141542498 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.161857098 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141503105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.161327121 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138885301 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15836894 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139377327 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.157753672 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141791539 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157790789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.140060138 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.139533831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.158444297 seconds)
  done (took 4.044182396 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154191251 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.161100709 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162850491 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.166157091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.141060913 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.161340437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.148798351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.162061671 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.149773714 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.159747676 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144266811 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.160088075 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.158341457 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162923346 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.150257719 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163735872 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144359543 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162838403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143153209 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158905058 seconds)
  done (took 3.891726014 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.252922906 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.158544015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17721781 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166304336 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17654526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158668464 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185492811 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156384923 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175644281 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.188305208 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157268265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.175392417 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167048234 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181929113 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156972621 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184005978 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.184084307 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167549123 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.178340177 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15799035 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186578429 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174421623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.170468533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.179825774 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161014432 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182083133 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159599084 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185354248 seconds)
  done (took 5.685409523 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.154503679 seconds)
    (2/2) benchmarking "in"...
    done (took 0.173034114 seconds)
  done (took 1.110947322 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.144298936 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142548056 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.162370928 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14382518 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.167473561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144574415 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.166181782 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145917869 seconds)
  done (took 1.997214234 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.252076566 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.259554727 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.149570384 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.176653031 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.257694567 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.240986772 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.181344575 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.172028344 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.14813141 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.160917213 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.260903282 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.139011491 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.16660267 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.16521094 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.145010954 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171644843 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.149114158 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.17534894 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.154292793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.167984931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152299978 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.171528647 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.150797339 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.178040138 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.142845878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.170491087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.148631875 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.178847177 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1519916 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.169390657 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.143455138 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.168325869 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.151738433 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.174250913 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.150282973 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.261789874 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171285285 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140901058 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.169906655 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152244319 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.196443608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.150653157 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.169486928 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.166739055 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155173765 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.17253329 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.156282887 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.168229764 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.141833179 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.164505073 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.15032231 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.16320447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.148857213 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.16897117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.148926125 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.176090053 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.151219335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.166083362 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.146583253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.165717437 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.14772915 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.16576722 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1527482 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.172614095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149876915 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.170066608 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146696779 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.173004305 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.146981578 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.172662163 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.148695223 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.184861048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.149022482 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.176576089 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.150775311 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.170916495 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142102086 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.176353683 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.147199511 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.171202549 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.151071274 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.193706055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150630068 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165260397 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.143361426 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.177549098 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.151312908 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.173014003 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.14073181 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.177162097 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.150148995 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.171088567 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.134900884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.164830827 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.141703612 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.171401245 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.142699696 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.172056959 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.147667167 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.174481154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152013338 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169648212 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.171291413 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152715731 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.176188389 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.146648733 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.220571097 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144300711 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.16885807 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.147819958 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.177008489 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.141213697 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.172865191 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.147368235 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.167928426 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.141587323 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.175117424 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.145757477 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.172960559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.151675024 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.173682542 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.150124001 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.173736593 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.147207915 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.167867214 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.154705604 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.180047739 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.160643121 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.173656721 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.150658253 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.173200588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.150497729 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.175266927 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.147401017 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176569049 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.147332481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.172549935 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.149694697 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.17755282 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.14640107 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.168202778 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.150118366 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.17261621 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.149573661 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.174583202 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.150800481 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.167120961 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.14198836 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.172866906 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.146985893 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.174573304 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158221954 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.148492909 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.152910132 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.169329834 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.180245213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.149485187 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.177139644 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157371669 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.17805417 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157715937 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.162420844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.147168829 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.173953628 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.153851979 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.167896544 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.145339057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.146122815 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.176211139 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.162506147 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.156280514 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.143441275 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.170948561 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.15722079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.174691623 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.154094419 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.167306422 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.204755717 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.16205931 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.177874653 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.148146787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.171161812 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.155777433 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.170710125 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.156217422 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.178825079 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.155962128 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.170739637 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.151841785 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.178255353 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.145562515 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.174808251 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147541332 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.172840622 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.141905006 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.174263787 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.140374453 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.175938508 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.150203698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.177664102 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.154725001 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173297269 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147021398 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.182188247 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.147645886 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.177434693 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.142836866 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.178041909 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.158923823 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.179476297 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155540758 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.17269773 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147651258 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.174410598 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159219971 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171258439 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.14680437 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.167012172 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.14077905 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.163943762 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.155979589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.1754573 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.14526446 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.173158076 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151466604 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175042451 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.146491552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.165435258 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.155893883 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.175698735 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.145837892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.173283079 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.148193499 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.172445604 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.156552233 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.166661942 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.14790123 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.175929219 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.156968336 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.173498538 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.153013108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.17540577 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.156357147 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.176607557 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.15148574 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.17005062 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154062769 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.167082193 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.146238355 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.166644708 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.150845858 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.165394731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.150499076 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.171519899 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.148136228 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.169914983 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.15412369 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.177601147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.153630315 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.169719839 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.153484345 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.17441689 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.153996255 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171438171 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.157666391 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.170571705 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.14567116 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.170867491 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.145121094 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.175338096 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.146162515 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.179701457 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.148246737 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.17403205 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.156359868 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.178228042 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.149469419 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.179574603 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.185152289 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.144735221 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.144953794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174020486 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.17226384 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.146815548 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.170217165 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.1513523 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.175519965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.155681159 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.176464049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.148382009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.173759305 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.158669217 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.169175615 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.156066288 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.173315005 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.155083896 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.164421673 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.152901305 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.167863733 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.152670164 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.164239815 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.148683617 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16575318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146411354 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.163502341 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.147981244 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.165070312 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.139832956 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.163525827 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.156619503 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.167965457 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.152168366 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.166628591 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.147961135 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.166744204 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.146724991 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.173090797 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.147785283 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.182901548 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.150532044 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.168569949 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.143813766 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.178092959 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150669657 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.178503395 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.146270168 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.179565145 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.163094441 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.180381223 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.156330704 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.185616096 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.165149478 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.179168417 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.158557563 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.169274935 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.152970445 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.180362019 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.152977066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.173022883 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.152825787 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.164982645 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.153770133 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.172688293 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.147990254 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.165824553 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.14394261 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.176593823 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.15606646 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.171087617 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.153511288 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.178957321 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.154589926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.169660277 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154966807 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.180306092 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.155720384 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.180450007 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.151486365 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.174366758 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.146722753 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.174568446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.153994638 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.171810084 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.150077905 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.171581298 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.157650767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.166596689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.158094035 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.181672484 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.153997887 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.175308192 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.159253315 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.173521913 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.156072234 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1814751 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.155472811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.185980566 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.155481416 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.175816857 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.161200683 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.180207461 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.147111571 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.171211967 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151075224 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.18112008 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.150349509 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.176065895 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.152129523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.180588277 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.156609559 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.179359796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.158856774 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.182196198 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.146432487 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.181742202 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154061115 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.170789666 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.149091198 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167702828 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.14648475 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.172083442 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.159661302 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.168325179 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15969061 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.173368432 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.150496191 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.172065776 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.155191111 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167518515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15844 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.167965952 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152908722 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.167767419 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.154739233 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.170822178 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.156058192 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.16968705 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.142976038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174264723 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.153520567 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.172559355 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.152701369 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174808667 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.14307 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.162176332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.152032679 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.1665725 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.158994497 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.174023593 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.147846349 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170032421 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.152840577 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.170301566 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155603628 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.163913547 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.14736191 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.170526177 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150486534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.168092298 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.144533718 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.173094799 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.148881279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171086392 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.148391021 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.164886995 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.14847483 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.176056367 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.147978944 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.165777716 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.147594904 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177225568 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147706829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.167493752 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.142746138 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17619673 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.151406346 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176696626 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.166364696 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.148764638 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.165735324 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.154781794 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.178394432 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.148789659 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.170088826 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.147555449 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.175114669 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154054709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.163524916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.147707402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.179707985 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.15605552 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.170891915 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.154313077 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.167996156 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159191227 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177002354 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.15359773 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.164541397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.144447297 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.168692241 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.146218349 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.172426472 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155659634 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.168324731 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.149830404 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174027909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.156430243 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.173071168 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.154635678 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.16423216 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156810059 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.166740858 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.154797702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.16393281 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.145948973 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.172747892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15591727 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168915339 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.151413167 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.170674278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.155673206 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.150446095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.168560074 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.173724519 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155887282 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.155730875 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172337741 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.168591001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.153103388 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.180895606 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.152520704 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.169503914 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159114778 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.178345903 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.153664782 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.176448097 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.157450565 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.179540398 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.156327326 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.181127332 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.151705367 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.174956256 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.158097322 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.179218696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160814524 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.170347587 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.14582106 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.175385125 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.149063596 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.167310334 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.156806319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.178711502 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.157771384 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.170788955 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.146907885 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180725744 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.155542281 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172793838 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.15075292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.171200069 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.15584375 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.169023013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.158283222 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.168145282 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.159185322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.18091561 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.156612861 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.180048345 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.146134216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176931062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.153703056 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.179344759 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.152731105 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.167000543 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.147724244 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.173313701 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.158503173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.177763535 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.154986703 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.175299245 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.15698647 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.172691942 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151939704 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.170204379 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.158009438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.177444161 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.154999649 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.175803843 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.151360442 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.17239879 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.153249876 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.17769475 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.157734626 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.173798186 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.161003597 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.178988253 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.150229324 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.170021264 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153675653 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.173681187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.153907757 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.178296307 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.149008879 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.166234996 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.157706351 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.179345623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151771307 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.178321871 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.16052676 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.17082784 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.155053514 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180800756 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.156497326 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.175111323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.151880409 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.175882087 seconds)
  done (took 98.152290521 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.201025004 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184264058 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.155823186 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176226037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17424302 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177671287 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.15377162 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175180893 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154352352 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.186913314 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153458548 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174761997 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16794025 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198123228 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192547703 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163006696 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175735339 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154841739 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173655653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15928285 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189828427 seconds)
  done (took 4.520143726 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.154505012 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.152112987 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.173348654 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152580421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.176372028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152959995 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.175216216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152511407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175087862 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153711536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.173046686 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154948196 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.175292313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.155535202 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176488585 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15652826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.17356647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155036269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.153458488 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.176045148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154151043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.174616374 seconds)
  done (took 4.477180793 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.178189885 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.156220947 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.178236192 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.158857588 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.185223048 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.154883553 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.183383142 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.156902032 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.185298725 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.153080888 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.173318465 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.157312959 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.178980463 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157335448 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.17105091 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.15604249 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.186402374 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157106118 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.181966216 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15426759 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.166292264 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.154132561 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.177384565 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.148289935 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.181521021 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.160006463 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.180338793 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.158715032 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.166328716 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1595689 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.175671776 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.147074926 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.166097268 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.145211659 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.167505807 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.157582546 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.155963219 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.176079572 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.155147468 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.168374961 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.15530877 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.181572599 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.145787916 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.178051061 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.155714597 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.172881528 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.158325075 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.178175252 seconds)
  done (took 8.839969822 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.190994736 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.219292373 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.162806365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.211792643 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.195903077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.167676158 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.183954674 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.189341806 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.181977469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.159962952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.193941408 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.19284693 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.165483685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.19191504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.162869267 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.186537266 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.166123323 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.183773525 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.165202864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181262256 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.165690734 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.185748458 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.170577593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191777643 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183377937 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.159959175 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.181648822 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.164907512 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.190025689 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.165265891 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.183911241 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.162835167 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.190550378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158516618 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.180516788 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159402028 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.191489677 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.181391768 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.162926828 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.179023456 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.163037581 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.185122151 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.163450127 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.193894658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.163693745 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.183507829 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.163078077 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.180999732 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.169211156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.183342839 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.166728492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.19142349 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.185838352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.165538998 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.190159523 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.172230266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.182216447 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.159105161 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.183229507 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.168172944 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.179340702 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162600884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.191773504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181287667 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.16633873 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.192167328 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.162119137 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.184556349 seconds)
  done (took 13.072970773 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193349826 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.18570361 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175529784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193979234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163728804 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185887751 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163080069 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.185010333 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.184221404 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.169316764 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188314092 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.298989134 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.171311674 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193009248 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.166469708 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.189909023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166615355 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185759265 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168246531 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185978211 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.185711145 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173238197 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.188428765 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.42391239 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19941297 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.162578167 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.186493777 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.186811912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176113221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188188335 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.175592865 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.190061378 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.164232382 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.193595444 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.196672821 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.16761145 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.182045122 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.169019438 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.190707586 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.167841115 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.185198683 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174330073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.189607751 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.159961876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186435822 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.164139196 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.196063088 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.195403587 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.168299373 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194251328 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.163437989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194264117 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184101171 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.163598972 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.194749834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.177991338 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194253628 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.193393921 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163804478 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.194759977 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173565796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.201537462 seconds)
  done (took 12.496353658 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.161063919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158608397 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180730126 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158171679 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.184489479 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158726304 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.183860266 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.161852155 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.183566703 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15842332 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179683421 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158087809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181870412 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159575111 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.184254768 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159672268 seconds)
  done (took 3.62018275 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.176974357 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.19692233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.263252261 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.162483098 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.184453786 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.170141045 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.187260265 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.16614168 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185787128 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.169595165 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.186353786 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165987542 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.199926174 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.162128265 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.184734393 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.163760264 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.183050572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166707924 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.181380934 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.26624983 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.16700803 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.187362356 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.161130109 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.18577527 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.160918059 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.189063919 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.167585407 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.188374466 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.162035464 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.183352125 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.162681801 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.192384911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.161820238 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.191089468 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.162739029 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.186898621 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.158932974 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.183826876 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.162510438 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.182767566 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.163999059 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.186233973 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.160484107 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.189740027 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.158777197 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.185081868 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.162573553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.189552447 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.162423488 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.185094729 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.1606735 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.189981752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.165302829 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.192425707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.166283913 seconds)
  done (took 10.753897423 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.17478962 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186895021 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.173310284 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.184288893 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.165888837 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.188832748 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.166224731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.186876194 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165078906 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.181890853 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165237025 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.186824768 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168390317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.186484777 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165332731 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.186309405 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.161715651 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.186013913 seconds)
  done (took 4.102204469 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162101556 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.162624354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.18978549 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15995681 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182709723 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.161891947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.187419914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.15993275 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182093387 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158889046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.18224718 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160961087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.185658847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.164820687 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.182103397 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160181383 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.182364561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161309035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.163586795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.18670173 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160318772 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.182513342 seconds)
  done (took 4.698027701 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.172551918 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.288159425 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.194714864 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.300256871 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.15690059 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.180666015 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.19148873 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.163640941 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.202497905 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.16119534 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.183697485 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.158869804 seconds)
  done (took 3.277588047 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188117602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.221486863 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161311275 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18821843 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175069331 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190783932 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166429956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191031502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173572322 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19937971 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189841615 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177179677 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20082926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17668932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195596501 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195414307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166666319 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190925185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164638361 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206065565 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16776118 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197032079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165337667 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191331982 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187988009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176267986 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201317428 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178377747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190761458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179595785 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192693061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191335444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178359465 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.205513717 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164874645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196684375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166645593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.207284671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195564783 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174805726 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18779899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170496969 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199535164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172705007 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199770874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191219645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172415208 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190542795 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167078014 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.211705758 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197651868 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177812183 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193604582 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173784949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198037418 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210318986 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179622974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198665715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172135116 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204158289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200316968 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174118573 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199549706 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178421323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195310117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201008525 seconds)
  done (took 13.27903303 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202645769 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186255598 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169640526 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202061501 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174923761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190138787 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190074295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168495428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189940713 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166548674 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.234711083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167164817 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198245418 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198820943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166849607 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191034835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168130787 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200241197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165295028 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.212506485 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190905748 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178486351 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202790381 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178247059 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203037476 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196595822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172681467 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191463575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169653103 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191301231 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172837318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192152438 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176721401 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.192122549 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17748618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19248553 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191401886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176814249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191793012 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173948643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202095782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184131738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192517433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16941461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205505302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193019991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17226282 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190157981 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173527652 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193091651 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184444389 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.209426031 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206749919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180064919 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194500915 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170699545 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192246061 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169996153 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192992419 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173317124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200963244 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193112613 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189542924 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196799838 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172570565 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204417968 seconds)
  done (took 13.304913548 seconds)
done (took 236.979775348 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.333402846 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.360208457 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.157375951 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.480994919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.178942215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.835117623 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.878983719 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.264858876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.155843017 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.177444501 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.155864623 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.200321466 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.501568354 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.177615049 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.158251041 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.199175536 seconds)
  done (took 32.150713129 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.365072335 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.412839951 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.199708872 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.162103749 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.185993633 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.162396857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.184588117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.164571968 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.186282694 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.168331811 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.184761212 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.160276966 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.191111217 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.162350874 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.185510403 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.161295145 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.189145884 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.160668421 seconds)
  done (took 4.543742063 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.18443553 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.248096623 seconds)
  done (took 1.392360898 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.195565784 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.283887074 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.385341381 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.2359575 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.185037548 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.203997769 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.234978185 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.175598294 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273225938 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.199613271 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.174621085 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181135386 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.190552482 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.193535084 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.179318808 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.182666752 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188206946 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.203359666 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.197501551 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.163583415 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.211535727 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.164770079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.192085899 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.17586756 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.266072309 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.194071692 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.163910409 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.186634484 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.167487155 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.197104057 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.173738967 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.201099688 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.171939254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.241734908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.189045394 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.240517455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.164403043 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184880148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.175773951 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.188044282 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.167555349 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.18784513 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.197708739 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.160815862 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.18553973 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.169434813 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.185730913 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.168336756 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.194259923 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.166614144 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.193871614 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.17148735 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.239172348 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1876552 seconds)
  done (took 11.610038301 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.019144294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.211446194 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.187883194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.130032567 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.208416387 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.175507499 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.003426038 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185279447 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317296496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.065027795 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.203274179 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.169534516 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.331167657 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.342535317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.344478391 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.426683057 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.848553056 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.198038263 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.219200643 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.205685466 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193395547 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203696688 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.181542707 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521260593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.160843062 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184708688 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.191878873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.176513156 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244601584 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.190321746 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.169745598 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.264382717 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.368427798 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.275809182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.186668421 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.1608108 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.187577203 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.255072416 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.339404112 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.288943058 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.256562886 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183586835 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163204431 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.193962335 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.180103015 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184998676 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.250212186 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.261140053 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.262002506 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167147632 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.194563678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169810435 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.189148574 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.248332087 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.158097125 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.451421117 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.430158991 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.188110314 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169943617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.202570056 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334797793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.190100625 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.303714988 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.210618572 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280189427 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.161256202 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.911290149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.253321974 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.164874332 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190579091 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166815519 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193430267 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165292936 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.252271836 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49781874 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.172081521 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.189274499 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186123896 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.29552675 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.165968285 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190619834 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24768636 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166261691 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.192919426 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173355783 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192616032 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257907772 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.343015681 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.167582906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193943355 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.168254952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197482028 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.162188577 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.298713484 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.324420664 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.245388401 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.300784592 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166518928 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.249983506 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.250859716 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193043013 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.256790133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1688647 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200393997 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166067028 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.31740882 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.22421151 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168486902 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.192992991 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.172121099 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.228237978 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165871002 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.195869212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.26309449 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.56022707 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.254752465 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.205120679 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169176748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192101343 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.220338021 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.198991985 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333288461 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196706113 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.25471396 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.16716975 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.185377761 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167513142 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247769173 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198730265 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192176547 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168227943 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196201933 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.349196932 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.292401373 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.171669965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.336747256 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.236685481 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191786062 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.265874034 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.19261755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254403095 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174988667 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188813491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166345096 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.891550079 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.199632758 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.194292835 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169152936 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.273159964 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166265681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194949992 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162491796 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.186174759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873497754 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.190957541 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.163300829 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.189969438 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.172753851 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.193680447 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.173187917 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194272885 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24826382 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.316449107 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.197132089 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167777238 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.188619625 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.246848145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.164667118 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.190944177 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164425492 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.189219403 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.173399743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193670192 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.166436209 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.257217394 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.250200022 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.325441747 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.636668477 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166376296 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188679002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309586714 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191513647 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.397072438 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197921345 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.311393037 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.257031981 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18920876 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.437073239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.256962459 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.276242038 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.170430216 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.260609535 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.189091468 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.17371998 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.254602537 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.192130453 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.173482675 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.251858516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.203701916 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.176276062 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.356101313 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.167373698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.320316921 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.188930516 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.264176442 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168030764 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.198454627 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.40174379 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187786141 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.183601102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.255066086 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.193983333 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.169274222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.040154397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.19271956 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.176321465 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199767162 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.304681473 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.253547927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.200211414 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.172720574 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.201661701 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.254160046 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.299461728 seconds)
  done (took 62.884753494 seconds)
done (took 113.533267411 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.340063215 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264989436 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.404732914 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238539873 seconds)
  done (took 2.309334815 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.353704141 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.208762122 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.305888774 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.191707253 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.315152923 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.16572275 seconds)
  done (took 2.546272991 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.243423937 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.231569166 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235626953 seconds)
  done (took 1.723558292 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.284683137 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276647247 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415720573 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.332561922 seconds)
  done (took 2.38716446 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.353975435 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.18369003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.222178924 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.295044971 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.313573847 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276020051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.217076063 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.217463104 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.229252616 seconds)
  done (took 3.354948667 seconds)
done (took 13.32821415 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.215310495 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.22712074 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.189804431 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.208523559 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198795127 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.227251818 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.196832473 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.21907715 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.194717811 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204055054 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.189919892 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.203196932 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.312335053 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.223610707 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.177932297 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.216459538 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.177665567 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.22614175 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.198493219 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.199030706 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.197775383 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.200536983 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.174139298 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.208464609 seconds)
  done (took 5.993736576 seconds)
done (took 7.011307642 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.314225873 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.165977576 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17268028 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.20374471 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.292831088 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.181283389 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.218743212 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.200217499 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.192289157 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.196621044 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.167662994 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.210792413 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.178222085 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.322894855 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202946557 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.167936914 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190374853 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.189850618 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.213400621 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.18856502 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.293687019 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198373731 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.184466322 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.18987468 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.293439536 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165575949 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.20060025 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175439897 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.214119693 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.175248514 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199870406 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.166039196 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.21795789 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.189826142 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190084768 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.174716242 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19261111 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138855098 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.200175363 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178153558 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.211998034 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.179257235 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.204555943 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.173441403 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.201705976 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.177324923 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191273719 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.183476507 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.190022073 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.175406441 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19446347 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.194466609 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.20146349 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.167714295 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.19104518 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.165170249 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211739551 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166965265 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.213013924 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16589373 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193360046 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166933608 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.202940851 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165698022 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.199672384 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.170102708 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204830962 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.176478512 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.205532587 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168943507 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198049678 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.177448384 seconds)
done (took 15.127070838 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.17905511 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.236427805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.315462782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.317117822 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.227140895 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.194664051 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.209041547 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188823579 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.20445817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183825163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.232561746 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.19780635 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.337015042 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.189254704 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.209862977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.183172135 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20403507 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.172704849 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.308266968 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.221263955 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188288783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.21005095 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.217269157 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.182961507 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.195613499 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.204744168 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.20087386 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.177941154 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.196017832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.178178728 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215024466 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.171229766 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197440264 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.186377528 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.211843519 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181170558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.208471244 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.206845883 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.170758283 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.194495032 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.179515817 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.212238251 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.170942662 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.212827192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.178748198 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.215489793 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.177471499 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.207282646 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170399422 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.203779522 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170605273 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.224790986 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.182822537 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.21345119 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.206763148 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.185336296 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.208487568 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.188060421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.199582909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.184914786 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.194449313 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.189517007 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.198240292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.191397972 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.19795427 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.18146115 seconds)
  done (took 14.479759531 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.194123169 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225443376 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182961952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.207460449 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176679528 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.190094169 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.16435282 seconds)
  done (took 2.390988487 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.172104603 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.326385201 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.312785313 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.313472606 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.312096711 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.354242664 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.194755709 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.193397737 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203351742 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.203422246 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.325350124 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.407442327 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177109356 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.206016863 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.319623101 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.164515185 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.318265395 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.297054393 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.209618258 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.318335779 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210937062 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.202314422 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.208566514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.167777402 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.316553815 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.195174004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.365361961 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.21375617 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.178761319 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.205687126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18129859 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.274640722 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.320939688 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211670367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177404723 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.314935448 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.308157922 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.208345556 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.391159074 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.179165131 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.308301187 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.20841823 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.192435248 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.217931778 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.189387906 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.307481709 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.215751464 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.189403704 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209440072 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.333754178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.210333353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.326752568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180030364 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.209519472 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.180558604 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211010791 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.19074587 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.208330713 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.332844449 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210875099 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.319951305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.31985824 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.317139913 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.31709757 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220504669 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.323524872 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.305583806 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.178467176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.31302497 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.211469489 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.319132606 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.206552116 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.180736492 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.306170132 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213041069 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.32306493 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.323885988 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.20423747 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.180423127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.198145628 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181699346 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.192190615 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.31138681 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.183719383 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.205838092 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185771244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209779363 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182432815 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.312198594 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.220633548 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.20858206 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.179343187 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214346698 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.18043699 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211464575 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.32404097 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.204307591 seconds)
  done (took 24.84219892 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174596274 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.165968205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.19960214 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.193930392 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.169994389 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.167714362 seconds)
  done (took 2.15167401 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.209772186 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.208220317 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.190675746 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.2102472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230567546 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.308926309 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.320311945 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206116072 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.229263922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.193973655 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.313265397 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.316067828 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.313616074 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.218035354 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.319360598 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.183177572 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.31878975 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211316432 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.189535281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20893507 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181094778 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.214230755 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207320108 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.305960226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.18890741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.21233557 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.175389513 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.223532806 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.190203404 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.20417644 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.193114728 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.210853863 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.174009552 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203546862 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.321471794 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.205493444 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180735534 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.212773591 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.185946494 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.210173308 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.317670685 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.183139722 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.220311065 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.184549558 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.206770986 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.175070138 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.215553684 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.17732265 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.348054738 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.187882151 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.213815488 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.18827782 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.21299839 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.187838274 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.202529462 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.177643319 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.212909074 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.323215921 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.189169611 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205059246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.183001925 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.212169197 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.202746872 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190045429 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.210464352 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.185574088 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.203890952 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187906826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208757143 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185086556 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.215036691 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.183762332 seconds)
  done (took 16.886482934 seconds)
done (took 61.790307466 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.713319405 seconds)
  done (took 2.800568137 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.222440083 seconds)
  done (took 2.314004525 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.311480837 seconds)
  done (took 19.435889846 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497830445 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.41602386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.090086028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241602014 seconds)
  done (took 3.335179175 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.150879908 seconds)
  done (took 2.254347089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.464403863 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.34549691 seconds)
  done (took 1.903706186 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816042238 seconds)
  done (took 1.925013506 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.878013208 seconds)
  done (took 2.975843864 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364549759 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.283623967 seconds)
  done (took 1.756630549 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.716297006 seconds)
  done (took 1.83124593 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.447000676 seconds)
  done (took 14.55933999 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.319972989 seconds)
  done (took 1.43577582 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.36101148 seconds)
  done (took 1.480770987 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.725568851 seconds)
  done (took 4.845078592 seconds)
done (took 63.953190619 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.188595057 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212073787 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188423124 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.209916551 seconds)
  done (took 1.903234889 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.191631819 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209079439 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.187928616 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208294235 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.189514093 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.208436374 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.182141194 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212186955 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.182213118 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211205436 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.183517307 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.208657009 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.187629163 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.208076316 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.182707946 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.211978686 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.18686134 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.213051016 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.187181717 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.210579154 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.183681871 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.21075573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.186369588 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.21380516 seconds)
  done (took 5.869225376 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185111031 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171952179 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204513888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171674841 seconds)
  done (took 1.852906799 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197648468 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.222391412 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.196222051 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.218281192 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198147306 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.223450569 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182387735 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.207693482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.181679216 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222797475 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.198579881 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.226274257 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19508229 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.216703765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.22065793 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.180352602 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186274694 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.224852554 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.219474834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.201113414 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.214066084 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.192720391 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.209513368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.195007184 seconds)
  done (took 6.055865305 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.267786526 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223964311 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.208841725 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.25720206 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.239741945 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.180007722 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.238785344 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.192682777 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.216927558 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.190229031 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.211753026 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.228071299 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.216553141 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.183173803 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.212627283 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.216269469 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.191638841 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.213787398 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.224551956 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.216357413 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.186265506 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.223485364 seconds)
  done (took 5.870936144 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.335889719 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.174518194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.202128912 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.172392927 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.216405635 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.176960714 seconds)
  done (took 2.410143627 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.178079913 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.166768291 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198656215 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168114958 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.200876377 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169117196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.20425676 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169308435 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.199135367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.168228933 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.201957644 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170592364 seconds)
  done (took 3.328389879 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273148913 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216861767 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348266408 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.46426523 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260948676 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262862126 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.381513215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227809007 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.274586033 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230588224 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278073866 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227127853 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247878237 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285739576 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207281735 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.238940723 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267565187 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304714605 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207729899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308837241 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250811097 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270211556 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.284943287 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214221148 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232419136 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254052533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.186080689 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220769464 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230959725 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256957968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271011754 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244700386 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205971934 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280003782 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32499198 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274270725 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.390638054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199326126 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.255198904 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.292490455 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327228095 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206512658 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318682002 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220159917 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226242341 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288067161 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215984358 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.281382079 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.227530552 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210943669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277203282 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276525078 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265325092 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202486928 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397358014 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228336783 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.235688337 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244013031 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282720478 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299458227 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278086882 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.216903613 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265428288 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258685304 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312279874 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.236318879 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.26107017 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189611161 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260363668 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306495315 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279157677 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253794852 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.286005771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199131337 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268593401 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260091422 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221694752 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305016632 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27051689 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.213702107 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218383374 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229190604 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192186189 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.285744878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216939563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314408483 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199363286 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.268881965 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273267526 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218184616 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257253251 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255050468 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226521483 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244672138 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153048412 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238553341 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.25205863 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223233775 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224474768 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245258631 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205721489 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221388876 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24503082 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.189115688 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267119597 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.186985161 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255930146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266614572 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.198990485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276553632 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245564617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.229822422 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263637529 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296800003 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22632124 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199059018 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319300693 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268581315 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.230982214 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236923242 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.295375045 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.233890394 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201219378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263777328 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29072 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239014588 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300340814 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205322182 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232253531 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.189934219 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272699491 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25509589 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.256559468 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193136318 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.263107984 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284404284 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.19088972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235980249 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280676928 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199183992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222965126 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231013698 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204068309 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.239555428 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.217379086 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.235112084 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24944879 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235213396 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263738473 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255924607 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200521329 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270979676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227293805 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.267272886 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214154433 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.214117562 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.270626198 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265823402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225627507 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277569606 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.2573036 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273770931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240261333 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22649685 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277974669 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195225114 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.216739124 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227263742 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266969724 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25990602 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287745699 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270731844 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.260884959 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.231467098 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247547421 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26563175 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285620009 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222919898 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.237179509 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271156536 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266089455 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.188549472 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.21828355 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194918577 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234166388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197104785 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234220559 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27845048 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259529335 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269640854 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234687084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235420887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.295395714 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.191534101 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257038707 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.273927883 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208233689 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289467136 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292016259 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277605951 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236144169 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231535219 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.217406389 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192900672 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230486338 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255113187 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205220761 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231450055 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208605081 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291035251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265811231 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246130019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282295803 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262370238 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.301404115 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.190631161 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.258466661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232896157 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267200687 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.282221974 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200626591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.256646248 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292353238 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209685619 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28854398 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266851907 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281819056 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291688753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.232011988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228428488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241726844 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226069378 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237125847 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255999545 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209072808 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227808742 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215380403 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.234579786 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237655889 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284854283 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20979717 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272986897 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.25380684 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267162723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193672674 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238956234 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272990541 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212593995 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.187394918 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232225871 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290155328 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248892305 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250103584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238104396 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227558174 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.413681069 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249846222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269325956 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234614359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205652541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271696358 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255006272 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256086356 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250469065 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241793841 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310657062 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269229255 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.206649482 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228452494 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212778746 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249099478 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.221345169 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.220867286 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.263968443 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.241346808 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287711499 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205072936 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273654615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275509884 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.213185439 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.247006315 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23637906 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329227278 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240347293 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270209849 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.265050498 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.261925975 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252076212 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222936618 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194137665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.2335594 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293343034 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199996911 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277603686 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.267067393 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280567422 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275436792 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259782032 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211125565 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.227377515 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240860371 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248272738 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277178748 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232290132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.207494425 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285822329 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.21130703 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199041715 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25796946 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387048703 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216822405 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26857633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.160567126 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.392006738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228788206 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200820329 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257375964 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271865443 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.201463781 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.283149475 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278121689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207520777 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257971865 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233625335 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276219213 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248659738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268576065 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275145154 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.247648995 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230188902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256663765 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270522094 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246504125 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.21538367 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258200041 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298388765 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.242788804 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.231549552 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272357414 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239824647 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273077108 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271895082 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239704574 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250205728 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227356032 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264851982 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207506491 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223327716 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257158813 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.23585635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229436317 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275088902 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272824161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200058384 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228354969 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217563185 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2702159 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241335336 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.20467631 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285029869 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.231376021 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254391116 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313981489 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229146611 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.26898763 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212195392 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230723932 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208509533 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243670035 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233118801 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.24551421 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279376291 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.198988256 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274601876 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267189292 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264620434 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22314414 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242535912 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.368260612 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.196635405 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29780199 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25133618 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29644377 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217650261 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278472742 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274431437 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220744972 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267009978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249266113 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.322001004 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234700374 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.269572872 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233270043 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214480291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239399668 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.202529164 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251853045 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271566065 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209877161 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.237844308 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.268656709 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214450901 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.246809211 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241358896 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27209102 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252288563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288172267 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.288267733 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208167576 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279884006 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274613612 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229213911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.234492623 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274311841 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24570068 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22401316 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.238114044 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.237758637 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289542104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.227738413 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26212263 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246863996 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279374246 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277533609 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.205054129 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2813084 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243311212 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278649012 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196641804 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.253417989 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270533073 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205471478 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.229893695 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.246612994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261189214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.27447533 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210883769 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.278265708 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300395171 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.193035708 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236129922 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390796723 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229554616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294674266 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.221360022 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205763296 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248215339 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260833508 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.235796844 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275036462 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.230483902 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199694899 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247218367 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.217496269 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.223860622 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273945805 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252810089 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2584718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288164952 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.203572852 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.357851322 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244264351 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241615053 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.204406703 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.198068435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242881531 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236004347 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218000746 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.278629198 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321063753 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.266875324 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.217821696 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240295489 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.227371858 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200583446 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263602532 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223359752 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273627158 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252502946 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1595899 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243125838 seconds)
  done (took 121.247169429 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262968603 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.228489992 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.242388553 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.297449604 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27364327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.367250157 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.305445515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.3215078 seconds)
  done (took 3.551247867 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.192326256 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.235767132 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.245800685 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.216267886 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.181956625 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.566064492 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.237818603 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.221297212 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.231208458 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.224595723 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.210300107 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642697364 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221355071 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.219562725 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.220272353 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181879159 seconds)
  done (took 5.490405766 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.400686115 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.749429167 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.310963623 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.421633421 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.378284776 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.295629574 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.952711592 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.288017301 seconds)
  done (took 14.052134338 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.245222532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277093838 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.47214222 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.441311555 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.286806072 seconds)
  done (took 2.979082463 seconds)
done (took 175.716174466 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.198449932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.224661622 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.195093461 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.227591252 seconds)
  done (took 2.091524987 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.251538424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.147476624 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.183033709 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.14813133 seconds)
  done (took 1.984264849 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.475924252 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.157822634 seconds)
  done (took 1.919489373 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.224166222 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.236254552 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.218861837 seconds)
  done (took 1.949717927 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21379277 seconds)
  done (took 1.480138318 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.194986482 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190820668 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.378148564 seconds)
  done (took 2.032596696 seconds)
done (took 12.716846553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21774442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.023542951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.656416138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.202476813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.818615542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470074813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.56701579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.250083755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.308212513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.18515938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.248459659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.763202403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.548998553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.949946215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.534702219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.950023003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.796867627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18202667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220303936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.182138032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.545731521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181015379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215848746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1829825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.792503563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.48755901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213140142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.960905057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213325958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.190906959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.502387169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183444864 seconds)
  done (took 23.996082596 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.187567992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.271341762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236722867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.217535698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192858064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.216056733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192331574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.230252491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.3183417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183110329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.237399688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18213457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.22573179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.182965511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241495646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18409151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.217105086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186073642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220704006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18556432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237627567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180160734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215907163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184819343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.214646365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.23116963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.183401451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.224795296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.184751482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.223856547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.189454295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21711781 seconds)
  done (took 8.073644295 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.229209963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.281407446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237510174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.253809035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.266862264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18758543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.304036963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251512901 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.290405514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215991314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206186569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.21504238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.257550921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184845936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.238898563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.182659916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.216399898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.183204573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220713719 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184346231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239301033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181870476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215356583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185714135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.222358659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202363073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214640131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19693152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214051954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192735282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222156852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.212945487 seconds)
  done (took 8.383478602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20049688 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.228840908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.206507748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.239458002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.192871073 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.228348689 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.198140577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.223080606 seconds)
  done (took 2.995837826 seconds)
done (took 44.713300792 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.208678491 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.230910349 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205911763 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.228701327 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.345607465 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.189528189 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.235134515 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.190420222 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.235768323 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.206468592 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.21686315 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.191140873 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.234187156 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.196540833 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.348662094 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.230845439 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.357808024 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.348843547 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.189952574 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.232296951 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.191180839 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.351649617 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.230986244 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193119679 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.327767016 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.223024908 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.341091841 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.198023582 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.227444875 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.182000497 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.346373144 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.228128497 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.190809031 seconds)
  done (took 9.328236237 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.299467862 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.227106086 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.190910726 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.226332415 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.192957496 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.223843073 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.848116899 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.19221869 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.225754485 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.191535158 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.224467679 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.316029815 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.197880906 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.220078387 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.19505997 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.167314081 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.332968097 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.227295183 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.187359343 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.154036213 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.223596351 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193013206 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.343728893 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.222073617 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.192569028 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.226653775 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.192179797 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.233020782 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.193867946 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.224426084 seconds)
  done (took 8.584247204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200609948 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.236467538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.21262957 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.292488576 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.222577541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.237582295 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.207670302 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.236746569 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.213518073 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.220597602 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.201742075 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.254419134 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204935339 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.230171681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1856357 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.236577528 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.202455259 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.220106231 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19381935 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.237876996 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.239931465 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.203231477 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.241665357 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.199638108 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.217049006 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.194841654 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.22899993 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.200167802 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.226712092 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.20186134 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.221156266 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.189508939 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.22050164 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.222149677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.221601984 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.200500881 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.238562737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.199142896 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.233306426 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.219974031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.223117394 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.189181733 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.246693687 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.243139635 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.223452688 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.196936779 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.223365261 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.203588322 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.217957192 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204599523 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.262394016 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.219957034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.209109359 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.218538975 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.185861798 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.228681877 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.187157778 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.223090841 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.20252683 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.221142127 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.208582393 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.227154994 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199558903 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.223800629 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201348436 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.219728796 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.186957568 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.223158849 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.214281829 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.228786312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.22533809 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.221791753 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201140705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.233389707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.19877284 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.232573486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.186728098 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234638182 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.198016657 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.225558177 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.199992642 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.223848002 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.189312577 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.236917321 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210114937 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.235058628 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.200897605 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.233216846 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.190570062 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.223723371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20934161 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.224447543 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.194131988 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.237138539 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.190932002 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.223994092 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.201044951 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.230386519 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.186335328 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.248787533 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.195179165 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.22216416 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.214173143 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.223933131 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193076938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.231470328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.228448265 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.224011087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.196835349 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.231473706 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.188708881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.229412668 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.189875517 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.220041089 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.203458759 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.237632456 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197110031 seconds)
  done (took 26.609732889 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.4511429 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.438879888 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.292379137 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.522763046 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.20242665 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.392292805 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.43714098 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.439714808 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.223544488 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.222010705 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.281367607 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.43699501 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191288128 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.251922016 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.443909865 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.522730738 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.22006231 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266229564 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.258922272 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203295579 seconds)
  done (took 8.021045587 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.202567003 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.257964125 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214078334 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.239753854 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.200458105 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.235033871 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.188733721 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.244624876 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.199736362 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.228545173 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.193080782 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.230867216 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.20392647 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.236332586 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.203998516 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.242610921 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.199014512 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.228228076 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.211494944 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.227177119 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.162766145 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.249505902 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.201027073 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.245793672 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207779544 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.23301205 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191821406 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.227916359 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.1975696 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.230526022 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.194937185 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.229325281 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.197088022 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.165502879 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.234657842 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.204185901 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.22851208 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194349125 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231083527 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194018974 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.23969531 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.201026196 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.230509111 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.161620616 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.242278713 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.170469667 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.203226684 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.237079654 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.168454807 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.24575744 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.205182179 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.237091269 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199461226 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.245247353 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.195579591 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.239365411 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.200843534 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.237495234 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.194400028 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.221805292 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.188981372 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.227077137 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.198577394 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.238630891 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.204364963 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.231277269 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.19794931 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.221578147 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.194025054 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.225049543 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.192363404 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.236505284 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.211576141 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.234075872 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.196452758 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.234491248 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.198051409 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.155190692 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.231116415 seconds)
  done (took 18.241073564 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218107717 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235096877 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.206455244 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258695465 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.201343862 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.228958295 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.200438996 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.243241164 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.20397363 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.243214425 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.206015905 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.237657232 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.211296388 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.235414963 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.20124795 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.240017 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.201556187 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.262545783 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.203931988 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.251783737 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.205919674 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.230863141 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205808805 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237980013 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.218810463 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238195183 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.250967964 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.205381744 seconds)
  done (took 7.623394456 seconds)
done (took 79.683293613 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.541819787 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.682831663 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.437411148 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.454015894 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.464550278 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.451199408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.439966978 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.456285572 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.070768305 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.407003456 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439555272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.44347304 seconds)
done (took 31.6761052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.509292874 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.145872411 seconds)
    (2/2) benchmarking "String"...
    done (took 2.149271508 seconds)
  done (took 5.632428402 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.122952078 seconds)
    (2/2) benchmarking "String"...
    done (took 2.128805355 seconds)
  done (took 5.57372617 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.425709886 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.447057411 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.823097275 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.439590852 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.427166866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.430587077 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.430875458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.443795669 seconds)
  done (took 17.769345957 seconds)
done (took 35.232972121 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.506790403 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.608384318 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.662666696 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.424037612 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.431085852 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.424340443 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.429986172 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.464195364 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.450975987 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.432076582 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.865198163 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.682885688 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.442079838 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.806474662 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.424265079 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.44555368 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.443213354 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.665668838 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.43051376 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.465459025 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.41587763 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.41109617 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.443089279 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.439807218 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.439885499 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.442909372 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.481193298 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.43743289 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.694241826 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.440404463 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.477964107 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.4288149 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.479835678 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.428852922 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.449018375 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.433128225 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.711768929 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.445512139 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.428305397 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.433712363 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.720557276 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.441991124 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.429499656 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.431245128 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.4239037 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.439444014 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.426909886 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.551686421 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.466309195 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.429496989 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.494015166 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.827992068 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.437412656 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.442325817 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.444677839 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.684794043 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.463311977 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.520507464 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.459231201 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.445519927 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.431582877 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.43054011 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.479820665 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.447941907 seconds)
  done (took 158.96521903 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.433239272 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.434559166 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.438231295 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.439418874 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.439141404 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.435051869 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.435290955 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.4343001 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.43413971 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.441828723 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.43913807 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.439015115 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.437365963 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.3802264 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.442975344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.459475581 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.43538861 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.436893797 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.439378995 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.437549896 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.445368266 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.438367946 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.430985865 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.439115528 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.444833002 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.528698068 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.445819202 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.458470729 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.447288051 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.434878628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.446543324 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.443319835 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.134813557 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.304201352 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.456060267 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.435361662 seconds)
  done (took 88.781122778 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.438173571 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.435687164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.433582939 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.474123363 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.437444794 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.05604326 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.07546078 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.433239127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.921243286 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.029771631 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.438958727 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.717060344 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.428387366 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.530889553 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.444374043 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.432440087 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.532137638 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.461300957 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.435204208 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.441165194 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.082305495 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.454147054 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.561260863 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.626615922 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.435589186 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.473774197 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.837573691 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.435558694 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.478067524 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.781676451 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.470344025 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.433925364 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858648261 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.871139248 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.553897625 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.434383492 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.47631993 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.439069998 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.440531985 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.729909149 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.434234052 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.440667186 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.447520791 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.15195286 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.443044341 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.059347616 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.439300882 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.500412031 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.441925016 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.439754876 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.982980945 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.332651633 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.440277327 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.441941096 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.445635909 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.44018285 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.44347754 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.477940442 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.985549756 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.415894039 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.445538978 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.447888201 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.479157362 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.443764274 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.592286183 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.44262169 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.545231781 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.49780942 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.646812483 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.08397993 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.439904692 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.540786957 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.557575954 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.436049485 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.442161237 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.443218209 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.442869976 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.558491755 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.439190555 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.441511667 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.268353184 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.624553815 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.43645826 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.083666211 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.54569488 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.438849209 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880306136 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.4434099 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.443230798 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.272616563 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.543958248 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.438770826 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.446409758 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.444858934 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.26813739 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.087177101 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.798535565 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.445828129 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.26566062 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.44352942 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.443800903 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.400095488 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.056387366 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.185474192 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.448039066 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.558863106 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.628172655 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.441403956 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.446882899 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.03319808 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.445276742 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.501340042 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.44477725 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.849951771 seconds)
  done (took 407.887546696 seconds)
done (took 656.964021971 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.427326056 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.422522988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.445196406 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.426386132 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.44306263 seconds)
  done (took 13.504686316 seconds)
done (took 14.840234086 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.443298901 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.438111961 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.44099024 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.179347552 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.443298832 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.440039206 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.442890394 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.441875501 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.441136407 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.441695069 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.170872585 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.443037317 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.442774499 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.369233723 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.164800293 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.442702576 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.276832489 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.442566286 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.441574266 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.776440745 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.456567157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.510236965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.730100355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.490394435 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.753762696 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.796856264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.461362283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.664516328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.498387295 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.472584306 seconds)
  done (took 20.954855366 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.27894974 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.786584954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.473353117 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.517472449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.748841933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.496470588 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.764921525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.790447646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.456629694 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.635240892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.476838031 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.472544276 seconds)
  done (took 20.957952001 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.146763885 seconds)
done (took 93.028872412 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.487298778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.559708684 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.480341384 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.464488782 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.458791076 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.464076755 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.462331042 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.463061299 seconds)
  done (took 13.18493763 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.465173829 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.464860035 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.464011417 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.462685424 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.463076109 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.461690571 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.462139709 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.466857515 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.459819688 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.460215373 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.46434833 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.463529704 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.465238417 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.459767427 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.462583712 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.465427204 seconds)
  done (took 24.755915968 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.465898951 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.462426783 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.460754495 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.462726138 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.462414438 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.465967839 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.466652674 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.463092444 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.465789751 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.462454812 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.465514637 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.465768749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.463220738 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.462731391 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.463998422 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.463785881 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.464753964 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.462747686 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.471937912 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.462065564 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.465360787 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.466167937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.465587651 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.466647933 seconds)
  done (took 36.492305887 seconds)
done (took 75.774972159 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.468206023 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.454747368 seconds)
  done (took 6.269024304 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.524540153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.525558514 seconds)
  done (took 4.397475823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.465195756 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.462581228 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.466889232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.467231773 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.465546695 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.466134456 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.46360105 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.465197178 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.465918495 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.464931839 seconds)
  done (took 16.000297298 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.465785216 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.469849765 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.463796729 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.466618548 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.465762866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.466161264 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.468004054 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.468991429 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.467230628 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.467616733 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.470831819 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.467905365 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.465965219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.470497327 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.467133921 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.463242078 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.466720092 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.465378152 seconds)
  done (took 27.754539505 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.477650631 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.485874885 seconds)
  done (took 4.310336721 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.599211502 seconds)
    (2/7) benchmarking "second"...
    done (took 1.509945255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.5705612 seconds)
    (4/7) benchmarking "year"...
    done (took 1.568663078 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.507101467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.49159896 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.512261616 seconds)
  done (took 12.109093384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.466228907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.76497446 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.950649922 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.629579897 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.454746244 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.475056112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.439540253 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.469635289 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.478766253 seconds)
  done (took 16.477994605 seconds)
done (took 88.663682209 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.456087452 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.507117723 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.468551129 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.474018603 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.815412524 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.514437996 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.454389819 seconds)
done (took 18.040728739 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.442328337 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.45310914 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.450125613 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.473179738 seconds)
  done (took 11.166705192 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.456654011 seconds)
    (2/2) benchmarking "read"...
    done (took 1.77996688 seconds)
  done (took 5.584706973 seconds)
done (took 18.099547056 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.468354517 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.472792666 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.472649365 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.476027746 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.469642182 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.473507374 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.469851026 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.472055217 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.470612729 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.475139548 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.471931112 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.470429364 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.471862163 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.468330837 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.473331534 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.472317952 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.474690123 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.470913155 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470679008 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.471498229 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.472320048 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.471130401 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.4704235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.473492679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.47256459 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.471805254 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.47388257 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.475167058 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.473330057 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.475803751 seconds)
  done (took 45.515656881 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.478960921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.477706991 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.473789375 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.473189258 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.471414003 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.474334154 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.476380223 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.472980272 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.473507979 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.475384111 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.47332648 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.474089022 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.475892802 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.474479573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.475327863 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.47738973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.475145152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.477414308 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.473788333 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.474735348 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.476268062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.476701868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.475764319 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.474750935 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.474691257 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.476041203 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.480218649 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.480774396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.474762653 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.476443976 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.476631734 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.473440226 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.479207722 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.477553885 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.475978197 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.478094614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.482125785 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.479679893 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.478258108 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.480060705 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.479274936 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.478764199 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.47986734 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.474901517 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.475074178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.475153534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.479973308 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.479046695 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.479752146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.476900646 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.479712988 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.478412197 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.47800349 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.478002772 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.475535728 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.474989701 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.476218429 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.475279247 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.475762457 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.477061497 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.477768923 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.478735563 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.479540609 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.47851209 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.475540498 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.479907534 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.478620839 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.477813071 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.477151277 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.480089099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.47838945 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.479479401 seconds)
  done (took 107.689794003 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.480168895 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.478222996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.48023696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.478378581 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.480793265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.481923164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.477640433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.479756759 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.477050943 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.480022422 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.478929885 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.480546356 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.481382483 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.479725666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.48087753 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.476871991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.482259394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.478059056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.479703357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.478932868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.481465711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.481516762 seconds)
  done (took 33.910493118 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.481951767 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.47823014 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.479380015 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.483673788 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.48352561 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.485003278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.478583994 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.479400417 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.478910407 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.478921362 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476226878 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47757701 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.482792705 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.48141703 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.48064051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.482766889 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.480766396 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.483748248 seconds)
  done (took 28.009501976 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.48302744 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.47842864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.481362825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.481210209 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.482530247 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.48351492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.480162397 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.480233579 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.483226592 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.479580252 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.482819954 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.480395329 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.482935884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.483049631 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.481194835 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.482861111 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.483123319 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484040091 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.482150828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.480624579 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.481238892 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.481270005 seconds)
  done (took 33.960337504 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.481846809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.48478288 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.485555701 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.484454284 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.484305402 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.48401078 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.482734119 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.483891316 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.484624147 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.484842815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.487108738 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.485177934 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.487762128 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.485628672 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.483515667 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.482895815 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.486118566 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.485400121 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.483939676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.484508796 seconds)
  done (took 31.05575016 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.486583759 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.486037198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.485248225 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.487181515 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.484671511 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.48502419 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.487647629 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.485108468 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.485797278 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.485738705 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.485530859 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.487052686 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.485891184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.483294823 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.486438062 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.487135724 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.488238469 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.484140333 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.489595771 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.482245549 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.48590339 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.485589777 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.483754138 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.487063461 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.485687472 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.487763386 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.485025825 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.487599411 seconds)
  done (took 42.968551388 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.503502654 seconds)
    (2/2) benchmarking "in"...
    done (took 1.502935287 seconds)
  done (took 4.369043374 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.486368321 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.485454983 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.487694131 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.489591204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.489133251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.487416058 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.488303714 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.487395706 seconds)
  done (took 13.264559206 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.483900895 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.487671494 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.489323933 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.486620376 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.48688955 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.483816825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.488541475 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.491632487 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.485503861 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.483043753 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.483997223 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.485211017 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.485659875 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.485800309 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.485611834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.487808741 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.491726694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.487630574 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.486809125 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.488925483 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.49091517 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.486101922 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.485999046 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.489452834 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.48800943 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.491076373 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.487477511 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.490359875 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.484071566 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.489304813 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.480575862 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.487360655 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.488576153 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.487055743 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.487205228 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.491281468 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.49046666 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.49429459 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.49196148 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.492062712 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.491850548 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.486980639 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.484432023 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.487755885 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.48680727 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.487762581 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.488188421 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.488440301 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.482525572 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.490026237 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.492656285 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.483013629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.486482499 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.487165516 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.490660299 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.497903347 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.495757572 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.485064526 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.487009807 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.493255608 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.50058177 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.496320768 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.493155993 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.493692115 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.490038935 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.493326461 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.495998675 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.496926203 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.493825192 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.492101748 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.494013591 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.504450849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.501781881 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.493268361 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.489087778 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.494191703 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.487387909 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.49705835 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.496645763 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.49944442 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.494726584 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.492910136 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.492213988 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.497885988 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.490505181 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.496328523 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.490520269 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.494042939 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.483716194 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.496331166 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.50026188 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.495086344 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.48834387 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.49009768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.492861191 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.492348244 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.491406292 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.491264416 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.497691509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.49790631 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.495584624 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.491352638 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.492528782 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.496391599 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.497435701 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.498882052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.499098359 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.490397984 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.501306154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.50218272 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.496295873 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.492606339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.496435952 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.501129977 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.490437837 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.498299241 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.498933292 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.491209334 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.500671202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.497392331 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.495038265 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.502143315 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.502872483 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.499541889 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.495854894 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.500589716 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.49607905 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.496851973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.50184809 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.494651078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.498089623 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.496193732 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.504634562 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.496049339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.501302573 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.495317679 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.500591555 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.49928472 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.49949507 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.49629125 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.500990479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.497785421 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.50045139 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.502868443 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.504297105 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.498230976 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.509764875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.498732992 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.499889839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.501253551 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.506037778 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.50316458 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.496725363 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.50176802 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.495965659 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.502012051 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.496175235 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.502260171 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.500885514 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.499126333 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.502042857 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.496763281 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.499792111 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.502216589 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.502796557 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.504733753 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.504338504 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.500678212 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.501073261 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.493915612 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.506021801 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.494644983 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.499983372 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.503059958 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.498976405 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.502444564 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.503460285 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.50554893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.50389274 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.50257401 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.497995441 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.502046503 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.508883725 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.506979051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.510680919 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.504172037 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.501526013 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.499861405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.500195122 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.502465544 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.50005024 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.506674713 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.51119403 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.514207218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.499510627 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.506526343 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.496999173 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.505214801 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.50546705 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.509324923 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.505416381 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.504802521 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.500363968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.507840241 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.500743881 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.50689215 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.499453529 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.506290761 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.506521865 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.503914768 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.504748034 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.500660029 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.505477477 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.508867611 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.505634478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.504203838 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.501052488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.508641762 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.498275495 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.502222337 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.508354013 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.505475656 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.507009599 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.512196678 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.504670219 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.510850879 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.506069729 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.503536645 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.50937301 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.50627142 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.510020475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.514968815 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.511170008 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.506197403 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.514105526 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.512381443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.504144856 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.510371353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.516313739 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.510168989 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.502852318 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.511071156 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.508693026 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.506295273 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.507323752 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.504953189 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.512803702 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.510419203 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.515595422 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.501569271 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.511814302 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.50382774 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.50937531 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.507095184 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.511901754 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.509951147 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.5136063 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.515353829 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.51003386 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.504824572 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.514341648 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.50679244 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.509781433 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.505893924 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.513121511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.512134627 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.511952838 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.510045761 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.509023134 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.515133836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.505490664 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.510873362 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.508462465 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.521370372 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.526748729 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.51267965 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.515491993 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.51357496 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.511925339 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.513208839 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.507780212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.510187604 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.511702169 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.508883521 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.507296304 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.51300098 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.509387087 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.517973849 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.509154691 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.510821846 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.513849785 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.512518299 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.508021866 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.513040899 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.508596576 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.509848189 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.506445926 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.516023346 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.510735643 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.515627457 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.513965922 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.511335033 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.521518307 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.516699678 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.51014475 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.510453335 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.509150874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.510870916 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.512585481 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.517668428 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.50802918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.516326221 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.507360695 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.512472421 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.511453001 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.515351312 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.521537071 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.509733274 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.515631481 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.51483038 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.506631783 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.508364729 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.515833178 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.520650834 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.522397564 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.508030329 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.514207798 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.514532993 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.514677642 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.514603006 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.514113789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.512918597 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.513874784 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.521486573 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.520356066 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.513127014 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.518622448 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.520770107 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.51273235 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.514039085 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.511540109 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.514962505 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.517797465 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.514259476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.517058294 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.513665596 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.51812845 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.512441773 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.515111627 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.515544454 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.51463636 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.520960127 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.523194804 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.517099908 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.517917965 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.52226485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.522788119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.520127204 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.526696076 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.51396157 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.519603037 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.516601382 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.514019607 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.515185476 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.513527927 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.518865178 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.511285304 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.522376543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.517124499 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.513510709 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.522869095 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.524593713 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.512686352 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.517476729 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.523065474 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.509680355 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.521746936 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.51879763 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.509378259 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.517979665 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.515789531 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.511457043 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.516022964 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.515096252 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.519458559 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.51704601 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.520172603 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.513169438 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.521739301 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.515342342 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.518127716 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.517677338 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.518625243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.51381264 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.520225828 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.519356367 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.527727358 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.518951623 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.519816225 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.518175918 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.525967449 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.526682151 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.51578776 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.524629432 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.52072122 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.516086928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.522196532 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.527263341 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.517661621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.523669016 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.514096924 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.517462773 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.515659005 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.523049144 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.522706028 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.523543844 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.516129038 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.515773151 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.521807293 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.520641447 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.519611691 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.518808333 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.528343689 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.516505509 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.518259996 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.523164747 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.519782079 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.527703626 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.518979301 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.5220585 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.519988811 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.525319215 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.521367972 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.520568819 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.518513879 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.517995452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.526730337 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.527619359 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.5223125 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.519876972 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.524669025 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.518207407 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.521703235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.521794355 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.518322368 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.521348499 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.527050639 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.51689948 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.519435797 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.516711629 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.523992969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.527346004 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.524998385 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.51953521 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.532939883 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.532275321 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.530911168 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.5186993 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.523163563 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.519869056 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.523436336 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.52588157 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.519350886 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.534857517 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.530618069 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.526733289 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.526929804 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.525432277 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.517775116 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.525852817 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.52407772 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.522557665 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.532304205 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.523352609 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.531404242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.523949611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.527036673 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.517825745 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.519917257 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.522481926 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.523511164 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.527533658 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.525469041 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.529665888 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.525635307 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.528649241 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.52620741 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.525611359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.526327516 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.521276581 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.526584537 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.522890887 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.527863275 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.53006633 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.523406945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.529264298 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.527686279 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.524463172 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.526779894 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.530337715 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.524630094 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.523366785 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.528461497 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.53302666 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.532337697 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.525945562 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.522965758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.526118604 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.531845466 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.526561619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.528017083 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.523323088 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.536251043 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.541212871 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.525986479 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.525768747 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.532688918 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.535216907 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.527165029 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.526841616 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.525581947 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.52987053 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.530951267 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.528234832 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.533767464 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.533711191 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.527983811 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.532032139 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.524524683 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.529276533 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.531888581 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.536948517 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.527097222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.525407468 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.53891435 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.539650175 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.529037353 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.543814766 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.539180984 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.532969057 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.535118859 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.521908242 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.528377131 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.529978648 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.536815316 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.529709309 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.53190557 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.532406098 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.525794868 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.532476983 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.537946026 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.541782058 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.531698113 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.525051922 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.528398187 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.532380255 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.532639065 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.535501304 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.529946275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.532215649 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.532229367 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.526511471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.547115061 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.55083001 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.538030428 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.531123691 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.530841058 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.53333234 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.536904557 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.533393553 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.536547575 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.531824749 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.531441615 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.534480351 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.539851251 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.531863045 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.528320069 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.532588688 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.528400221 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.537646961 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.542377537 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.551211402 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.536932635 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.536766591 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.534071107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.530213012 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.531563492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.535438227 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.532582493 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.528056325 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.531090056 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.534117269 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.535788032 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.533059204 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.529288398 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.54014791 seconds)
  done (took 902.453917111 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.537355157 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.532679059 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.535999651 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.534067281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.536833506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.537890383 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.534231484 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.536366795 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.535328558 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.534942119 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.534045032 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.533824915 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.536123448 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.533051517 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.535700831 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.536746129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.534247726 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.536255336 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.536066281 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.535458187 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.538577992 seconds)
  done (took 33.646268624 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.53732947 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.536493268 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.536355922 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.538446068 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.536457078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.535516846 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.536996601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.536880728 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.537161127 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.536341785 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.537749594 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.53977217 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.535924662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.537633038 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.535651855 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.535720703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.536422147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.537866837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.537808205 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.538460463 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.535772163 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.538716228 seconds)
  done (took 35.216830981 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.533887917 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.537569421 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.53343314 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.541971208 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.537660144 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.538101329 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.535462198 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.539048672 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.538259654 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.532626995 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.532544094 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.531114229 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.538940482 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.541134477 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.535155953 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.542842844 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.534499339 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.536274867 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.539516706 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.538316906 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.542512382 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.544303414 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.538682945 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.532925234 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.539993498 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.540387878 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.539014064 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.538895167 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.53207357 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.540839004 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.536196502 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.533323868 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.539771864 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.538836748 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.5313634 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.537854795 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.539565637 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.540836146 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.540863981 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.538981232 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.548550952 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.534796454 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.540424019 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.542674098 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.539033917 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.535798523 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.543089826 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.53431586 seconds)
  done (took 75.230336991 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.539916416 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.539753078 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.539542011 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.540762651 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.541313969 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.537676214 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.541996596 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.541020387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.543436319 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.541129593 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.541859418 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.543137783 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.54136753 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.539317536 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.539183798 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.54016886 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.541264019 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.542189686 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.542360192 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.544910472 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.541572556 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.54059338 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.54059533 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.543101912 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.541570032 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.537632377 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.539610957 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.542179805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.540270472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.542135185 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.542787978 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.541438366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.543116108 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.541031764 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.541577095 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.542624023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.541393075 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.541683628 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.540021378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.542242764 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.540279532 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.540743451 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.544271477 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.542114681 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.54431813 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.545385721 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.541510624 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.543944589 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.541676664 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.541336467 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.539733707 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.544419913 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.543243173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.546243976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.537917359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.536760884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.54035498 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.54499501 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.543679943 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.545363145 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.541583762 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.547340165 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.54234288 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.548153464 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.545792945 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.542819744 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.548453078 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.545588403 seconds)
  done (took 106.266920171 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.545074437 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.546149873 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.543929372 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.54634772 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.544384954 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.545580933 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.546652771 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.544905471 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.546611822 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.545431778 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.547076541 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.547774294 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.540774456 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.541846727 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.546952345 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.543949079 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.546631503 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.546728407 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.546277696 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.547160553 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.545813474 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.542181273 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.546813489 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.546574409 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.545454159 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.548118765 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.547771955 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.548647512 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.551186721 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.546084701 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.544304329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.549867834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.547979953 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.547228062 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.548005039 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.547888315 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.547807648 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.549166704 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.547943695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.548624837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.5517856 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.547630276 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.551628484 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.547616857 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.547631393 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.548598126 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.546622141 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.549559629 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.549890747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.54520335 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.547471198 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.547825225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54989549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.550436796 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.548483582 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.550625444 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.551073611 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.550873225 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.550396873 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.548355061 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.543917645 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.548946585 seconds)
  done (took 97.343805822 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.550528801 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.551050627 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.550380739 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.550318465 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.54787642 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.547710144 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.550666358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.548362721 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.549682481 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.550977838 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.553100792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.552064861 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.551545025 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.550325928 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.549691107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.552488094 seconds)
  done (took 26.221911239 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.551182845 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.551844077 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.554180542 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.54949291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.54945498 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.550496731 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.554445167 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.553145517 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.552125156 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.555770759 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.552764523 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.552001239 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.552839314 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.550985708 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.550788425 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.551797297 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.548288841 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.552700084 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.552587804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.55301428 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.555473621 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.553092047 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.553943376 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.55440345 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.55350581 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.55429684 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.554522541 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.552305547 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.553100448 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.553705288 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.553647049 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.555156598 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.55374238 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.554827552 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.556210503 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.553152242 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.554435489 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.556702521 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.556325178 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.556441172 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.553786647 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.555180946 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.555195918 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.554954783 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.556891398 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.553750013 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.555096195 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.556266377 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.554090721 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.555639769 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.557313097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.555423953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.556850965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.557750073 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.553957988 seconds)
  done (took 86.878832411 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.555142123 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.557080936 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.556162654 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.556411729 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.55785991 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.557271524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.559143886 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.559393556 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.556418967 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.556991058 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.5560738 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.557833995 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.557547162 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.555827154 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.55786742 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.558831269 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.557419671 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.55787355 seconds)
  done (took 29.449614509 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.559222645 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.5552051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.556681706 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.557348164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.555276208 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.561213422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.561141864 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.559182727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.559824086 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.557736512 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.557732946 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.560322163 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.597707175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.557739988 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.557726228 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.557167586 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.559145898 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.562650461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.559190196 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.560072915 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.55909824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.559644517 seconds)
  done (took 35.748799287 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.552756135 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.553134781 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.5528063 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.568957297 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.562265857 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.551193626 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.552171974 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.553213905 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.566924843 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.575825216 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.570252437 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.558828598 seconds)
  done (took 20.139158686 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.559748775 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561188019 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.559911461 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561305865 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560163355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.562834593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560830193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560630104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.562325924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.562301385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562578985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56279866 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563017524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56169653 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.561608242 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560725093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.559953402 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560013038 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56219988 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.560787272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.562480256 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.560923578 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562700712 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561850916 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.561493112 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562390926 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564581472 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.562030891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565956699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562211283 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.561190002 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.562619754 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563858305 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56386631 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56501495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.561259365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563362217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563817576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.562570473 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563174846 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.5633304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56258123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563167048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565379443 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563358001 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56245614 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564581376 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.563187074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565949141 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564507725 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.566696235 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563337726 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564335322 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566212187 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56280939 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564978004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563718507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566951858 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564686422 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567312855 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.562807215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.563568271 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.561507956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56710325 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565086047 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563012645 seconds)
  done (took 104.580942145 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563223181 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.564450118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563666531 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563507345 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566104339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567096003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567646478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564576656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565007842 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.563412527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56536047 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564514108 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566081889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.561841064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567689804 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56651676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567664843 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569947245 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566613416 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564934502 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565627084 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565057128 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567335653 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565538325 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566860558 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565612165 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565377311 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56614725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.564641148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569722939 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566611009 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567594668 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568939194 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.567496441 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568533411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568449264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568473919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569627525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.564671954 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.563490272 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567651343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565039715 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567614586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565216288 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571129193 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568923861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568518086 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569537604 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570318452 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570221176 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566055218 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566047791 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568965059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568630016 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56804104 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569510647 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569598296 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56896614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.571247062 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569112264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570050244 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56668375 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569106464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568467065 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568112516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570833598 seconds)
  done (took 104.856973964 seconds)
done (took 2000.124757967 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.555472717 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.558119479 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.561746802 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.896929314 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.553060961 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.246554638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.230587208 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.552249177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.563063433 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.563349436 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.561238835 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.554196214 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.890391542 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.554713023 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.562344855 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.559238219 seconds)
  done (took 58.391999366 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.594471406 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.569253181 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.704684035 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.567712919 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.59432008 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.776825556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.630733723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.56776407 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.776489596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.571995818 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.560334702 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.580070664 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.564745739 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.559450348 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.582725639 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.785736114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.865872897 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.553054569 seconds)
  done (took 33.836329951 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.096727541 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.563407806 seconds)
  done (took 6.092013322 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.589543459 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.570612713 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.5698691 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.565483171 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.560631002 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.550479292 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.569052401 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.565278417 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.558819499 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.721805214 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.568624393 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.582244017 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.569002266 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.571500011 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.574292693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.61779491 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.703477471 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.569924526 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.574064346 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.577461422 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.56913065 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.760245377 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.608563827 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.57826841 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.719794841 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.573116211 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.578716856 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.582664285 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.729802703 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.571799183 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.570793666 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.570127864 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.57210969 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.563809071 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.135841957 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.571262895 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.592295363 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.573972542 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.576770468 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.724764048 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.568979287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.57833097 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.564567246 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.148425767 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.700223334 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.795857568 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.556494772 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.565215899 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.572083617 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.726735442 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.564423254 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.573913676 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.640084459 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.557464093 seconds)
  done (took 99.009564845 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.60951604 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.563752302 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.756190036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.58073327 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.55569206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.554620573 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.574510787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914503729 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.63404053 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.562508251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.919390301 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.262312617 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.557592892 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.611049472 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.602504837 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.591718955 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.566429861 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.55548834 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.556894255 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.55815555 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.178690216 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.583722101 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.555004971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.750810121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.605363599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.176081456 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.571915708 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.556539913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.559837548 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.558736242 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.226171448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.556436597 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.628713049 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.558944993 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.890034937 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.024309207 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96795425 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.5568289 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.573927759 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.565281262 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.555769342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170966999 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.99091577 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.556264546 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.559149787 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.161051419 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.558108353 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.579418803 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.567928051 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.845344395 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.564482529 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.570150997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.574824927 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.55352615 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.56813451 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.638795007 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.625133471 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.177257705 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.556079166 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.558466266 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.56986115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.573315474 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.554989501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.568487971 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.561809975 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.997446317 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.776301077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.567445944 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.004758 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.20650529 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.559650159 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.293677645 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.563626972 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.588893029 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.689235816 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.572316871 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.579332649 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.160296882 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.570310707 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.562601752 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98657632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.563564965 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.914451583 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.592714295 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.56063511 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.192674065 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.580404643 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.636339451 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.57156336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.566093361 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.556675695 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.575503312 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.895781141 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.607397106 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.56861104 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.5679945 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.612523911 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.566580431 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.565361897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.577807806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.29706074 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.568978458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.572995139 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.576641634 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.574955695 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.566707097 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.568109896 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.571793499 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861164552 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.561198604 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.569636043 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.576176206 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.566973104 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.566171287 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.772756143 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.578675451 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.931862234 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.566879753 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.584732009 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.566903544 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.56989979 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.569137092 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.567071325 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.563529688 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.53035232 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.896160581 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.581316882 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.57973384 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.576535799 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57499183 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.585674949 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.56235182 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.610577081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.57882514 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.453940443 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.588013827 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.605815547 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.572849024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.583882395 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.571859582 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.584886326 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577422556 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.905804416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.891037299 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.845155854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.567869394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.564753072 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.439302934 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.603105384 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.755957846 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.583433614 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.564892686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.883539951 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.772369294 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.57643964 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.565323287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.574202653 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.868697479 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.566573989 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903161136 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.248217351 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567635535 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585184349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.455803109 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.340916321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.566712512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.578289843 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.911949229 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.592978591 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.579509654 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.577421059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.58028672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.576698939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.578424341 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.570227364 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.576686576 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.575627863 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.650647535 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.782319223 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.591420917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.573707035 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181928926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.578156688 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.569188107 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.570492736 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.571673195 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.578832355 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612788541 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.583443602 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.608900257 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.575037363 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.577600746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.211268434 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.566307623 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.570015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.781145219 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.395149898 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.582462315 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.581636726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.56920286 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.606355833 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.199802457 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.5726548 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.95201441 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.568572946 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.619588705 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.575753339 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.596481024 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.20024238 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.577506152 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.566627979 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.381450769 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.567201569 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.352188707 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.572642553 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.576411596 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.300267597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.56911933 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.573441101 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.569091915 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.572666319 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.890419729 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.569749181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.619846345 seconds)
  done (took 553.683569275 seconds)
done (took 752.444380021 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.582774406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.584439254 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.581641049 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.581596419 seconds)
  done (took 11.781178565 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.595049962 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.589482347 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.594010084 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.590940595 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.596145412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.586226635 seconds)
  done (took 11.004229989 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.581058655 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.582796677 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.583912073 seconds)
  done (took 9.200678083 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.832593456 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.590594635 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.004363335 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.582763058 seconds)
  done (took 10.462826506 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.595237818 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.596522278 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.595343132 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.594636289 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.597244888 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.596907976 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.597384368 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.595795223 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.597345741 seconds)
  done (took 15.81502529 seconds)
done (took 59.712521897 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.660704074 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.663042047 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.587643531 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.647415388 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.72101859 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.671020511 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.66952975 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.667364929 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.670973672 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.621612957 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.658980565 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.615881132 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.666001871 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.787814211 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.621356672 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.670563231 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.613948794 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.759482897 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.666072408 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.619604284 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.693841757 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.621106194 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.623160375 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.591803971 seconds)
  done (took 43.242103723 seconds)
done (took 44.695233616 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.610370265 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.699898162 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.5886768 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.591598513 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.594629564 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.592278145 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.62057932 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.595844025 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.612801947 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.614867683 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.593919189 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.610242796 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.611126594 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.611002368 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.627784233 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.596537625 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.595937349 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.609067609 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.617220365 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.62093285 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.596364228 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.594853431 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.628371497 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.594239769 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604150714 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.604385243 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.602323355 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.595023128 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.598122761 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.61693155 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.587243965 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.58882074 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.619108562 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.614907644 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.599013768 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.608471048 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.597950654 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.699208209 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.623617836 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.610850026 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.609367109 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.616366171 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.602137945 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.601612416 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.613502413 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.632125536 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.603431461 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.613154673 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.590437874 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.590316676 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.617542296 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.6113426 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.613777845 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.588555236 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.598901015 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.610952675 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.611511681 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.618119198 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.606748198 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.600663713 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.631643631 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.616252055 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.613965748 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.606421031 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.605905292 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.612994481 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.610423576 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.621438655 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.610086048 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.600098681 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.597661143 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.611794361 seconds)
done (took 125.342620754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.721091755 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.591903941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.756047937 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.601726206 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.766876337 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.720214074 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.604789147 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.604297631 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.60532262 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.402285483 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.604014386 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.601460618 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.590944151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.600736045 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.71658015 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.60503061 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.605941073 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.303327751 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.601404757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.732734194 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.60056672 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.604790847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.604044368 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.41208117 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.592630417 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.596900778 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.734530579 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.606853204 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.312320676 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.593339888 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.599073478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.307687034 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.736646571 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.623401278 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.615115084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.618365719 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.771171204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.606765832 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.726705943 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.728112747 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.761341096 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.646921756 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.592420755 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.592721167 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.61341834 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.608479565 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.607277884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.637018742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.59993119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.60889224 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.307114197 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.619592023 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.612776847 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.608947185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.610381306 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.63692889 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.61052698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.612329261 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.740932486 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.60740529 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.728287317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.409718068 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.40554319 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.607974205 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.59834279 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.60768689 seconds)
  done (took 126.381831322 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.670206444 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.679893728 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.728994387 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.603398385 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.653353024 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.727087528 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.592527528 seconds)
  done (took 13.119932449 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.609269097 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.610242886 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.651923635 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.64988195 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.607795453 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.777148843 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.610012231 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.613465961 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.609831901 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.655026107 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.613508773 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.610593482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.621308334 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.601684447 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.65236257 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.616205115 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.723229217 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.607183008 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.610635373 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.81597054 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.612427961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.61973158 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.658369291 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.619519058 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.612558902 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.612411496 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.365978791 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.6116211 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.609957736 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.612627652 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.614167076 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.673762328 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.609808698 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.601472794 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.613387735 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.719393563 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.612903701 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.614353685 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.616839152 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.608530764 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.613395078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.617374448 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.613318697 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.614396545 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.610999072 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.631143992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.6146888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.6126252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.613788014 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.617170321 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.655914845 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.613947568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.61285628 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.610904456 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.660647294 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.619559253 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.607135934 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.616438327 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.614459779 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.615509694 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.822625233 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.65440009 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.611853416 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.655036832 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.612368068 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.611882352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.617243176 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.612941934 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.702214139 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.613665986 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.653752707 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.612810485 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.791686522 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.632493782 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.613281504 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.612336529 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.612037961 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.612926627 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.604648361 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.614671465 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.616546869 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.61289346 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.6151463 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.616857031 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.616887695 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.767966723 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.717801579 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.61616866 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.626353631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.61616585 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.614921686 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.659684374 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.615183946 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.617012823 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.662288552 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.730634041 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.661010778 seconds)
  done (took 164.796554127 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.621633298 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.623900535 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.614735867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.639517114 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.609931565 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.610757304 seconds)
  done (took 11.190381144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.613165394 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.622262313 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.617085216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.618101066 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.617927534 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.620817171 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.614604103 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.612853459 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.620885556 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.618933436 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.615784427 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.619309991 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.620104432 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.617671198 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.619370481 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.618655727 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.616741499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.618046796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.618430766 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.621573892 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.608336662 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.617731565 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.619476974 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.614493859 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.626527391 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.622101387 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.639347151 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.621111254 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.619480813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.623374285 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.620504114 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.621225629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.617139197 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.621420747 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.619908091 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.619696005 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.624129977 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.621491641 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.620642451 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.6195767 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.621251033 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.617327782 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.622897778 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.621486032 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.611383854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.617487032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.623356017 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.635668735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.621467543 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.621867658 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.611763971 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.617179414 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.621363339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.618633665 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.615303915 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.615667929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.623795707 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.618623059 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.622942493 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.622109402 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.626650779 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.621495907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.618433615 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.624740934 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.622892169 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.621449715 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.612952925 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.624242395 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.622539628 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.619006429 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.621729347 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.616931403 seconds)
  done (took 119.108295685 seconds)
done (took 436.05334149 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.933127198 seconds)
  done (took 4.405486562 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.750976302 seconds)
  done (took 4.227706538 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.301561071 seconds)
  done (took 25.779533536 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.641327369 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.600950618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.631845793 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.598274585 seconds)
  done (took 11.947349734 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.211760538 seconds)
  done (took 4.68594813 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.617990609 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.626097369 seconds)
  done (took 6.719524501 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.984703899 seconds)
  done (took 4.457676853 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.340219831 seconds)
  done (took 4.817410075 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.628764021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.618131316 seconds)
  done (took 6.729466804 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.593940411 seconds)
  done (took 4.067961995 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.232237478 seconds)
  done (took 16.707311498 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.627907537 seconds)
  done (took 4.105900342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.64624913 seconds)
  done (took 4.118042973 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.689322068 seconds)
  done (took 7.169077502 seconds)
done (took 111.413516854 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.613314251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.601563551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.597094368 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.599216956 seconds)
  done (took 11.885326395 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.688729552 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.686253614 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.696037646 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.684034217 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.679865546 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.69150331 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.650609109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.652785129 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.679885421 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.676629755 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.692283907 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.680262069 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.692110097 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.650741749 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.676062 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.693868357 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.680449774 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.699397845 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.650619781 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.680841613 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.625881509 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.685715023 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.675306691 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.630407072 seconds)
  done (took 41.675665316 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.109741466 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.681148361 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.762509121 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.669726647 seconds)
  done (took 8.697158874 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.731678827 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.723790773 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.745992634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.782099818 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.830096563 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.74562224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.641333575 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.642652091 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.629521759 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.726969003 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.799634131 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.722140537 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.939916111 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.624385502 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.937463025 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.616310468 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.619825213 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.719584391 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.778534244 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.807018898 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.619649085 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.732073687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.732810654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.730043981 seconds)
  done (took 43.056129873 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.634552403 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.636363216 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.626500106 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.642048995 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.628952449 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.6288389 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.633271058 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.632851246 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.630529386 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.62730254 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.628218488 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.632657811 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.629608148 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.633409174 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.626121541 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.631072832 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.626865335 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.634523099 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.640253403 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.63166392 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.625810041 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.635419697 seconds)
  done (took 37.373067921 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.617881461 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.617356006 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.956196178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.866150403 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.612107509 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.60294979 seconds)
  done (took 15.752366359 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.701230849 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.86360988 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.618812912 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.064247034 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.13288243 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.611613604 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.623211813 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904916546 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.284476476 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.296552363 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.66150801 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.702018003 seconds)
  done (took 23.946567482 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707480206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.624990383 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.64353673 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668165605 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616091654 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.61618512 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.687254184 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163624486 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.628788665 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892107174 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627481921 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712305834 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875606085 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6274289 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.630114734 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.604942162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855588049 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206806634 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619856908 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632131973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659822755 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.626315417 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636175267 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873604565 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631864839 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614011083 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.884267074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.622903407 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966653309 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942086693 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941922311 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628521759 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90146842 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122657746 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731781579 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874468811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62956095 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.61703611 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.60228366 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.618382069 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648208466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.63166257 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934421272 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.630680739 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.618267597 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630572203 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1903292 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.640382756 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.621919719 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.62037744 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935026873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71498246 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.627187299 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.63053422 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623366277 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625624955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.632482863 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747091917 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269288059 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620198915 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642200216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.629000673 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.615774798 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617429297 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364961873 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.626164509 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.625245499 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627990738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621717752 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.628362745 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656551805 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618342525 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.638948575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61990215 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516780537 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637429101 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632417067 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274459036 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638470465 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.634616299 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848384383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619209 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626242293 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.634817126 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.616599625 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508858256 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628856689 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.604871114 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655836864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176203361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880522373 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652667995 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653087318 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845857291 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.599513624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631486323 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.626775441 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638256872 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638849381 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178173619 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635704074 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.627385611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877109685 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.833317157 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61991729 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.610136061 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195346568 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650516353 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.65939105 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644128529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880149161 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.357074521 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95127078 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636329736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671714165 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.625501273 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.581552698 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637219031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.642895509 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.632257195 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947563235 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.593728062 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624407314 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701502717 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634669848 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.62502913 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637066648 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638228473 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625547239 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.856635005 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644332654 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946515332 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.63989226 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625113671 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.623711899 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650135242 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.634445515 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.852201414 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643973324 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912645678 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622757199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62804621 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626504766 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.844833587 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.625117258 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.63175981 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968039694 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621572501 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.640434602 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949666124 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675455686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746109995 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671543128 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.62801498 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891059136 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.631199478 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.637534977 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637060195 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64395586 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632516206 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.63692581 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644189305 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34670568 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613074774 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634986218 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63256743 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.643562693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701331425 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634890608 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880155078 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.641030697 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629424122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.636553301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.624383928 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865157149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935598047 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.653239635 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808309171 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.191364938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348284405 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645641753 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.630317098 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.627772539 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.62995455 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629734082 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626233469 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.636911565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880253895 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960627265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.654806402 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346035935 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633849202 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.646165295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.651361818 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938105077 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.652554519 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.630545134 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.631899491 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643705355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652587811 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953689606 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865787662 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.656411376 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.629752335 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.191236418 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640272185 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.631439865 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.629585289 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658295534 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646424758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244828847 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972093851 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624078389 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943587389 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662494542 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.65649839 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.636623305 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645034451 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656702921 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.649315563 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641666775 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.879897459 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662028159 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645724902 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271096261 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510671562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279104149 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64060338 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.638655318 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.645486282 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194560961 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636562814 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633404236 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916546465 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202472965 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646400354 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194247048 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.645977752 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.543120531 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959502776 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875727384 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639936208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.636109777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964870823 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860408806 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659134322 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648054331 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644569647 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.608770217 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281021804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654656091 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823719669 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194621126 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647984203 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649816321 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.703995731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6487151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111531691 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.643053584 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634482511 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.634327026 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651134884 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298923227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653115194 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63576517 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362136946 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637141137 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.216025578 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641595107 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884996729 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.965229552 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.9447212 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.654175733 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.636794415 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.898245751 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948927399 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651166136 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.636047307 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339046453 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.52477217 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.645527961 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634981662 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.591588544 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638588878 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991555834 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.666697667 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.651235924 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659094879 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637858938 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636274978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.640254481 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.644387503 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606253164 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222666706 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.632950527 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67778631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662745593 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648019001 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889078485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.653514033 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366077544 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881507065 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63397086 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672754254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.645171224 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641834682 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.63207332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642849259 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.640765751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642806606 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.861598116 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.637744482 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.614583493 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.719278864 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849329959 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.638156231 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640351135 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913898034 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.653519853 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.651834979 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557989937 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683186868 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.642209295 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654353382 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.660957869 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673593949 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714342261 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890838973 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.967848222 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970266306 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136343484 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656976091 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657482146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.65617679 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721194464 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647433714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.663638284 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.648165168 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37000012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571146441 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387900486 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975094332 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658196211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649385826 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640956659 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88297704 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639218953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915455948 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647305762 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.633797152 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663952874 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647458078 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673483282 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867244728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917216389 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64028873 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643740358 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655656802 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.646789308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963932566 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.871274265 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230651989 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305375662 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64399413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653413797 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226626742 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928278093 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644286961 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643833846 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642178874 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.663625022 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.663236351 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.652452303 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648363184 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883497359 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960147655 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170823183 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968884145 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.681521848 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.529128802 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643871795 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909974932 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483862482 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894755537 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392202948 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491125228 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898432031 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721617154 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897683287 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.667612846 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882905365 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.657569867 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.6586167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646439611 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645279994 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.64464723 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.962676843 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393597146 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908745018 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.651967369 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.648596454 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689513225 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.907727075 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884292636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.545701965 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86753376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966364632 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.667741839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.647499786 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36504665 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966697067 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661704648 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.650488219 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907569976 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.660536649 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683509296 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.516313939 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.645779788 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299739146 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.860773506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669157627 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651847654 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494633433 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36640543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.661656887 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254464625 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649057192 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656894139 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94026378 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.65752778 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649925847 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952933967 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.656375083 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653904563 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91801947 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.390925797 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.558861452 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.672256796 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664518709 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.665745808 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647992249 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737466244 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648441001 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658399051 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.122242039 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.664117479 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649981135 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662032349 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.656499867 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648247117 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.665469307 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649821506 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.657758378 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.624736925 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.648926581 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.682612795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787507085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287050905 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651582866 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.273847883 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.000299331 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901377545 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654310181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.642202601 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.658741008 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648888522 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650960004 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649855621 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.643404641 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30722468 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.652024597 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.983400615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673486997 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.862579524 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862651734 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660491749 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916733377 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666597135 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692080593 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.632186996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654643395 seconds)
  done (took 1114.589651767 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.705606547 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.707239804 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.675555108 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.683397697 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.666714742 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.705251401 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.700228004 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699065803 seconds)
  done (took 23.057113626 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.643642865 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.654197428 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.661830267 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.654607122 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.654225738 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.213975416 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.670420095 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.65498966 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.671966074 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.647146494 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.663268783 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.37284565 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.671171256 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.646415956 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.672233588 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.656527432 seconds)
  done (took 37.325566048 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.178781343 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.090598429 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.436792062 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.686832752 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.733818136 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.649271615 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.226462752 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.671847965 seconds)
  done (took 31.192427686 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.661438307 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.660342352 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.664143723 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.665167398 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.664003131 seconds)
  done (took 9.832773853 seconds)
done (took 1399.860545267 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.661574201 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.662431096 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.659053422 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.661473733 seconds)
  done (took 8.162994651 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.632758925 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.632087541 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.631657777 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.645722686 seconds)
  done (took 11.060126744 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.091027408 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.296656467 seconds)
  done (took 5.904637621 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.657423332 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.418726609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.403562948 seconds)
  done (took 8.997076476 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.974923429 seconds)
  done (took 3.492865221 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.077029151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.149476834 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.648428969 seconds)
  done (took 8.39437375 seconds)
done (took 47.529488111 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.665604871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.414860872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.822257091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.661489718 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.813776374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.810063099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.96930928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.650299481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.655025164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.664614229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.660985629 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.814127592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.950933129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.415880567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.951437197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.420791701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.814818669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.656700726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.649840865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.656518582 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.96882953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.657967215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.6606766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.664775344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.811315824 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.798392381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.665015078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.421292665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.667479504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.65144544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.797137013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.649917303 seconds)
  done (took 92.051217806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.667586565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.682785793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.654478942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.651099024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.665233597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.654036649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.654603431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.650667505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.658283293 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.652955299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.650916805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.678267811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.655088792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.652855974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.676544727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.652220479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.669076002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.652215284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.671434681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.653161327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.653182163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.654067615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.665377936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.654763617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.669282177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.655366296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.652422088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.653358576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.653473955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.654941871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.657402452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.652776441 seconds)
  done (took 86.602035824 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.655346766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.653424088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.655436073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.665082309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.668225774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.6558038 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.656353661 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.656287604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.659812016 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.654733734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.655886868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.656547787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.655354194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.655132064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.658154661 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.654358612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.654068007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.663509234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.669973022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.655165533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.656415674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.656612042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.654991084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.672702394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.657035635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.659261372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.677528667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.660039502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.653685377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.655532272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.657293149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.660629591 seconds)
  done (took 86.605319186 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.896362211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.66928484 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.671041334 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.664421528 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.672129479 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.668751211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.663257665 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.901622498 seconds)
  done (took 17.333036859 seconds)
done (took 284.110517071 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.669898351 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.67345784 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.699326057 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.671440866 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.68300678 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.698428915 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.904685964 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.697555815 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.893040817 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.679503542 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.681473571 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.683665673 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.617147776 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.822881882 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.661744078 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.673986567 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.678668835 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.671116404 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.691673434 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.923546753 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.700102383 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.673069512 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.673404345 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.689342721 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.662232587 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.742370428 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.75167876 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.844633837 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.82155617 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.760831736 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.670152387 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.692789907 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.673707916 seconds)
  done (took 76.259735182 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.665011123 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.670959611 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.676276539 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.671690028 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.672155294 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.675049448 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.669626997 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.672610993 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.674908587 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.673570556 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.673833697 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.671773411 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.674878021 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.677207735 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.672836443 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.662552576 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.668055106 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.675225653 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.66746075 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.654607147 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.673701257 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.6734462 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.673982847 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.673801189 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.673415422 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.673227429 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.674392551 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.673885883 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.675645536 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.673220367 seconds)
  done (took 51.686342187 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.676041901 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.666623073 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.663885412 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.675792307 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.669167772 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.67508402 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.029972726 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.688072278 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.674166997 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.671568163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.676357784 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.67709006 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.725097587 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.663440213 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.67143634 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.677609518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.677904225 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.671541355 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.675519941 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.686460455 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.037352789 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.688390258 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.031772689 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.7018064 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.673454894 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.670906745 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.676192457 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.678197348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.674778384 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.677494774 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.651773706 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.040810753 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.675114573 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.679321691 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.676073117 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.677000529 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.677529848 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.666140283 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.693376258 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.66975801 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.030990683 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.690376356 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.66532434 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.665331272 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.695086565 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.67705588 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.670916023 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.683696413 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.973989761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.686928777 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.68389375 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.675666511 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.680052103 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.677180921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.973702545 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.694845821 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.673206626 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.665999037 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.676528328 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.034520969 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.696409203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.675099404 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.675141706 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.674445241 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.667599682 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.674462977 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.688336828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.676844145 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.669642464 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.676484786 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.668413398 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.676741274 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.677901461 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.678414488 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.668701775 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.675053344 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.678343696 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.677996787 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.666031651 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.027938352 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.695638879 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.668001503 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.043165389 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.688249889 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.681377968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.681413678 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.680428021 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.779180729 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.025063319 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.629520333 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.690379886 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.672136896 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.02814057 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.684394696 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.676063501 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.66999772 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.684065863 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.683865228 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.669457249 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.672122921 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.679650053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.691489006 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.671605779 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.680864923 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.026762913 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.685916754 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.672162313 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.679933807 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.75306121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.684448283 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.692419784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.680216929 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.034141743 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.683704819 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.682877632 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.673244166 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.693621489 seconds)
  done (took 240.85826089 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.674667613 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.694578658 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.6956201 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.671426498 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.671358531 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.678548865 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.669488317 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.675320582 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.678655475 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.673887305 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.673259631 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.68307463 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.681457929 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.674320654 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.681650413 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.674682283 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.672003132 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.692298981 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.674121702 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.67165917 seconds)
  done (took 51.100629003 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.696896489 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.385614062 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.358457493 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.697201307 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.689387323 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.682543166 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.74374572 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.687942918 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.6868719 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.040070042 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.896812742 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.69436302 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.683916626 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.691250409 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.328381197 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.66989969 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.044779856 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.360972892 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.689269382 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.359254253 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.666386698 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.725614926 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.681248567 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.379103311 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.055138638 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.039627033 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.76489725 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.360996264 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.689598788 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.687425703 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.361636434 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.689299135 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.683681734 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.346251161 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.690446938 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.703320444 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.688069406 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.753448551 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.759269686 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.057570538 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.361610142 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.038988634 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.701006582 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.876886852 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.690130154 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.668033738 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.36621844 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.689496135 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.667109456 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.690127575 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.695220019 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.339481903 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.684486932 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.340071958 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.689886495 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.689410155 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.361522392 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.343295088 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.334906676 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.896411959 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.694907367 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.032100612 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.689004711 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.369112274 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.691614901 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.690723924 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.691260981 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.901670563 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.376418841 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.035424036 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.047288873 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045224512 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.694110766 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.761768321 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.694388424 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.047322685 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.763035677 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.144970559 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.049532817 seconds)
  done (took 152.949290308 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.998639599 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.80898285 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.132986155 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.316060063 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.2537325 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.841919445 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.818068749 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.962081254 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.710547228 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.800488703 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.455358467 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.790801769 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.515542668 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.763954976 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.81376992 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.82623332 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.155909457 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.687240621 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.412727854 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.42788323 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.691584336 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.799452659 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.475292209 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.100268114 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.681724888 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.458558038 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.681601747 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.275132294 seconds)
  done (took 63.202435657 seconds)
done (took 637.581476531 seconds)
SAVING RESULT...
DONE!
