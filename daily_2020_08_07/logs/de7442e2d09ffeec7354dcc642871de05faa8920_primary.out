cset: moving following pidspec: 21207
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.551785515 seconds)
loading group "shootout"... done (took 1.191383996 seconds)
loading group "string"... done (took 0.402130427 seconds)
loading group "linalg"... done (took 7.548636135 seconds)
loading group "parallel"... done (took 0.144462372 seconds)
loading group "find"... done (took 1.260653174 seconds)
loading group "tuple"... done (took 1.822874872 seconds)
loading group "union"... done (took 11.962814029 seconds)
loading group "dates"... done (took 1.242520892 seconds)
loading group "micro"... done (took 0.190578753 seconds)
loading group "simd"... done (took 4.108110377 seconds)
loading group "io"... done (took 0.99302796 seconds)
loading group "random"... done (took 8.286575222 seconds)
loading group "problem"... done (took 1.573429423 seconds)
loading group "array"... done (took 18.458689131 seconds)
loading group "misc"... done (took 1.511685379 seconds)
loading group "scalar"... done (took 37.527677109 seconds)
loading group "sort"... done (took 2.865479282 seconds)
loading group "sparse"... done (took 11.249486255 seconds)
loading group "collection"... done (took 16.614249269 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484902492 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119769892 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126526797 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115086916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1444224 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117542908 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122400819 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082960895 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866529035 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143349344 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109577367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418000738 seconds)
done (took 5.194314071 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162523738 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085999652 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076389132 seconds)
  done (took 1.300434532 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061198776 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130428339 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062829323 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062990843 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06289759 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062869265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062464828 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062584506 seconds)
  done (took 1.647215632 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.06981802 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064501267 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062093118 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064080795 seconds)
  done (took 1.400719761 seconds)
done (took 5.731244925 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232890694 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099439873 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282115722 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.387056186 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.446844933 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087738107 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070583926 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066169932 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123266547 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315852711 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098608468 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.174976106 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084957448 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.171904635 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.972465852 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11299411 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080298972 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116966751 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088117158 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127839427 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.404619491 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074901328 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071159105 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066791914 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063886918 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.639938144 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654701367 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126096894 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079690018 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.09733088 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111730453 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.63384068 seconds)
  done (took 10.337658186 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09210126 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088871436 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065031542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121416818 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090200664 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065901666 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07128999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06386632 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088194378 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.120954537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086769026 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096812522 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062602263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065423478 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072791461 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194461371 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07439549 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075625658 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064619851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076299426 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103972008 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075330173 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075515145 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075352145 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125430262 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166392957 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091635855 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.0929555 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061431514 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075022179 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110161519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120937284 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061597584 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06099986 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117411134 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091826383 seconds)
  done (took 4.437255521 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.927637581 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087209836 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107618003 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098934424 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.611917768 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062132367 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148087351 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235881343 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072986805 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.346640365 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141849246 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.108803746 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061117617 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139366704 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.11047307 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065962222 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.211882319 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11115873 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351033424 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062580474 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.061610304 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.060232132 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063509134 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06266402 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.05849652 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064742397 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.086944656 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081330437 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.159293355 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.916664102 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.24443148 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063862681 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161816632 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082230761 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.353227542 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.064636898 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077578259 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.384699865 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116730879 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061547366 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165154089 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112986612 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.059551094 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110979353 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072775339 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.063818611 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063720925 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066082073 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067336227 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074404645 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097902231 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064795154 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061394059 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158804836 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061802797 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060727441 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062797443 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064199012 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14545171 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061598357 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.137734177 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060482211 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064827822 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094853551 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064170874 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087310309 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.099283293 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338566913 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.023573183 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062343083 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904779588 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074250281 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062695775 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06750877 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062627035 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064112531 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060205595 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063674535 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070699102 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066064581 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06503645 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104568905 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063274205 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065937125 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061323071 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068462952 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092177126 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060152977 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.447640292 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092176751 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061044164 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071602942 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099064681 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06159722 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067478755 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062189012 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061841119 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.060573376 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.171977946 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064721115 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088185393 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064722961 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107579934 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.020422254 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063833436 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061584794 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066139019 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064515805 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063640566 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061681342 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064275 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.062501103 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060138842 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107274171 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063256331 seconds)
  done (took 20.848464651 seconds)
done (took 37.690478185 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248291088 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078451881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078703282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078896789 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078847589 seconds)
  done (took 1.799617108 seconds)
done (took 3.028282179 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103344761 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059914055 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096154844 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094862163 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063092076 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060030417 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093647346 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060628069 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.093335945 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095126517 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097490328 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096615553 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060245878 seconds)
  done (took 2.308825445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066752653 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077489446 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078907441 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05866777 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.0688522 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077488187 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058524127 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076235228 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083106101 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077366511 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077239066 seconds)
  done (took 2.025646925 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066268373 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077405782 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079892148 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061398334 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06954057 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077177841 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058693471 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077193466 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08073035 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.0778994 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07745975 seconds)
  done (took 2.017648337 seconds)
done (took 7.570000296 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065877681 seconds)
  done (took 1.263123634 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523661048 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.61952973 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064618355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083854451 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.178129257 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.095775406 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.225763371 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071287121 seconds)
  done (took 8.238336889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091090189 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065133703 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065302207 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066503142 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069676144 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065896347 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065146275 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066300159 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066543765 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066260406 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065563636 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065059036 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066686807 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065402404 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066236154 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064552685 seconds)
  done (took 2.388205816 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093096127 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092072846 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069469402 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071133568 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068433014 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067767044 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07018603 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069486417 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066771711 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068119896 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070295387 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.067823993 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06718398 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058752347 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069080017 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070271008 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065317665 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068466714 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069165907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070085807 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069536425 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058868629 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067707711 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068276568 seconds)
  done (took 3.002329953 seconds)
done (took 16.106494191 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111267701 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071542077 seconds)
  done (took 1.39111687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068033768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068908884 seconds)
  done (took 1.356623993 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074923195 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05834378 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080283633 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069920933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058879862 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058809109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078621031 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058821044 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058585592 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058673219 seconds)
  done (took 1.87845286 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061452236 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068325863 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065992198 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068332668 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066093666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060120929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063252244 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06044725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068531182 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058929351 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06426084 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079241677 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063981119 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081041032 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063789905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064621873 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066527653 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063448258 seconds)
  done (took 2.41617198 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059416931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060022309 seconds)
  done (took 1.352075701 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063425821 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060286563 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062581233 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062397981 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059709665 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058767292 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.05964187 seconds)
  done (took 1.650623229 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408731397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114416238 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332393479 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06611595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075977382 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241535846 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060358279 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065500467 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065363532 seconds)
  done (took 2.69710538 seconds)
done (took 13.980604104 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07726271 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080173349 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086503113 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414944257 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089613046 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063389268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.10895911 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175374322 seconds)
done (took 2.344545179 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212290852 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.34301646 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.912388836 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063631739 seconds)
  done (took 3.555459215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321807338 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081386064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073949677 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064108674 seconds)
  done (took 1.78321662 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062226567 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067776119 seconds)
  done (took 1.367131531 seconds)
done (took 8.1651916 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062110862 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085747914 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060584576 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060956297 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06086449 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060695928 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060484332 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060572254 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060241476 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059991882 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060214508 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060480998 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060212909 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060338072 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060689629 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060535144 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060425787 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060371963 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060918566 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0604387 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060302165 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060388604 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060698524 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060816304 seconds)
  done (took 2.742304016 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078488288 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062958892 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064440641 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064216449 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064767619 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062864752 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063033101 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061157392 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063321953 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061270425 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063217562 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063491088 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061362965 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063558337 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060921284 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063469303 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063181007 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061562734 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062069804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064964176 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063840545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0620815 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063794431 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062882626 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063364821 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06403572 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061313041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061657533 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062958923 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063178637 seconds)
  done (took 3.156581293 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062057141 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057148853 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05817057 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066293315 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057986752 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058003433 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057920193 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057477452 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058014684 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058745661 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057904475 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057337348 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058734047 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057194307 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057168414 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058008511 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061295865 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074547081 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057587605 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056372755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059812337 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.05617302 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056972242 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057086053 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057808393 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057332893 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057409504 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057673405 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057798849 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058655478 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057579768 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061035009 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062161522 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057337074 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066291183 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061794483 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057539986 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061176487 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059006748 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057009615 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056902641 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056179709 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.055936152 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.055985139 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065051693 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056296471 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057398369 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056996993 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056467008 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.05605604 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.055947001 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058410575 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060953584 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058022932 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055877618 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057290833 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.055930669 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057100473 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055947082 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055737204 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055783926 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059056334 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057925581 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05674707 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.072901446 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058079289 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064466942 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056044817 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059917745 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059228984 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05668707 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071730135 seconds)
  done (took 5.48630807 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085113321 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085159518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062282519 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062413558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058425447 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058174929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065749205 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058095871 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061313053 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076507858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057830835 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061904937 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061825303 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061589517 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058358822 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062327814 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066061868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058048858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057977968 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061636071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058230778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065842299 seconds)
  done (took 2.67003795 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13826066 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063515252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10069874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074691403 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066633089 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07431813 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063312098 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063291594 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063462624 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062950689 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063035886 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062420511 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065469346 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062714896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062763089 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062610938 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063773077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064629926 seconds)
  done (took 2.536623028 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075431983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0634737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084623798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063439918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063575582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062908522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067446735 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068724138 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06285579 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063345999 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068404781 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062682673 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063228241 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063327042 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063272798 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063234532 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06271546 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063462859 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068115616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06730714 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067323014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06801994 seconds)
  done (took 2.713543835 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073032487 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061962111 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076118111 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064176687 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057922275 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057929653 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063099593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062300263 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062923423 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061526486 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06202425 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057710549 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06400478 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0621978 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064033746 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062424259 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061870128 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062359984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06206329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057878393 seconds)
  done (took 2.51605489 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084773916 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061179915 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061350778 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079050594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060963684 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060916431 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079702634 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060984201 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061315485 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081673613 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061047603 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060855356 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079107836 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079042338 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061102011 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079212643 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079559882 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079674401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061119769 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061095392 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081586394 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060780058 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079039943 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0609944 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061194239 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06102542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061342901 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088509038 seconds)
  done (took 3.209352649 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061510471 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060206802 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060242289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060256707 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060580851 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060994515 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060596853 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061892855 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060790236 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060728637 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060697695 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060321623 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060278645 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060032178 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060687839 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060554585 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060398899 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060959825 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060953515 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060544391 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060614345 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060724771 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060447643 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060725851 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060979645 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060359112 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06103514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060752474 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060412046 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060973786 seconds)
  done (took 3.085349904 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072001518 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069708049 seconds)
  done (took 1.407545529 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060719135 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074281252 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057687224 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067473692 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06681559 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061053744 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067654155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066235743 seconds)
  done (took 1.781225941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066089308 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087363362 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060215451 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060300022 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063801376 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114710658 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073465982 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068605649 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073896694 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060358779 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060240188 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071237414 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059002297 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070094641 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061269597 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066675155 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064703346 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06918269 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069807812 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057661086 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069047403 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060357042 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058391634 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060691537 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.05957025 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064791141 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072981879 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069634144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066436119 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057041065 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076221799 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058361885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.05920784 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06631032 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063264138 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057963148 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091972543 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058461995 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064456153 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057731227 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069270275 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076443689 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070399816 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074479292 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060357765 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060529485 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057880313 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060504495 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060842463 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066117636 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058046198 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063993184 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057394829 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059886377 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067192131 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058216653 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064871905 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066585002 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069076068 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066895861 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065499719 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071600474 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065869757 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067639555 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059437513 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075162078 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060120609 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068910562 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070992651 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059369507 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07114781 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057681132 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057161491 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058096962 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088873835 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0600678 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.05949215 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058702481 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058139303 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059978107 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066656584 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064687597 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064336737 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062752297 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072634608 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066170714 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05779737 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06632172 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074572223 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060450231 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057887148 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072535705 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060092634 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056602711 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072373042 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.064689644 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058535272 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05772232 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.058681334 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068658169 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057894299 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055111962 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063107323 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058185888 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059922929 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061606995 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062175372 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056177832 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065131633 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062006644 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058179551 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055344621 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.059884617 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05745902 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054934281 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063843491 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056502252 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069744 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061358549 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068344852 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068304548 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064516908 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069404972 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055412857 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054673824 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071166654 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.196914141 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060149792 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07495067 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058002915 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066585018 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057290127 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059728212 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.06541084 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056288903 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059461148 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057509328 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063429927 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059038794 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059786446 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.060580788 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064429758 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.067683226 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058821508 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064674484 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057549295 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070876695 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.064899829 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06051645 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06182777 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058339621 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067819058 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063190053 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065506148 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056738364 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058220488 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057200896 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066193437 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065298663 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.05988528 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066925493 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060577568 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.057730565 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057391914 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058506479 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059808667 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061338103 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058760508 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063159933 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064527561 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070066572 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068970645 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064357135 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056211589 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056828784 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059008648 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056570105 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06040454 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065131919 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069892354 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068697809 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076519335 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058697947 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066172871 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060373446 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073431665 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069399456 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.05925216 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064023633 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05647987 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059160646 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064873674 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067470542 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070071358 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069680117 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060543037 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060518817 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057311391 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070670267 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058660896 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065048947 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065586695 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062376543 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057004592 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058922831 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06473361 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06044142 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057054467 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070272599 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065164734 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058077334 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070410795 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058325055 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068162764 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057721657 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060536976 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062036653 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060361784 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065903731 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07162884 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057452823 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059070482 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072401907 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060292829 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059818057 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064091611 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070588689 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061594239 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064431226 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066975573 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065094526 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061482714 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06592909 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059310831 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065484777 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06140436 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067899555 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05709633 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073561204 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055896983 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07034515 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05793005 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067422973 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057009232 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064361654 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057715189 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071131921 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058283784 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057486757 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066541971 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055228405 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06366897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055243545 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059640695 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061139632 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063207982 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057490986 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201255478 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061892007 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067223504 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063001078 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066925528 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067057542 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06233854 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058829164 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065014212 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068403926 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065277013 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060441489 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060451019 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059235068 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06660669 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060720084 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059498352 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065993529 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06249753 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062942635 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060516648 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060444419 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060362107 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065942725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067094324 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074856603 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065565775 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064314333 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0666541 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057575179 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072344401 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058562283 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064300146 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057304544 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066099007 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066565551 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058407266 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076728286 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060558649 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065494915 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069554822 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063813747 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060007835 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074747718 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.0620912 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064626507 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065632585 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062116797 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063683052 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060481818 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065016545 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066524803 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067818482 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059459863 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0639657 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065607043 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060489751 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068129745 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060868604 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064936704 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060752018 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057707167 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062323255 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068752869 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062519874 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062864163 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058842843 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056869615 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059193941 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067068426 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061635275 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06524417 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071772639 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05705185 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059505154 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057930527 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063500377 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074683329 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066715936 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064293234 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06227641 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057581623 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060288905 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06055688 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057679692 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061391451 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056445483 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058021351 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067392115 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060343233 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061571574 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058599087 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059738398 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06608656 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063957574 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058696159 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063593664 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058079799 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06195182 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057524512 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060447541 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062209838 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057462544 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060731235 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066880164 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072313275 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063480605 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065068776 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059076319 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064444673 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071837226 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066936112 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059303617 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064370069 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056016858 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072652324 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064638658 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063460633 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064763596 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057628469 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.070989809 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059798478 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064989719 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069426914 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05735779 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.063905486 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055609335 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069109515 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059077161 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05534976 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.062349133 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061916112 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06062698 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066028898 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056499232 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.062557254 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061394521 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058661283 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.057571372 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.057529452 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.062926877 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.068964933 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.056475825 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.060440592 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.061950029 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.062021564 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.059084385 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066015359 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.062137104 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056593593 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.057522134 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.057956708 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.056504246 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.065962968 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05606895 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.059195403 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.059420645 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.055267999 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.060768976 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069121245 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.063411116 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.063601748 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.055594351 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.055055063 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.070898122 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.058177364 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.059419363 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06235153 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.063423867 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06626833 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.063277423 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.070370016 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.056385475 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.060314498 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.066211638 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.056651905 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.055107012 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.058004882 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.057097982 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.062761076 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.063673473 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.061207421 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057306287 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.060685172 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066866445 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.056764005 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.058978621 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.05963106 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05622679 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.064487934 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.062024978 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.062341749 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.056636127 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.054631108 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.057891196 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.062472529 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.060842217 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.062684199 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.056731638 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.061686309 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.067251998 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.061794508 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058846113 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.054471626 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.0586701 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.062802557 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.059099035 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.055243908 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.058514846 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.057899905 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061523744 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.062952032 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.058461606 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.054890142 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.069517775 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.061843238 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.062923513 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.056788603 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.057442485 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05636233 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.054929909 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.064646818 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.055396812 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.056814557 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.05996284 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.05674645 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.070298938 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.062403618 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069201881 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056274129 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.058788609 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.055367898 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063805815 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.058909105 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.055471154 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.063913709 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.054587514 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06822975 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.064952331 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.063619722 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.055023971 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.059039452 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.061383593 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.067690352 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.063116663 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.062600216 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.05910955 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.063485751 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.057472768 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06491477 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.055554465 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.054162343 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.063535871 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.062144722 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.065806401 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.054387592 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064214469 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.056662778 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.061987273 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.061951595 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.056667422 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.056775147 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.056719068 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.312804656 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063094885 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067586188 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063201545 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074458238 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06019728 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07049912 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068409226 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071377305 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073373277 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073228728 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068210741 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060910985 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067202691 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068762463 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061869425 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064576275 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06443875 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081518121 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062488451 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061935141 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073933832 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067863441 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059979705 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067660482 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063351575 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067369296 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059803842 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067823112 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063055087 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059714295 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061853722 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06197907 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057749868 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0582425 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058210972 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0665583 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061932762 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058403242 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075106479 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059847187 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065313853 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067780693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06320286 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059837207 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0567712 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058792118 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068574797 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071179225 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060918397 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064718311 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059832189 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06585443 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056879382 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064927201 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064372781 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064556236 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057531072 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058163211 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07018868 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070719167 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061662055 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065648766 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065117756 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059579382 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077541358 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064826332 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058903342 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067127133 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060480586 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056930114 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057099671 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059891206 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068091571 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059496678 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060422706 seconds)
  done (took 39.302276177 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100691895 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061178394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059413402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059901178 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071635235 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0603787 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059305799 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060719783 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060566443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062644081 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059341402 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059853518 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071979639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074276745 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070923294 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064565114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05939497 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060162663 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059618893 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060458623 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070743473 seconds)
  done (took 2.795120799 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068328111 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075659086 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072037573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077663373 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068532462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064339789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071999352 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064542693 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072881025 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070066683 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070918493 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063180357 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068399367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068374583 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068566993 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063092357 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070988346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066444355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063268602 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070169227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064959901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071995119 seconds)
  done (took 2.905858665 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061608439 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059969908 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066223384 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057371951 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05755171 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061184624 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057531968 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060763132 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061213278 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061819547 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065877137 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059444819 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058628438 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063777465 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058389144 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059787779 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10330889 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060690907 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060260788 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059265822 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065626937 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067950318 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059571475 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059773433 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063171787 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063533921 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059297649 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06269696 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060305705 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062731695 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060233991 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058764562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066646142 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065906773 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062551053 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062417194 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061465784 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060800591 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0594043 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05951975 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066219654 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060637614 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059348056 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060655943 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0669027 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058931348 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059025175 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066573884 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058496703 seconds)
  done (took 4.443868298 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073651704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108815829 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064785172 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088852879 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073706783 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066866044 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064684062 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089466533 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06001381 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061228462 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075091008 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074912358 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062908309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064560192 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066870807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063126318 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063801552 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061733056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066156913 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062384111 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065968522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066413989 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073543523 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074064807 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063783954 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061805267 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062109685 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064255794 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073659225 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066723415 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064720346 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065168882 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074056297 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067189312 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061692498 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062027454 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075054888 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06314739 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062446135 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059735057 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061440771 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063667497 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066314843 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07537312 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06281093 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066792145 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062464452 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060045914 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074218288 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062401687 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067362711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075041665 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064400601 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062886975 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064586333 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074494035 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063035568 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061058502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062983513 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073752485 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060475103 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063476918 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075026363 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06190111 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066590575 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074764152 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06706465 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06365095 seconds)
  done (took 6.13096363 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071534809 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090652397 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07168864 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071558568 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070536492 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07055932 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070375306 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070418486 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070202156 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071184196 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070809498 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110282605 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066029473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076091153 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070336675 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070893458 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070214091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070470894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070445251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070653696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070378654 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071238739 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070687296 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071121787 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073304225 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065755531 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070127216 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070180409 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071088631 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07037124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073753351 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07006477 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0704866 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070892692 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073436526 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07008589 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05990401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069898563 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070576202 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070578928 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065622874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070716271 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070045439 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066071942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070687141 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070563347 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071438483 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073558741 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077047336 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069565288 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.06917367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069374933 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0686629 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068730917 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069268264 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077214576 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069522018 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069037791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068839945 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069477642 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070437056 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077663568 seconds)
  done (took 5.858739694 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0771125 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068192084 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079189034 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061764416 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059186706 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068633078 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058302677 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058987768 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067461793 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067539834 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069354877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067637076 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070254167 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067832544 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067369581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070232282 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067497516 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068426208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067795952 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069080253 seconds)
  done (took 2.771661643 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071738861 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077158938 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065202644 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069346669 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064747328 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068980404 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063638939 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064706243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065275789 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065086428 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070532426 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070877247 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065270987 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069255543 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07034785 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069166868 seconds)
  done (took 2.501402016 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066045067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.0675904 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.06763359 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061027334 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063825143 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059449902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05998945 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058314831 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058985812 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073359287 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060167798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071363505 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060132038 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058865444 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059749615 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065707678 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059182401 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060649334 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059988918 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065719488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066962552 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061377735 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064038951 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060239517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065528998 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067823413 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062158086 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063623036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060281371 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060699803 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066040141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067013656 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060055988 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061152848 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058989261 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060454595 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060092018 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061090774 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065673248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060378283 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058425104 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064947993 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060427685 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061145471 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0593384 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060722371 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059201712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065995193 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060410447 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065625608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060277152 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062446767 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06066127 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067942426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063108117 seconds)
  done (took 4.852487929 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075395049 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064112796 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058831814 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059177024 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063900493 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064605722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06479729 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064224735 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065427672 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058509254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064597513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063668287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064587147 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064470188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064588449 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063684038 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058732443 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064175564 seconds)
  done (took 2.572579466 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070589405 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063811068 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068603741 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063533555 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06334103 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062965771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059154613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059462791 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059334106 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063336946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06348188 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063159332 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059434904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063478768 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06354398 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063563244 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062726926 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058919223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063279115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058742009 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063231105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058935876 seconds)
  done (took 2.794408849 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086824779 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081444558 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120497802 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076898624 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084080443 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069242193 seconds)
  done (took 1.936227211 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089020683 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10154077 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063295319 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063692896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074767181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067111289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067137787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067413102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075009324 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07250055 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067890324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075059937 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075145038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070207185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074921826 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077628289 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067466952 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068235846 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064606207 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078016037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067936544 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074766257 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067510988 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067155141 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08712422 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069516614 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077989131 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072535929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070272934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074728058 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078015867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067612418 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074737204 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072593231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063946609 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074902884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067464427 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077228518 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072999416 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068131801 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062081094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072772278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072591794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067840948 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076413207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066471963 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068974906 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067130142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067935068 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080766728 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074947761 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070538958 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075177442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078409611 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078737698 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080912175 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073189238 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070498636 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075412496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072660579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068390716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07482451 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069116089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071023333 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076111999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068681334 seconds)
  done (took 6.212434608 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097632623 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064846492 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067805969 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073150719 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069930975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06819296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067703791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067902624 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068169099 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064487642 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103147866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068536483 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069206741 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06938907 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067255141 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06721347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06798109 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07032084 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064640327 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080999622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068394202 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070220683 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070490375 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070119688 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072550818 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077710283 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067752208 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067688738 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067901547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067435428 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068404067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067174044 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069602639 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063295439 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069466355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06771536 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067510016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069667959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067359379 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07473567 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069999582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077768525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068009787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067768086 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072562454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067329606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067534563 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063971863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067711722 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064220076 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072660562 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072789268 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072636912 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070377724 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068035236 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068124326 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067875661 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067601434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067920966 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07857252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070436837 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067491652 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080700386 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068015975 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068110696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070137792 seconds)
  done (took 6.086520357 seconds)
done (took 123.709763187 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207705437 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179949365 seconds)
  done (took 1.79033584 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071053718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094994499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072304442 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1313329 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066432748 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100283784 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099497638 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07074028 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065973797 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066169125 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066000335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070057036 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133253132 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06648155 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066550581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069228841 seconds)
  done (took 2.732517069 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102732938 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181208904 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105036296 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064323097 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099265204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07167427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064348783 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074871456 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068191014 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067710613 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071783015 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069605023 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067292364 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069740415 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068199646 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071338867 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067009384 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07165147 seconds)
  done (took 2.885137588 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091486448 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08318856 seconds)
  done (took 1.607870647 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158317579 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101153675 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139806042 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315582779 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131370609 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274540834 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131641843 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127427906 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114396821 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121700913 seconds)
  done (took 3.042820513 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099243868 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164556498 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298731043 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116384819 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072306847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084710033 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117879012 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078121444 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077867398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076949449 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076954276 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076553699 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094397644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073686783 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073004607 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073484255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097395473 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072899239 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072665556 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073117282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097631309 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066651343 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073899744 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072574792 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075198961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075168087 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067598882 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066359835 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073286432 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072714369 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0760431 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08150638 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075021087 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101311537 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070725237 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102057208 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071988199 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071141446 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072861082 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07117604 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074710604 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074463455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074632002 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073443898 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067407839 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071569326 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067429858 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066432184 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077081028 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0683783 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076698526 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075396869 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100976925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067950933 seconds)
  done (took 6.000761717 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108585824 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102549206 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066311591 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108401627 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099490947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065424918 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102776152 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096433292 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105232494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067124095 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065664816 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066144703 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075233276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078236743 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110290482 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103166227 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067882718 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066774189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10531504 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105806997 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066114109 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098022607 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094865743 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105212144 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065182067 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067282854 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065226032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066020882 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072854164 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073980877 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065710464 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07491186 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084077502 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07447561 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065183818 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065285825 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064991019 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07477161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074624912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07275432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.071199976 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063092108 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06351346 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064293491 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065009052 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063285733 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071424111 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072651373 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071303844 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064941936 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065879956 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065176338 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065858063 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074737915 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073538502 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075070166 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073188376 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06539956 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065347913 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067683277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076424653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075838292 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075417168 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066851009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076318238 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065508697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077759917 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079873438 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064121912 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066231314 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065714598 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065559543 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066333336 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073314603 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073416963 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06620244 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065265206 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065283307 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075725146 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073540407 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065259839 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072513703 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065090041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065946296 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066494311 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066255047 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.0730359 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075365241 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066623055 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065304873 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065589839 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065676373 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065040981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073752738 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074836914 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074972565 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074073291 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066282109 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07442767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074221826 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066145865 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073237475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065554423 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066030859 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066297355 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073470917 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072748184 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074536647 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065588651 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064963653 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073804123 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.208664991 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065184019 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074667515 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076895637 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075012505 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066039154 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080216217 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066909781 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076579531 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064357762 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076704391 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066528904 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074439609 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066199336 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065373481 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065374497 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074403959 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066838476 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0658504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066093107 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066020908 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073942073 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077878653 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067076276 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074247718 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074174877 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066703916 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073766523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066109046 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074969588 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065874645 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066362983 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064802864 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076829611 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065739458 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065307429 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066172488 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075954889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066293201 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076350279 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073568325 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065397538 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07971253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076062949 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073347007 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076306586 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066736067 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064885215 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064682616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065664273 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072944527 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074466101 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06613777 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065398062 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072566094 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076474393 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065271376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073742732 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073553669 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073637161 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066258927 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065368546 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076714718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0750709 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071605675 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071917461 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074270523 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065732118 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073072646 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073765481 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066041427 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079898968 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066255954 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07810935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074331982 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073028127 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074294218 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075581041 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076598862 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07648087 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078770865 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065185415 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065088989 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073946275 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065411395 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065447333 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073418652 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065877419 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065862721 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079292475 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063815537 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073513091 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063254634 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072346299 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063104165 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065379857 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07853534 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065980409 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06649386 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073713745 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065833949 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073363393 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077045397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073326325 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06526954 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06567921 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074506723 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073911252 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065170776 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06512438 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066159133 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072906778 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072634305 seconds)
  done (took 17.775942941 seconds)
done (took 37.280148985 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207315303 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156988982 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192858111 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11516373 seconds)
  done (took 2.210195159 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.097233102 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095447393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077426796 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062489719 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083203269 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062657798 seconds)
  done (took 1.961983703 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281690352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198666118 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17673849 seconds)
  done (took 2.132682684 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214845536 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.1942513 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456774276 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283531831 seconds)
  done (took 2.726255291 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131203083 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079787609 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061155035 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070973597 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111709259 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145865268 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089894692 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11472382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073255293 seconds)
  done (took 2.410680677 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133040269 seconds)
done (took 13.080066188 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.144184616 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.103767515 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108369371 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067597305 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191593548 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189989445 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117162346 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064014927 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070572151 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080564842 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097923878 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075708501 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071804331 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112897839 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070411496 seconds)
    (16/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072900865 seconds)
    (17/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.204512384 seconds)
    (18/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.451587017 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070145058 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070147999 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070294423 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113737826 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069512721 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084280687 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.222237166 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061592969 seconds)
    (27/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.191399775 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06934135 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079474802 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231202933 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072415983 seconds)
    (32/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06191168 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070249202 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.076907111 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.172845064 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076927169 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184238383 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069426361 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061731682 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069185422 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223359552 seconds)
    (42/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.233782971 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067330933 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059945381 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23463045 seconds)
    (46/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063881155 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.131450675 seconds)
    (48/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.243940306 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161142604 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065105788 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089812634 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080069883 seconds)
    (53/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.13544705 seconds)
    (54/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066190697 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06529748 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061048009 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076144685 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.146300491 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069637285 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081815067 seconds)
    (61/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072620898 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.06326522 seconds)
    (63/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063649677 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069420671 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073047724 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201568749 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067756481 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060184366 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069437799 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111057335 seconds)
    (71/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.070927937 seconds)
    (72/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068703311 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059694521 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.059988131 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199640154 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069444567 seconds)
    (77/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.060697228 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.159960894 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.188108564 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148474615 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071088342 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059547946 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157624393 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060519953 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085798788 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.219205137 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.182627185 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121945877 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165246886 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080950204 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 0.237325494 seconds)
    (92/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070452944 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085536303 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135321496 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153554912 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069734875 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063000229 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 0.131171258 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063192767 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079927551 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120577741 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062329226 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.126252333 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.200146294 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062577654 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.060939698 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068280802 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060530632 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200221095 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131407272 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062629888 seconds)
    (112/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061678937 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114755568 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.187838 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084069677 seconds)
    (116/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.135458314 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154809725 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084478815 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064506602 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073067182 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122813913 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.199284217 seconds)
    (123/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.125098222 seconds)
    (124/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.07905679 seconds)
    (125/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075540958 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073834025 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071680035 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072374843 seconds)
    (129/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066181722 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064698302 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064892341 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.129446509 seconds)
    (133/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071008812 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061403345 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06800106 seconds)
    (136/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166180757 seconds)
    (137/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.139327886 seconds)
    (138/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060343321 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061990236 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070878182 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072033878 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061188646 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061413661 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071320723 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.164080053 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114265032 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194930724 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06778774 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.06918314 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069000804 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071420252 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132487977 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13477316 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073756069 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070490971 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060579617 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.167264845 seconds)
    (158/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060331966 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059949856 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.06719156 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061713134 seconds)
    (162/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061231002 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06009079 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119164855 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060355348 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183349369 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067954815 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069309767 seconds)
    (169/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.153079319 seconds)
    (170/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069039069 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139536517 seconds)
    (172/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.0621381 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060362561 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.133641941 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.1319699 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150169877 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060630044 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088740269 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064141952 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.127080847 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061147239 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062980308 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08160667 seconds)
    (184/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063257517 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.061286134 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061644012 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060311533 seconds)
    (188/309) benchmarking ("sort", Float64, false)...
    done (took 0.125864776 seconds)
    (189/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.157644618 seconds)
    (190/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.064555651 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.288612423 seconds)
    (192/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062491338 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062506525 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15206354 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.134840424 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086523285 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070201694 seconds)
    (198/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064592731 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11182891 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069390841 seconds)
    (201/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138351882 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.1235354 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071216945 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088917109 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062784461 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072095619 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085400571 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162201527 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062160347 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062186577 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062287994 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145128259 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070172645 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062599397 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063445858 seconds)
    (216/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06407195 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062260078 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090207163 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07388925 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072312797 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134429785 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062015979 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06186622 seconds)
    (224/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061852192 seconds)
    (225/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066337209 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062347416 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062147783 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060761838 seconds)
    (229/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.06113561 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068991154 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0614282 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06155752 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075723516 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061120779 seconds)
    (235/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06172782 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15607274 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061493569 seconds)
    (238/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.090800371 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071488147 seconds)
    (240/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061776599 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06212688 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126839068 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073325001 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203141029 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060995389 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061753945 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062199794 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062413567 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.060172601 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117846839 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062598382 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088096157 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061783359 seconds)
    (254/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078971371 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.060483417 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060374656 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080991557 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140231102 seconds)
    (259/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132874878 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060887955 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.060839927 seconds)
    (262/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067676357 seconds)
    (263/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.132185641 seconds)
    (264/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061002393 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06185828 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063532422 seconds)
    (267/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061983822 seconds)
    (268/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.075468533 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060630656 seconds)
    (270/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152894795 seconds)
    (271/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060314564 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061604273 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06771789 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085774642 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069421461 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061159433 seconds)
    (277/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067526332 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060417052 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105273418 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060818352 seconds)
    (281/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061914998 seconds)
    (282/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088426618 seconds)
    (283/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.060431533 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060710113 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063126353 seconds)
    (286/309) benchmarking ("sort", Int8, false)...
    done (took 0.164093488 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061132651 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.089356066 seconds)
    (289/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061620815 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084472066 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071950697 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083565047 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.061628216 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080245219 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.059885428 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061089262 seconds)
    (297/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.059840076 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.067938411 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.067089786 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.165242616 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.061120359 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060197947 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062442533 seconds)
    (304/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061187914 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060318501 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060526572 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060083271 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076585803 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060142407 seconds)
  done (took 31.306867392 seconds)
done (took 32.800746638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086073174 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086937572 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068658718 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080954838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.075744488 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091080229 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069183118 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073495087 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076241172 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074844693 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07422338 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067207251 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070344167 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.06987799 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.06815818 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084317025 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076150203 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070703486 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071428569 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062672359 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071244463 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063128939 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06196845 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06964749 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073970062 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069731682 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072039089 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07203316 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062937458 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062903617 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067635796 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072279485 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065264922 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076137434 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07165805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071273639 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072884907 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075078645 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06245435 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063525567 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07312999 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063412444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071399063 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069465175 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068010848 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069372962 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071305777 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074996971 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086322335 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067038984 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072997788 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073486365 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074646192 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067895439 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0660829 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069127602 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067513578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083318084 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069747845 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064628992 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070556946 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070043064 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067261787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069102284 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068949137 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071576247 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073669505 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067459073 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07108338 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067883012 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060576186 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069350585 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065719795 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061378155 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072110502 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073530327 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060111436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06509911 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069242309 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.06907022 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062044942 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06632208 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060563743 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065866535 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064630985 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067379749 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065929376 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068448172 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061365567 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071216121 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069750724 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070656465 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06205083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075594078 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062406986 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068853962 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062918441 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062523827 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061878688 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067748992 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0623915 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066617753 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071107099 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061942764 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067320477 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076258956 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062678462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069940204 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061963774 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062535852 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074025858 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073169967 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062613099 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066735039 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062524498 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068135763 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061968272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062419972 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062330535 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062164642 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067073608 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062653318 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066413182 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068305047 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076313539 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062449271 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067158991 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066573954 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061119711 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068010842 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061091588 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060663854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059921109 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074129493 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064417413 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060427741 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066206226 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065347718 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070499702 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06156016 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071181606 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068263919 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205502901 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068330881 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06133372 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072582478 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06522062 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064755359 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061281673 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062461415 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061854687 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062552889 seconds)
done (took 12.174848926 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064035455 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.091848289 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070047551 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078258583 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073455801 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061762617 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06610089 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079338566 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064638203 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080622627 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082375811 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081645025 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088525459 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060560592 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061738885 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062875115 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060355427 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068304824 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076789492 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082507744 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090245003 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061728322 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070718849 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076460264 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071984431 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080051922 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062237419 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062547253 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063985574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.076953587 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084194528 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061291628 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062180757 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075979894 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075392655 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069097439 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062048684 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.06607855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062163861 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061257046 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064248003 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078172548 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067433808 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072765487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063945707 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064248115 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063895896 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067609156 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074464654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067412124 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07112016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075888921 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065748654 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063362919 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061896045 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067794386 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063531952 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063969661 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063357276 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063667122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063302429 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065251603 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064006653 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064103399 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066575345 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066843241 seconds)
  done (took 6.131564034 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082275817 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091910446 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078930889 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079748709 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061763877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061786657 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061731672 seconds)
  done (took 2.111765607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06386888 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074660116 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077988369 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077777754 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070681383 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079520761 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061770411 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090988487 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060923789 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074322314 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.10695154 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078933614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06500152 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073186063 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062223069 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070410592 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061796318 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070726386 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070775219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07812553 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066131626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088131895 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074706228 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062088963 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082541447 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067512147 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061780365 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062539567 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063602496 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064999833 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06471059 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102406605 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068776437 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077756147 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065323717 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063502808 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07052494 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067163826 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067564374 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070126292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069551536 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065073947 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062525423 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06531635 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066319308 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06672275 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060907181 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063481865 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063203088 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074032385 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06086117 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06662236 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065601693 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067135617 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068088889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066757395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069744112 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063438001 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073972848 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070242854 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063805986 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071507535 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070531405 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067748369 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070306136 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06598881 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066541985 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067875822 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062935235 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064325464 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06359453 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07062997 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061943191 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064120581 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065380575 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063483825 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.06602245 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078643768 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077876682 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07397643 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063475463 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063262286 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06774439 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080338659 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068722888 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065291601 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067338711 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062973276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067901015 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064976336 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068429605 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065336111 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072184864 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065981289 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067425642 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072794654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063006552 seconds)
  done (took 8.292965408 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067331186 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065197995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06633967 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064902041 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064833844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064721294 seconds)
  done (took 2.024106329 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088632282 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064981261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077407289 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064719899 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098373275 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.07167646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070632838 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071480331 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075323256 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075277514 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070614143 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073165007 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.06942819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064640668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070145879 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06410847 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069918622 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066326501 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074185445 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064896368 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076041553 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064546431 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066161748 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076652608 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067848591 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065733025 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064404038 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075541163 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074046729 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074246073 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064294645 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06581371 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070089384 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071362461 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070150208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069925998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062931035 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069564675 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065868224 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065975574 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07369367 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065216778 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065296086 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068327537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070999527 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070000274 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068469043 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066281221 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069609519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068061455 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068503975 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063714416 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065512299 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068298554 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070137938 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071061995 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.06844258 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070106169 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064996848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070117989 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062838081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065845999 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07136141 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065522975 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067320726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068476736 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070038199 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064805058 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064645708 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062614348 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068322996 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062972755 seconds)
  done (took 6.578801826 seconds)
done (took 26.722446826 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.977921427 seconds)
  done (took 2.550501682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.566698222 seconds)
  done (took 2.177501913 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.651158155 seconds)
  done (took 8.26374768 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.291322335 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.334962022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708951849 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128281733 seconds)
  done (took 3.105451729 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710016735 seconds)
  done (took 2.331789045 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231732959 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2174015 seconds)
  done (took 2.072599722 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347395355 seconds)
  done (took 1.957205375 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.118699566 seconds)
  done (took 2.729904823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232758028 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159290485 seconds)
  done (took 2.0084319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.449703807 seconds)
  done (took 2.062849162 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.535737696 seconds)
  done (took 6.152121144 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236205901 seconds)
  done (took 1.892931169 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230553626 seconds)
  done (took 1.84866081 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711843878 seconds)
  done (took 3.330320019 seconds)
done (took 44.106307792 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079873503 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079832958 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080021877 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075861313 seconds)
  done (took 1.903816904 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071960975 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065791931 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069259295 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069638289 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067614556 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068141333 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068655831 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065539035 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066871468 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065720765 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064599787 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065700934 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068567356 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065388351 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068301826 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.06933613 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065373791 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065467829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068055338 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065278407 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068400045 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065394263 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063652267 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064895656 seconds)
  done (took 3.222684036 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076222403 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069364789 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070722692 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066817479 seconds)
  done (took 1.904299093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07426629 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084178099 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086320208 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091229804 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073616704 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074282537 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082413947 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083637867 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062778137 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086330119 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063648724 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.0619452 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06217529 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082146947 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080039257 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.05903232 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060270601 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072164383 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071273231 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073628585 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063094635 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.060847178 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071833749 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071628835 seconds)
  done (took 3.372958164 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078108302 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.060860517 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07531361 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087111534 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089242023 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061064247 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075893311 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089442329 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135363358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061052796 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06677212 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061033876 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101730548 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061274702 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077009599 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106804208 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110371846 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064725361 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093907595 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061209115 seconds)
  done (took 3.247560633 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074729693 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.064524674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065883811 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060787184 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072634023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068370038 seconds)
  done (took 2.038620636 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066042316 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064412266 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064535304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062349611 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067576099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062759892 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061158551 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062650345 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063575212 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062631184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.061759571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061239441 seconds)
  done (took 2.384862166 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160996138 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065106675 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065687156 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063659019 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066622722 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061968473 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076561012 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064183462 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079749189 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061796708 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062147777 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064278087 seconds)
  done (took 2.520103868 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099236593 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125690755 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093335697 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068983345 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16622935 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090674295 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.08639724 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118529546 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092509676 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066516427 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089597165 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130786995 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091340991 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094491171 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078135415 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120823449 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105432015 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083702116 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109851819 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078252399 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06687777 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128915202 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06624021 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090356806 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09964581 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094228131 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105346618 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128115539 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080642098 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086263159 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079173765 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070652458 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101301867 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080579027 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093818045 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089932341 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094442931 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081820044 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083074597 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115697511 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148990819 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096730175 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096920736 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129960403 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075239943 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.104793908 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077940743 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095934184 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100718664 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090729276 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072685957 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089013438 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103164559 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099097751 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079014572 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078555155 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113457278 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.095253872 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093076633 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076886397 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103678788 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084443497 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103321856 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260774753 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136696597 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098359443 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133406657 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120482322 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092824552 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086923352 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088555903 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072413861 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107492868 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095035841 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132897443 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106607663 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096986227 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092581176 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079342533 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104554728 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11150868 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090477325 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090676515 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141667652 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104818078 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086967906 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087949048 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142670294 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068000933 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143147232 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085759805 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116542883 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093316038 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134838725 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087989123 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080215491 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102667349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100280975 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08644013 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099270428 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081101629 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110564003 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08934345 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097138492 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078493293 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08758386 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083564255 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093206916 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071808112 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100606231 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112012058 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109956653 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071801012 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104932609 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082636682 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073552995 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088953138 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135011153 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079940989 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072342588 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146857322 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089841748 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112992787 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105020144 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079332758 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261199204 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133041317 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089958753 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086799622 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074254802 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150916585 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073427525 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115993113 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078934903 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100310243 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102339837 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127559276 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135718425 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092595815 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07567072 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089422572 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.103499826 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083745884 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082682896 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073775701 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105762593 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122305455 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096460861 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07795631 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089469067 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066348715 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110598003 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07309945 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081896562 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092957147 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.084572621 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086375719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138741376 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081278519 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104978759 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094774082 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064830396 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088844594 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149294691 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080071355 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107682013 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113206997 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081511136 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065340454 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093605712 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070099544 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106145042 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089141299 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103410706 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075042172 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103518162 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065664638 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071168258 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125587508 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098304823 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086144458 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.129190279 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10157117 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.086099537 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10104878 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093969051 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091506805 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097792677 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.254779966 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104054908 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07119324 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125942049 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08940075 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075285685 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085254657 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076419732 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074403099 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097849714 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111950708 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085606526 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098729032 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09953103 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086896153 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106233701 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086551709 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075589449 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127792045 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07302416 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072285899 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085260537 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103184199 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085829302 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130269075 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076199085 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132556315 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089691771 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078321233 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111516476 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066488251 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066987313 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078719199 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088714305 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113061978 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076200108 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074904201 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114753064 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128647869 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094585195 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09970398 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065776816 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088132554 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132485099 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112094366 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078409848 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107016975 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081547619 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126287666 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093491775 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117254741 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103505758 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107660097 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088488427 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.07831824 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070584633 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084727201 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107329255 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083474165 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078807492 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064822676 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071354078 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08972269 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088218355 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109387732 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084324005 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130198053 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069519896 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097235282 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254159703 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10478504 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087104389 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093357332 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089620438 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089653758 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089495811 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089317597 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071911163 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124339948 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103179563 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078660864 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088873207 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09509705 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106394587 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109307739 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109338498 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093994259 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106181593 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121207529 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097128521 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080151604 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081870461 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090813346 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082129442 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078609127 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100941917 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109136908 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095019953 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106209814 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092246165 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090621736 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103946735 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090396127 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08610962 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114785574 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148926192 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098982841 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101189253 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083255077 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104425477 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102693454 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110053964 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.10798693 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105904134 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067879308 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07275041 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067937951 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103712246 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076400795 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11435363 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073690181 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103882664 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093661001 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077372981 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064310085 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098700676 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090164837 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079196771 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120223803 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110423917 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070260741 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087907142 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103382701 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08048095 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12092342 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.09994228 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096628378 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068392547 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08675635 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222018315 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106739804 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098800063 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07529362 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075606259 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070193721 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107698587 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083332103 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109097142 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089016033 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101256393 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119762389 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131580283 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086363933 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09593305 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116555054 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110384124 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079275872 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109931099 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133016334 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120021091 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080371055 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084767062 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106034785 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104785192 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099477373 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073826148 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076826376 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108604489 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11076162 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065681215 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082260914 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068050719 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081653307 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109890743 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092644604 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079441466 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114150421 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072448696 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104891482 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092743775 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123113897 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122335919 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143304251 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093934885 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08257246 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074295751 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120952161 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068277649 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113956248 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109239953 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084982646 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.06555645 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080954853 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092779227 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624117236 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106145931 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073520484 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132596737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084888627 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112262177 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082171662 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114425679 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08613449 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097587013 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08694662 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277799725 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080766234 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107708635 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.173118794 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107915572 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104889661 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071772775 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084235587 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070928159 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076047985 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079452511 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084796254 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107537622 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083099951 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105162859 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079118866 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107046727 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091003629 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089303763 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099194075 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078132659 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136245099 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08585947 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120702356 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103778409 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075468698 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072393423 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083932294 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098792956 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079811343 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091623631 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075976586 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073835402 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148694233 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099002822 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082125416 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099512337 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088308679 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084344202 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089423782 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114730007 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107430629 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070408452 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085126279 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101324597 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076921187 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072292036 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093954046 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066671416 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086362462 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097256906 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09349801 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087371905 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100254057 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075454245 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084655966 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106782244 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083051169 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07447312 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073982671 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073956746 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073664983 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100706379 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105432626 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111286267 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10586266 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088071403 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090058521 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075369993 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.370209735 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077644107 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095586214 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102509854 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073229184 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128447597 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086173431 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086186621 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094268898 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098092927 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148895286 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071809242 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106725239 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09149217 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107433998 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084585905 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103845922 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092816112 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0895239 seconds)
  done (took 49.237395836 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091076803 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144989478 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151374085 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077336748 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092019703 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116108749 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204821415 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188398878 seconds)
  done (took 2.810649876 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065879113 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077115013 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099164347 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079053768 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06215618 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.062899859 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.199997847 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077006635 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061645682 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098811203 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072045386 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063962748 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412730722 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063142143 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064264599 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070530614 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062310969 seconds)
  done (took 3.417885373 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36158471 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600233921 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.339434361 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07082473 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.956249464 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086462347 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.301715229 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134699394 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075998717 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533861947 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368962107 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130331577 seconds)
  done (took 18.697442218 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073099919 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07069203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074354398 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073893699 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069606608 seconds)
  done (took 2.094063916 seconds)
done (took 98.508674982 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078595816 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.161414479 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063337278 seconds)
  done (took 1.995855994 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081232365 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077297356 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077143795 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07483613 seconds)
  done (took 2.050965819 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071548409 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071720456 seconds)
  done (took 1.87601634 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240682255 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159437934 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088746073 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081196397 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077126485 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076590039 seconds)
  done (took 1.9805624 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069962734 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068287981 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068484155 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069293801 seconds)
  done (took 2.008129735 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065629606 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062836611 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065129832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067475838 seconds)
  done (took 1.995872021 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08144421 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081295825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076278256 seconds)
  done (took 1.9745879 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.09423171 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094450345 seconds)
  done (took 1.924119761 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078252 seconds)
  done (took 1.81346689 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087390421 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094796994 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149542945 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10806159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147549328 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132115083 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075989837 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077597326 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071943639 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070478738 seconds)
  done (took 2.750460395 seconds)
done (took 22.673893661 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077154493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37138677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358066797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083358609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669168476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352073574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.977994688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086568638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094179547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064027521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079428298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644517589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967046585 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321483378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955989273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324016572 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644189771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063596445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062936247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063902363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962534241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063046142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064115634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063441693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681013318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368184875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06445531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323030836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063820633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066230323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351762028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065100874 seconds)
  done (took 16.112078094 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069095678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1178511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067938076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078357872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065424194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064661601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066629052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063918164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104509325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064013448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080225873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063368586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067611382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065393121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083799222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064581534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065287628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064923044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064415281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067964057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081824568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064038544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065103885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064598158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064556437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077372276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065334341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064164635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064279594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066762475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067623966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065655162 seconds)
  done (took 4.011114842 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117049934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121363403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069026972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101621149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114462216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065723082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143685017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086971486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108369061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064123525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080333957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063479051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098057161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065906448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08427364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064457087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065827062 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064781799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06430056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065362337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082564547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063887915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06502218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064764401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06535176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07894796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065343658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064525483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064225964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066529885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068377958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065892035 seconds)
  done (took 4.276949666 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067568631 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068328832 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075802395 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077159485 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062715094 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065085194 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066441616 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062916695 seconds)
  done (took 2.300317804 seconds)
done (took 28.459190495 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075280166 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063421319 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066718727 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083416541 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069243854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066816214 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060573945 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070399043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.06760025 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067119093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.067842067 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062024544 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065843843 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060583749 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067764309 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062358421 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069192725 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066915659 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.06765146 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.06909142 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065081153 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068225591 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070390682 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067816865 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067467323 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067341001 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071711148 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067520997 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063291124 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065383521 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064734435 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07319883 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069540962 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069413508 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062520146 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062452207 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06725073 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064743895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068598591 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0715083 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063881874 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071430057 seconds)
  done (took 4.548208081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.0819157 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085626145 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077501188 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076933255 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093897197 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07731871 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081673434 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073769456 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072144384 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08064762 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068630263 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075627328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073416681 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067675986 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072374823 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069478416 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074495441 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069403323 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073002961 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073033046 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082448067 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06775448 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074944362 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074080906 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069785074 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075168419 seconds)
  done (took 3.725377522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070721636 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079822558 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087223453 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143249797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10654649 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074975656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075832901 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088557325 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092609975 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06364152 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066962196 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08780568 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0878077 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069806059 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103740476 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079503378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079168609 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06566495 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070314527 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092151554 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083437915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08075122 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089414014 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079788318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062598376 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065462808 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069235323 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076966262 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070185487 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074318159 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067705781 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066297606 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063551902 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074038041 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06708867 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062197916 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086630039 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074357838 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075786343 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104875255 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071798693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064158915 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090315174 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123372901 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063489778 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066420032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.065773858 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074275907 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063953261 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090586978 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076716299 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062535067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063575831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063817433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063792167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077425913 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064517779 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064537876 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073946513 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068555182 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084042069 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067753353 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081279482 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062619071 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072809719 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063850559 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063686061 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061585225 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092968749 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069184816 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110035556 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063926963 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061679753 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074131587 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073172511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068629208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062390777 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080307622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073169869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066180244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073707032 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065895143 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065771115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093886615 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063659843 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062099364 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061403477 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065849416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065929936 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063174317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076060963 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06200853 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065598925 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076701028 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062811534 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063309995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066325356 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064788755 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061999309 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075404025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066485822 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063898488 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07381458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063349117 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06527322 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075522837 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069384325 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061812845 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064199258 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06537013 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063732428 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066740589 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065664561 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064849594 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069511191 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.06965824 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.067935916 seconds)
  done (took 10.34649985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159125494 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.147402793 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065119033 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140040001 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070838914 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068841604 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.140914275 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082554552 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063917826 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064210791 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063428357 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091964153 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088352075 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.09799116 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068138801 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063514012 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086471431 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095077481 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144064507 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141909415 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088820954 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072302785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067657375 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066549569 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065839003 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071598745 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078755922 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07187037 seconds)
  done (took 4.32652629 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075197209 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087758801 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067854365 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074257945 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082352809 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063814437 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06515783 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064903582 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077454887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072627736 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063732856 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068085437 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.06695726 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06623315 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064172826 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.06972126 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0697336 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06278808 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067649525 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068633216 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073266953 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088409928 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067641542 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063353601 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066202965 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063077912 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072196724 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077072424 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065015728 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080443911 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063187605 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069911286 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078483191 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06520407 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062803382 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06362275 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064898985 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065323421 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065259404 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062309368 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062102819 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068017541 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.061947726 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071490056 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076878037 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070020462 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065618433 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066443711 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068000449 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063559081 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067985919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067134926 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065239003 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070263354 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066647597 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06602631 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06670912 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088051858 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069533399 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062847557 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063115523 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062174173 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065584238 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073328522 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079748931 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065658303 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062050843 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063327669 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068500945 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076784432 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062655048 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067691487 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06106011 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063848399 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065748373 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065529796 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064047836 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062085635 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062978576 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063651103 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063760639 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063309963 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063255185 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065655824 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061772338 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062055126 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063693128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066574076 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074390474 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064618255 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068773008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066306515 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064031126 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067303669 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070548975 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067774359 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078506988 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076353753 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065802734 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063613862 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078064193 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067694814 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064686436 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071522266 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069512521 seconds)
  done (took 8.94472195 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088766403 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067401719 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08150608 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088412121 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075436606 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070819262 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075820752 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066837076 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081900269 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064703221 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074346664 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062972318 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075418284 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075792293 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067197834 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075967175 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068081256 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082516082 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079814356 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064384301 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074305046 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076918264 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077077061 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079047197 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.07710613 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078592867 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075103002 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066164724 seconds)
  done (took 3.909433501 seconds)
done (took 37.546874682 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.835374899 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.095396538 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.821422502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.051362706 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.883856141 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.02491896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.925164229 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814901731 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.861218154 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.856943949 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.150827124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.334779568 seconds)
done (took 66.476159126 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.882476683 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.975596846 seconds)
    (2/2) benchmarking "String"...
    done (took 2.064396307 seconds)
  done (took 5.784477681 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.086230737 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.613691738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.2229598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.808431792 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.812144164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 4.032666791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.614316337 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.304263994 seconds)
  done (took 32.153721191 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.987079739 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.035633695 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.502806602 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.545168597 seconds)
  done (took 15.856106038 seconds)
done (took 65.600296616 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.823208291 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.801092683 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.822093914 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.830858408 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.811125157 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.804186932 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.803955803 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.802414136 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.851689872 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.90735879 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.802894725 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.81791373 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.803606366 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.80134297 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.381858108 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.85401536 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816178598 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.813656139 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.806562023 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.852446059 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.807479437 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.80508313 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.275201093 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.95724225 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.418627258 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.039503563 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.202673699 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194972089 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.807741194 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.96255848 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.843737646 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.061037734 seconds)
  done (took 205.122915301 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.793400496 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.692407623 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.756379266 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.795786592 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.023692224 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.969097573 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.904814802 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.198179989 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.793275853 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.803232458 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.939305671 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.790769848 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.959161417 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.772913223 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.824497311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.876370913 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.942578222 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.974672932 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.797751624 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.939644033 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.806664528 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.830928234 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.78254112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.940631891 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.821409082 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.816640261 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.807772387 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.812366782 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.969924743 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.916291317 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.790502801 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.791581933 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.972815398 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.648937821 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.804598007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.784464092 seconds)
  done (took 169.574955179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.975083691 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.788739051 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777797836 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.782465574 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.839913128 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.902580319 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.780831935 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.465735968 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.788167853 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.301085466 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.78221193 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.779743952 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.779790858 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.77979714 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.781248723 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.79458891 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.872885015 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.77918071 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.796245951 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.782412039 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.804156185 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.781420131 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.779788143 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.779908432 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.781405729 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.78243214 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.779618398 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.778968142 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.950721439 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.027036967 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.779769858 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.779804421 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.882458158 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.791760135 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.842442936 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.780170785 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.872255654 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.831790251 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.901963916 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.778998411 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.997230171 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.863568873 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.776208571 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.777303899 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.846045055 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.789139793 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.775877609 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.779641555 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.783935315 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.844436146 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.042354818 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.775460246 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899738674 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.268534523 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.778092487 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.77852235 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.778112056 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.78354055 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.375173014 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.777727653 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.7778823 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.783978177 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.782666021 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.777871312 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.779037272 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.164113762 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.846693634 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.908144709 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.918663118 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.781100353 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.917543563 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.902599059 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.77735165 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.780114625 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.780528367 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.780522976 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.779042974 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.779386671 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.782137264 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.901456201 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.784846975 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.90222779 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.860205107 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.897298557 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.779856592 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.788780893 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.605408348 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.851801502 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.812156161 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.609944607 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.782881253 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.155704308 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.554450776 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778651329 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.779559 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.794223767 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.776973956 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.777936076 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.782367458 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.860062514 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.780033858 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.900174195 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50423351 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.954801406 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.778465928 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.778706398 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787209686 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.862663046 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.900735415 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.784884578 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.847919701 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.783831607 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.778819399 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.927360079 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.780675916 seconds)
  done (took 400.85557553 seconds)
done (took 779.333893618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.383038359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.356066441 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439129331 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.363664051 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.34394995 seconds)
  done (took 13.600762581 seconds)
done (took 15.318541577 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.796584396 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.785872623 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.838602694 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.857867729 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.791496031 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.799160995 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.860028819 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.795504929 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.830040721 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.833373237 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.862401763 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.860367477 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.801996345 seconds)
  done (took 25.428252554 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.791960042 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.937206363 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.013885778 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.820612133 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.792014679 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.017199429 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.844513002 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.928755938 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.931404808 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.021843134 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.023789324 seconds)
  done (took 22.841157226 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.790510001 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.935393196 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.021983926 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.823964953 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.793756282 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.024096061 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.854286282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.934983163 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.936285438 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.038545013 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.044646036 seconds)
  done (took 22.924371316 seconds)
done (took 72.91571699 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.78632827 seconds)
  done (took 3.504759878 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.803874067 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.950075045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.786483672 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.785251126 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.786098434 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.788661756 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.787741424 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.786617739 seconds)
  done (took 16.193917845 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.785269239 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785687718 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.785858559 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.78835655 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.786050897 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.786347638 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.785984092 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.786588675 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.790044581 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.786707068 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.787511403 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785883574 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.787606437 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.788581083 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.789635333 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.787068551 seconds)
  done (took 30.31141749 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.78809926 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.78600239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.787446613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.790940901 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786644167 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787819922 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.78763273 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.786292984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.790084573 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.786924811 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.787329629 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787187228 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.787780548 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.788693103 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.789740851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.79098793 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.786494185 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.786777762 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.791251893 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.787818388 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.790436158 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.789319887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.787842997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.78771287 seconds)
  done (took 44.636447766 seconds)
done (took 96.376195457 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.551652091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.549711677 seconds)
  done (took 9.825926951 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.801370146 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.798928895 seconds)
  done (took 5.33850546 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.799721161 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.799628351 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.798851328 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.794851657 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.797644978 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.79453542 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796337515 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.804439642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.795845914 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.795164128 seconds)
  done (took 19.709028837 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.795015632 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79575766 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.796619084 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.793771382 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.793583125 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.794570834 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.79543182 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.794125224 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.79798654 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.793145013 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.795408596 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793467889 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796050864 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.79788252 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.794830535 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798137007 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.794635491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.794798898 seconds)
  done (took 34.04489908 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.797714578 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.796821747 seconds)
  done (took 5.321329663 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.797007638 seconds)
    (2/7) benchmarking "second"...
    done (took 1.796623468 seconds)
    (3/7) benchmarking "month"...
    done (took 1.795344946 seconds)
    (4/7) benchmarking "year"...
    done (took 1.795557566 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.79803295 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.79530372 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.796076264 seconds)
  done (took 14.300315097 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.796630728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.959822268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.026951587 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.658174544 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.797967533 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.799727594 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.11147495 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.801081261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.803153263 seconds)
  done (took 20.481616806 seconds)
done (took 110.744821392 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.619100516 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.792579532 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.051250754 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854190798 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.826915011 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.089993589 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.819467891 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.446421742 seconds)
done (took 42.232226355 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.799997279 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.801171256 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.823915263 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.822351812 seconds)
  done (took 22.180385009 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.809872928 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.281812528 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.831902711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.707930312 seconds)
  done (took 22.585534762 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191733844 seconds)
    (2/2) benchmarking "read"...
    done (took 2.15855701 seconds)
  done (took 6.095547642 seconds)
done (took 59.400074259 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809561063 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.810221739 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.808206359 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.809750464 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.808862053 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.806925123 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.810317227 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.807889789 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.810052079 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.810771152 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.809598271 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.807814591 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.810459412 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811037497 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808994332 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810561804 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80984866 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.811099379 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811887638 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811290513 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.8126196 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809057648 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.810087732 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.810478042 seconds)
  done (took 45.17830217 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.812595077 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.811411735 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.80907779 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.810205602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.810888423 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.811351146 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.812451245 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811165632 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.809768895 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.810118801 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811963965 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811919488 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.811312853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.812195929 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810528197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.811235716 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.812455194 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815462904 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810402887 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.813356132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.81311004 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81259405 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.814781762 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813919695 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.814326237 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814153827 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.812642167 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.812844876 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821019768 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.813294926 seconds)
  done (took 56.115482435 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.810602198 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.813637865 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.813164658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.815290303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.81141602 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.811423228 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.811395351 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.813000447 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.815322665 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.812980706 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.81199994 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.810309894 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.811970479 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.815261436 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.815066368 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.811378619 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.81215847 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.813519069 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.813370709 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.816593893 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.814632248 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.81190277 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.81470111 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.813778025 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.815711394 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.812140124 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.813010138 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.81355412 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.813668211 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.813263881 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.816671023 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.812927013 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.812805794 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.812865283 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.813087877 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.814628055 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.814759352 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.812589516 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.813333558 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.814660035 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.81287053 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.814290556 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.811815212 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.812973698 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.81435258 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.812773227 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.81330542 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.815766194 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.811619301 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.81234147 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.814455618 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.812798813 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.815985856 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.813823597 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.813248082 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.813776045 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.814960407 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.813673087 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.813720505 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.814695423 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.813866859 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.812648055 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.813696653 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.818446022 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.813564869 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.812099332 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.813171979 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.815570554 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.81373421 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.814176957 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.814409685 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.81386805 seconds)
  done (took 132.324124511 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.813221139 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816090635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.814554812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.81535121 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815315774 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.814587029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815340945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817578781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814542831 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.814800519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81439115 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814949037 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815983056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.813304102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81557444 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.814368858 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.815196138 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815004176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.81751105 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815115793 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815133313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816544511 seconds)
  done (took 41.68048543 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818901476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814846381 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.815800591 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814455148 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813771266 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81679899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817794888 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815558043 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815550415 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816254888 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813684113 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815580293 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.816494312 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814703262 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814915789 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.816213244 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816870913 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818182447 seconds)
  done (took 34.433208159 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.814180278 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.814879843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.815180421 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.814701031 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.81754803 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.815081052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814533767 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.816016068 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.813916995 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.81690668 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.817438716 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816292224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.816205143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814977223 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820410057 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.818417784 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.815692892 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816797627 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818367761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817056763 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.817038288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817482636 seconds)
  done (took 41.707089303 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816040113 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817234891 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.816900851 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.817701077 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819997875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.818913524 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.817743836 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.817512692 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.818456264 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.819510446 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820491095 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.817885372 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.820573778 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818519692 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.81799751 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818590271 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818450176 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819550141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820269262 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.819834603 seconds)
  done (took 38.119943039 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819446053 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820587645 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.819260516 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820940228 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81949486 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821426404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818995899 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.820964378 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818598532 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818573553 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819432669 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819187151 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819330974 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.819155142 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819504347 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819404789 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819749423 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819163047 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819396363 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818875431 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823548983 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817635536 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819697878 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.820535176 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.820086028 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818372734 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820742432 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.820200797 seconds)
  done (took 52.701069067 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818180564 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819581916 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.819294991 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.82027959 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.818602831 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.818555163 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.819225609 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.821387767 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821502773 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820718238 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.819795766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.819607967 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.818799225 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.823102708 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.82181688 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.820276323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822195986 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.820611293 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821121105 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822575142 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.821719616 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821383853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.821075606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82118394 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821938663 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.822459431 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822021555 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82197522 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818945741 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822528846 seconds)
  done (took 56.372996814 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.843896601 seconds)
    (2/2) benchmarking "in"...
    done (took 1.84236816 seconds)
  done (took 5.441088811 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.820503443 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821891434 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.819865546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.820821159 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.821021464 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.82070275 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.821170202 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826175858 seconds)
  done (took 16.323272586 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.822769941 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.826142248 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.823627966 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.825450993 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.822350359 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830393992 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.823199114 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.823786751 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825934473 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.826375669 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.828721503 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.826303661 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.830830118 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.827747567 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826168116 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.823908909 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824106976 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828105597 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.825819514 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.822557495 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.830347134 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824904118 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.825851461 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.825241592 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.824286572 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.826402455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.833421739 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.826034604 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825891765 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.824533747 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.833389291 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.828573152 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.825745336 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827372518 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.82576644 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.827839816 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.834509951 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.825010861 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.825622189 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.825621576 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.827314805 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830914025 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.829330433 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.835006035 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.828515933 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.826267823 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.825820732 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.83128229 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.825714281 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.829090651 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.832240013 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.826567861 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.829816379 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.826300834 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.830320995 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.827598536 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.829027189 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.827952673 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836379485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.83553279 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.830486099 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.847344409 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.836830178 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.826942679 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.828510823 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836778657 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.851242292 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.828908117 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.830237243 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.828760992 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835596491 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.827042641 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.826370204 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.828882903 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843196208 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.837888424 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.828297934 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.827778931 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.825954404 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.828622059 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832982287 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.828655972 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829079687 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.828547497 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838745156 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.856277519 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.829509755 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.82820764 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.828841039 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.828300624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.832595957 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.831164837 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.827146789 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.826918118 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.830127244 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.82974853 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.830598003 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.828584672 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.826695829 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.839460528 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.83067964 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.828973673 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831833192 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.836426268 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.827570569 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.827628573 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829303829 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.827812526 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.838287007 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.829015934 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.82916104 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.830556534 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.830846468 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.835012576 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.829256613 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834045306 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.839392814 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.840918707 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.831740618 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.83599818 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.8311706 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.83202936 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838295324 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.854285421 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.829864882 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.835423605 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.833659553 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.842894554 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.833552681 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.83203777 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.832759686 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.832652151 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.829451321 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.832326404 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.83250117 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.83271082 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.83166348 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.832450947 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.830400211 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.832390109 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.835346321 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.831712649 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.835442108 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.830637965 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.836507556 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.834254912 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.834050836 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.839513242 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.833497354 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.83075818 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.830883017 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.834758647 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.831949776 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.832849155 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.831540385 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.833057611 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.832089322 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.834174464 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.835073361 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.833239192 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.832648105 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.831837553 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.838942858 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.831476346 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.831011721 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.832228092 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.831868248 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.831600923 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832944715 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.83254812 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.832997982 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833366788 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.838351887 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.831324845 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.833313076 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.83084844 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.832924977 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.832118495 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.840199979 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.844188865 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.835557546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.844098719 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.833827673 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.840899808 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.831369449 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.834796671 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.832525295 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.8316466 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.833173801 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.830802047 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.832069752 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.834806204 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.855129967 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.845452905 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.838968778 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.834583078 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.83871405 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.837332435 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.840073847 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.83467756 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837417665 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.833891878 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.833130275 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.833745956 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.835084684 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.839280121 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.83357443 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.834213267 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.836798309 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.835104758 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.834881958 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.836792013 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.834316336 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.834914957 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.834339947 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.832044858 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.835896514 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.832955653 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.844075994 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838290765 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.836152125 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.835262317 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837430222 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.837088314 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.837542597 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.837289292 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.839400768 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.839005474 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.837629011 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843739456 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.83713474 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.837948825 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.838082701 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.836952819 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.83747248 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.833971535 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.838876224 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.843545162 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.840509738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.836346162 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.843074363 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.837609382 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.840195487 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.838317346 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838861203 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.836272356 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.84001955 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.836436295 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.83940132 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.845113172 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.840105491 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.839219218 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.836331044 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.838636849 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.839356173 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.83908243 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.837764942 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840904567 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.846639018 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.843970924 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.83863263 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.842480506 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.840451216 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.838078092 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.845705169 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.840922176 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.85013045 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.845407104 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.838461943 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.835910399 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.837895096 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.840158751 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.836646865 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.837417764 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849247368 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.839850718 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.839453159 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.840237741 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.837473246 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.838138262 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847196605 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.840103773 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.84114018 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841222624 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.839672852 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.839506063 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.83958948 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843189382 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.840727877 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.840706603 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.844950956 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.837991557 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.841540127 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.839328863 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.84967886 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.839756524 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.838743419 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84959248 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.840760361 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.840388983 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.84146091 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.839728212 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.840830408 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.841167688 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.839171388 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.842064136 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.83990192 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.843382184 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.851316081 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.842426498 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.84788545 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.843163041 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851793826 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.839983339 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.842479625 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.841498998 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.844039901 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.849042902 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.842126793 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.840860523 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848576897 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.84111479 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.838734341 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.845324163 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.840557341 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.843621649 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.841855388 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.843250743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.845683802 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.844561712 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.841939353 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.841812287 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.842217857 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.840727646 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.844641596 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.842686243 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.841725089 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.843030075 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.842042736 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.84340852 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.842830119 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.844297641 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.842242407 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.843927356 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.842453369 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85248728 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.844280484 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.844326541 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847171098 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.84169241 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.853443351 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.842728392 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.843626957 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.843924454 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.843066552 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.843766598 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.843133775 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.84669899 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.844800008 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.843216058 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.843916332 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.856153162 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.851694044 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847944644 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.844426752 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.843330839 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.842933513 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853200978 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.86940985 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843107543 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.846119465 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.847922697 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.851526462 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.847627135 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849671773 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.846987527 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.85093405 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.844796 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.842445263 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.846981018 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.856531877 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845409582 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.846040489 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.845422333 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.850473735 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.848644143 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.846108827 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.845835621 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846996126 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.847333608 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.86047282 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.843976613 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.845765367 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845741292 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.845397317 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.845230581 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.84546786 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.846080021 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.845413461 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.847778324 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.845322791 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.848094653 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.851493825 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.84381424 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848741684 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.854689397 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848436261 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.846361698 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.846326784 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.847407755 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.847684505 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847667733 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.845131253 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.847236656 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.846537683 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.847467856 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850887901 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.857544281 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.848557928 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.848070124 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.847156978 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.851720693 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.84974283 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.850519443 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.849165584 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.855788602 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851158733 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.859672595 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.855655932 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.845923351 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.848826077 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.854658057 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.855847479 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.848972372 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.848608891 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.846414489 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.849190115 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.849328941 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.849272784 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849589336 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.848713927 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.853100368 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.849247964 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.849579493 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.849631927 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.847532464 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.850354432 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.851086618 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.853814851 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.851466498 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.84748366 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.845480031 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.849241919 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.847243655 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.848698039 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848087039 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.848044738 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.850573449 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.849196424 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.851613637 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.848793416 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.849225594 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.849670992 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.847969739 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.847778437 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.850450137 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.848450532 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.849430336 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.854378083 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.856394341 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.850152259 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.85112799 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.850496249 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.852719365 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.849769769 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.849065159 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852562756 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.850554556 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.859862852 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.849718656 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.849570972 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.849408199 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.849122399 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.856176458 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.853280299 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.852878842 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849688782 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.848909296 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.849996069 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852379368 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.858694098 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.854134011 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853702476 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.858285194 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.854771766 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.852532593 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.850577673 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.850918536 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.85212859 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.850403581 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.854131204 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853870499 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.850812397 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.851310331 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.853415236 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.851156712 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.852561738 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.85019676 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.851832035 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.854929877 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.861228334 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.862339529 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.852664571 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.852319763 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.850677685 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.85630735 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.862349553 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.851154348 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.852428877 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.852163653 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856587153 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.853393745 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.859673881 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.859129267 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.857636537 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.854451936 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.858471904 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.873377835 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.856071514 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861167698 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.886240766 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.853459598 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.851526568 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851571795 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.852652868 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.852280736 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.856891014 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.854534667 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.859227726 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.853097101 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.855116189 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.86279146 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.853220906 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.853203144 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.853999077 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.85440621 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.858559302 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.851158244 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.863083983 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.854744945 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.854054024 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.854311894 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.856351253 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.854193775 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.853282527 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.852326432 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.856046501 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.853116421 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.853040503 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.865302885 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.855948958 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.85640402 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867161107 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.864924415 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.854804179 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.853637418 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.855748074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.860169383 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.859721874 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.856076192 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857967066 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.862008526 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.856576777 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.86437357 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.857898017 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.85597695 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855805474 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.853816876 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853165387 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.868413996 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.864822598 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.85574593 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.855095934 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.859801659 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.853493005 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.864696452 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.862601704 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.854927168 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.857160087 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854758051 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.857217555 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.857622316 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.855381487 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.858756933 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.863195907 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.854894201 seconds)
  done (took 1099.877748563 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.855343771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855208843 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855053348 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.855694055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854808914 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855749262 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856690909 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855114268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.855484915 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855683653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.855715634 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856101934 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856660563 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856779384 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856331142 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855451084 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856103271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855644992 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856686639 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855831825 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856916252 seconds)
  done (took 40.755874171 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.857156629 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.855974805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.857355114 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856777737 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857397806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.856557389 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.857850607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855407073 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855836743 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856580704 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856708825 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858509975 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.857322571 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.857042888 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858891735 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861908827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.858735383 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859233561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.859303959 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857874813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857278935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.857837932 seconds)
  done (took 42.652428261 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.858446507 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.857843885 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.858823173 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.856429583 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.856474917 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.857591456 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.858645304 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.863177314 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.857818073 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.857449984 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.865298771 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.865356221 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.856358287 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.859726026 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.858443593 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.857704695 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.004640939 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.859786102 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.857152914 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.858444609 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.858854346 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.867385575 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.859444431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.857717098 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.858097314 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.859461992 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.859265925 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.857818403 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.85944193 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.859905348 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.862280613 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.857149196 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.859933599 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.860200525 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.864715805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.86083602 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.862874643 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.858578832 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.859560219 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.858892069 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.869501173 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.88142211 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.859364313 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.861366954 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.869652368 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.861918434 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.860146339 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.864939684 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.868174479 seconds)
  done (took 93.111167475 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859034806 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.859738109 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.860396792 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.860419204 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.859343709 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.86068746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.859933416 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.860464143 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.861448436 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.860929287 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.860697074 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.860698634 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860881731 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.86108373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.858881904 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859219196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860660298 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.860047441 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.860609336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.861066801 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.859311425 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.862980501 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.861890062 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.863259974 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860669566 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862975836 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.862584592 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.86417417 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.862081842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.862659827 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.862127686 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.86235945 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864681275 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.864747476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.864877169 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.863772617 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.863778065 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.862546031 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.863105024 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.864711911 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.865409675 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.864718387 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.863256628 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.86306802 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.865919337 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.86347263 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.864629565 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.86340852 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.864361625 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.862947216 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.865097893 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.864550551 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.861814882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.863837806 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.862907407 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.863946291 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.864439716 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.862520805 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.865377638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.867955471 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.864601709 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.865226037 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.864828548 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.863534047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.863609577 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.864884335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.862693125 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86329152 seconds)
  done (took 128.453293666 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864534437 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.86391022 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.865211597 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865088129 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864679978 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.863395012 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864176944 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.865298254 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.864604164 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.865320754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.863856845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864146381 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.864627224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866487403 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.864758608 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864583884 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864663068 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865205816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.867299535 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86640959 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.864834597 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866164443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.867012891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.867597908 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.865751781 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866964833 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865135085 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.868025381 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865594985 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.865893259 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.868419418 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.86807003 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86715568 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.871660957 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.869048895 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.866096139 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86625684 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865938949 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.868000859 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.866153169 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.866885658 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868200985 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866867518 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.866505376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.867184352 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.867946418 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865456177 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.865504162 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.867543456 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.867175366 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.867240783 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.867203032 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866536602 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.867235312 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866622737 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.866430573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868887935 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.867121602 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86622343 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868839151 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866061245 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.866836975 seconds)
  done (took 117.505765109 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867632431 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865864809 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.866284802 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.866306341 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868663162 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.866887422 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.867374116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.869455944 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869446475 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.869290529 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868638967 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869629351 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869015447 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868281144 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.868822596 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870763337 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867902993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.869564752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868257186 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.870563879 seconds)
  done (took 39.163757472 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.869375722 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.868492354 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.872602836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.870809739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.869242881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.870510898 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.869766136 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870972536 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872695595 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870985089 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870500738 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.870297361 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871559564 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.873202907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.870500682 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.870045233 seconds)
  done (took 31.728333195 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.869327478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.870401541 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.86741931 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.865756732 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.867539774 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.867712411 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.867874222 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.870063389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.866340509 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.867260431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.869178224 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867247846 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.869463697 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.868739706 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.869204874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868418914 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.868068892 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.868218012 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.867160441 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.867532164 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.868737139 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.868016597 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.867272181 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.869496596 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.86811414 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.869026419 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.868185841 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.8673761 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.869361588 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.869571399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.870479944 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.8684391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.868286131 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.869698356 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870004153 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.868190698 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.86778973 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.868131247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.87139555 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.869742064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.870586118 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.869500662 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.870566118 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.870109161 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.873720867 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.872111487 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.872607833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.870868834 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.87154682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.868977383 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.870122053 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.870659466 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.869316922 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.871051195 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.871985455 seconds)
  done (took 104.603155039 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870269196 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870181691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.86957478 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.870195418 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.870071423 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.87013047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.872385542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.870100706 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.871004997 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871373946 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.868622205 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.870137688 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870531447 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8713555 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.872177591 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872600583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.870684159 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.87130551 seconds)
  done (took 35.471950503 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.870941444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.871737164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.870717781 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.874059779 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.870732461 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.872209827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871661582 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.87010274 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871088747 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870627281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871471541 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.871245186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870542379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.87012787 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872751555 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870664064 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.870782892 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872002554 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.870944673 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.87152138 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871100195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871152315 seconds)
  done (took 42.967659372 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.8711215 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.870077826 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.886223521 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.893550272 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.892750271 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.906613807 seconds)
  done (took 13.121902788 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872048431 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872707203 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.871859417 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872060996 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872328274 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872228806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8722055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872114933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873130574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871580501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871316332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872790694 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871558869 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872684312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872811527 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874005911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873262249 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8738467 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872675019 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872373112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872505868 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873314696 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873958196 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874241962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872783501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872864122 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872625253 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873105592 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873302036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872845441 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874559544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874971098 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875413432 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874792224 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874337968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875083223 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875361779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875542714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875937855 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87343454 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.874286917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874099544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874459784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875557731 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874071672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876466279 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874968882 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873955118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875543727 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875483318 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875207123 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87563848 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875315594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8755622 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875883561 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877484252 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877845086 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874938786 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874955591 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874990111 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876611756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875613084 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876385056 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875914893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875980076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875104406 seconds)
  done (took 125.495034157 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876373387 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875951443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877752356 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876921889 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876288056 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877663758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874647675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875927509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875591108 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877675124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877155741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877472197 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876754131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87750413 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876222685 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87665382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877365567 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875671346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877459178 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87560611 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876077363 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87702209 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876038605 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87745949 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877040694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876768477 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877720977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876930345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877851399 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876619798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877131488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878587657 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878740105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.877982907 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878597317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878126709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878698853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879331177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877887312 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87868427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879158764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876861381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87731402 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877932271 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878743393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877871929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877582763 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877895049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878629652 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877605003 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879694553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881702534 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878508508 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879402252 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877243073 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878215106 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878741034 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878720738 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879950053 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878494895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878305728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878689185 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878583246 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878494732 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879740849 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88052526 seconds)
  done (took 125.736214806 seconds)
done (took 2562.787588893 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.90939279 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.943192868 seconds)
  done (took 15.661497196 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.047032463 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.993758586 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.881629968 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.92806373 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875281554 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.896132596 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.890000876 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.877361777 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.87962863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.878705244 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.880065214 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.065846379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.879792802 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.876800439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.882320332 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.973160284 seconds)
  done (took 52.513905895 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.885053514 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.883197673 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.896843518 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.88411559 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.885705153 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.897031434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.913376882 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.888234173 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.921275667 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.897485727 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.957269914 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.89380455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.884486818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.935532284 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.8962332 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.897470427 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.982861778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.961562099 seconds)
  done (took 36.167513567 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.965370111 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.895476823 seconds)
  done (took 10.675456105 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.910056708 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.903262233 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.904711106 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.890026319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.887128096 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.893907141 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.879833854 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.917945066 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.905213073 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.905924334 seconds)
  done (took 70.808065801 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.888072594 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.887372878 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.889044705 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.88312133 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.884042538 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.882715654 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.888634108 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.882057318 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.570336076 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.929147583 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.896391695 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.894041587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.884615975 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.886001337 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.882980563 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.909169959 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.99206171 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.883835316 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.882114987 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.891992865 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.884533474 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.938191993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.898120868 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.885742792 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.923049778 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.569353188 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.892667751 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.89179309 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.011059287 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.882227325 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.884265615 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.093901385 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.898538128 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.355219012 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.162268141 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.88842432 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.892118938 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.892056663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.884632246 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.009071852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.885408202 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.893792107 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.847310244 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.136252339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.983515046 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.935502272 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.232655626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.894524364 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.886840447 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.921481275 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.890070767 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.887078901 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.907661087 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.393092115 seconds)
  done (took 133.833970948 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.884869599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.243359482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05162274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.888593744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163947887 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082575536 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885049821 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927523594 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.879849077 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.114416309 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.131576456 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.990642289 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.886254317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.885011193 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.882121831 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.876733137 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038232334 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.951944747 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.881690968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.881252461 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908339788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124101652 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999204902 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.884840196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.90668433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092752707 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.999254153 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.987246211 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.659860334 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.884463772 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94529061 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.881376567 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.882305729 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.878440165 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036962143 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.976806373 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963585677 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.881684549 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884237124 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.882901774 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.628955972 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081476781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.974715104 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.009126512 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134157097 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087295616 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.656556933 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.882729324 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.616824474 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043658637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113675013 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.111926051 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.000593327 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.886435933 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.217723461 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.884125118 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.88346268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.129226669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102900403 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.981643565 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.882808521 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.884709634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8832463 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.170887975 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884177579 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97747211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.888568199 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.880006689 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.979923138 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981700045 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.111032079 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095143997 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.911815461 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.227212922 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.395205254 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.131307226 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.947413681 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130935451 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.887756331 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883202837 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966220523 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.72576267 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.138853773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.166106331 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.132490093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917086059 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.604194511 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.887158329 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.114379745 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.104772017 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.144010651 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.136451093 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.123150042 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.207677505 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.885290781 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.886665219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.25077428 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008752695 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.887064104 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.22722814 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116544968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.453244224 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912019663 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.192227911 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016213299 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.889658628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.520882822 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.889448512 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.115233671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.927584654 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.890198978 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888467765 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.102908058 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.877206405 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888717015 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.520162913 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.94926991 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.889353839 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117676625 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.893948293 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.155037815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890492982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12117788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.438568364 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916356562 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.061323922 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138095206 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.889992843 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136254485 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13341174 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000675663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105000992 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.590453961 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.889175522 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177445613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.892209573 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.89343013 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056089116 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.895294819 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031208388 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.892187053 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.184111734 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911378528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126703408 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.889789346 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.143860859 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925424227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943014497 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.894611305 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025838154 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895373408 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.8076173 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.05109704 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.901196867 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.895592823 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.445144791 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.896541774 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040755023 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118669168 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914722603 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.968972148 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554025672 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896164334 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976134252 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916523643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.289388485 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.895894876 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.150375351 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.899426424 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.898480679 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.896760468 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.180214941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.072725833 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.899958907 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.892059977 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.804342001 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.897784134 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.896330095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.075811193 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.353584475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.89481979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093950739 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.905551597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022218514 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.897164829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.966145237 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.229092923 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.893608218 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.896032458 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.894052674 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.898853779 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.897207948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104986676 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.918006416 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.430207951 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.034912918 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.172953547 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.203652156 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.141190369 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.936316871 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901722064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.153260651 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.901720383 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.954787135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.90097289 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916506154 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128273544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.901116508 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107107351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.170514831 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778066348 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944710011 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.901792291 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.89814397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.897434771 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.042461174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980573231 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.901570701 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.897654895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014554479 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015775622 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.101217286 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.90192331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.990731433 seconds)
  done (took 907.60370859 seconds)
done (took 1229.077997693 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.90195783 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.896998954 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.898219673 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.897805986 seconds)
  done (took 29.420928189 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.903484311 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.902621625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.899105526 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.901138845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.901952979 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.898425615 seconds)
  done (took 13.238519685 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.970525958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.900733943 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.899723137 seconds)
  done (took 21.597132327 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.977264657 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.29927409 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.040825224 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.333270665 seconds)
  done (took 10.479930507 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.899704592 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.900165333 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.899111267 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.900595364 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.903127574 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.902540853 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.902194808 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.901668719 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.902157045 seconds)
  done (took 18.941152675 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.673866578 seconds)
done (took 100.182830128 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.701413692 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.9938688 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.900033295 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.741569292 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.287334146 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.284213113 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.500821214 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.098686067 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.926163293 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.294677759 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.537509757 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.909257429 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.993125871 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.566239792 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.058983977 seconds)
    (16/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.981606293 seconds)
    (17/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.112871687 seconds)
    (18/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.643340299 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.084126669 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.062669156 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.904476428 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.024508546 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.923046838 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.02292474 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.89886138 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.757998134 seconds)
    (27/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.044874685 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.465350071 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.495247332 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.314797738 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.987944953 seconds)
    (32/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.303194964 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.91938669 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.160929752 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.000628036 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.461107731 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.909224377 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.036516565 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.601329002 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.073128493 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.900604298 seconds)
    (42/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.196820966 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.984320464 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.005355834 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.218207655 seconds)
    (46/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.003234934 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.975148352 seconds)
    (48/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.7052658 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.113049764 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.963162598 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.249581007 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.251062044 seconds)
    (53/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.992819784 seconds)
    (54/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.986874591 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.964888981 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.901838699 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.386602765 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.118849148 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.093207317 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.299227735 seconds)
    (61/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.365546169 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.647820803 seconds)
    (63/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.682263401 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.985245724 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.155264225 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.206256118 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.221988394 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.055342433 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.919750024 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.524270989 seconds)
    (71/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.126491377 seconds)
    (72/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.992446378 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.991946739 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.037938803 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.162982727 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.906400913 seconds)
    (77/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.034190627 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.906058777 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.268773346 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.99960649 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.921354695 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.283838931 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.00032942 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.906316578 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.557101371 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.44386583 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.17904871 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.03442555 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.905523821 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.425716051 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 6.907317166 seconds)
    (92/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.930998701 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.940170407 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.05123711 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.163770826 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.126644947 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.19497929 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 5.652955104 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.301006452 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.161492726 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009655282 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.158655593 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.933906815 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.996912611 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.147750633 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.218505739 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.92677783 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.159756033 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.367803556 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.906757539 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.19808221 seconds)
    (112/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.313112227 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.904318094 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.268710962 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.87884059 seconds)
    (116/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.028303253 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.088513196 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.952120319 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.976770188 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.904362236 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.132474545 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.202095618 seconds)
    (123/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.380326313 seconds)
    (124/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.593580466 seconds)
    (125/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.073664737 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.198665333 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.928690595 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.916998799 seconds)
    (129/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.966523969 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.779984793 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.990313079 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 3.696049075 seconds)
    (133/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.056701231 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.297287834 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236072226 seconds)
    (136/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.39407876 seconds)
    (137/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.104914323 seconds)
    (138/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.652091879 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.910450589 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.01619732 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.202209577 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.216696867 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.907241618 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.172446439 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.906369177 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.908820576 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.960806349 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 4.101573257 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.933190556 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.928346612 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.90780558 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.116445285 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.906824891 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.617965514 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.939531357 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.203952264 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.910047219 seconds)
    (158/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.660049974 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.927740769 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.928035078 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.906561893 seconds)
    (162/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.116947736 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.089125972 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.915465361 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.224781801 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.907602073 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.928130311 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.931880239 seconds)
    (169/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.363269669 seconds)
    (170/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.93183987 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.906605813 seconds)
    (172/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.197748753 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.151440976 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.011123895 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.088822169 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.021241617 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.227091962 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.910878467 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.982556106 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.473056899 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.143010462 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.014707577 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.06154852 seconds)
    (184/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.045246329 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.909620475 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.971427174 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.126291164 seconds)
    (188/309) benchmarking ("sort", Float64, false)...
    done (took 5.638311348 seconds)
    (189/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.110424356 seconds)
    (190/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.035211454 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.90954301 seconds)
    (192/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.54409805 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.226287023 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.03367161 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.201391512 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.920136235 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.922086648 seconds)
    (198/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.431532369 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.042244212 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.928673807 seconds)
    (201/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.117689494 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.055293773 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.976556882 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.686610109 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.051873611 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.942159544 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.794780925 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.091457317 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.993013837 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060761258 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.102054449 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.911921673 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147987476 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.212097741 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.91481285 seconds)
    (216/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.140262588 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.013125834 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.531972034 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.241498732 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.575861106 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.910994277 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.991119559 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.993062939 seconds)
    (224/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017233286 seconds)
    (225/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.062745819 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.322121896 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.211462304 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.165087984 seconds)
    (229/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.37555548 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.934074065 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.246508495 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.26273742 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.747412421 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.31464637 seconds)
    (235/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.992055876 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.031706408 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.587791654 seconds)
    (238/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.058124001 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.913735574 seconds)
    (240/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.282397154 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.950698874 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.949832307 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.474282839 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.540819273 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.015889394 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06711873 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.996416619 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.187887397 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.989442307 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.037590069 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.867468082 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.750868233 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.179070168 seconds)
    (254/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.804867543 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.186983264 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.917627581 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.805117829 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.918164678 seconds)
    (259/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.386331798 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.230212793 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.2516281 seconds)
    (262/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.303586981 seconds)
    (263/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.911469749 seconds)
    (264/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 4.67492917 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.843039285 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.002574744 seconds)
    (267/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.200720294 seconds)
    (268/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.440931602 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.05533545 seconds)
    (270/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.181856419 seconds)
    (271/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.171977396 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.015200539 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.933449042 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.928876733 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.937862465 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.916419826 seconds)
    (277/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.969823783 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.012806645 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.037507048 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.002800438 seconds)
    (281/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.254708102 seconds)
    (282/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.939913359 seconds)
    (283/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.305574696 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.228255197 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.445980269 seconds)
    (286/309) benchmarking ("sort", Int8, false)...
    done (took 4.946964163 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.528372656 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.996250326 seconds)
    (289/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.06317487 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.813945747 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.807941759 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.809915127 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.207003617 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.862877018 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.004468414 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.532859819 seconds)
    (297/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.46269834 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.944965861 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.918889848 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.917571987 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.913524081 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.157821771 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.238726824 seconds)
    (304/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.126947845 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.096697106 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132985537 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.251644893 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.753764097 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.032774902 seconds)
  done (took 1024.012975247 seconds)
done (took 1025.924307334 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.946334861 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93722441 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.918898295 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.94383089 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.035230112 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.964008486 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.935445339 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.925393202 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.971847624 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.973576214 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.919984967 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.963980913 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.923061443 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.921259618 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.921659183 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.937150175 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.225663152 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.945098204 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.930438355 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.923595519 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.928748776 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.908454196 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.959689365 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.951726529 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.91628144 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.916681684 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.914940222 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.931026637 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.025154901 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.915246969 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.916157461 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.923590176 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.214034923 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.934107894 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.909263352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.932546001 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.92352253 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.924258465 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.916675089 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.945074206 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.355017953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.915217476 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.91240432 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.91305413 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.911652266 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.918324482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.914449159 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.920682657 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926791067 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927092744 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.346487755 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.931196235 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.912661711 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.910375731 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.923351474 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.910947906 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.916385782 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926104201 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.929716642 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92690215 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.198501125 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.94169607 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.912066261 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.926215895 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.91882943 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.380600795 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.911113769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.914281865 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.349543097 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91825091 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.380085065 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.921911751 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.910985624 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.923325186 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.941588017 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.209915996 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.931289213 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.906767191 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.916935329 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.906031477 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.919354811 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925755375 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.910719058 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.907085706 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924684478 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.950093081 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.921787622 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.905730305 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.916162607 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.92453119 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.914820763 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.918327138 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.910069377 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902895693 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.916240269 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.909826985 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.90774092 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.909952789 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.909715909 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917833521 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.342571229 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923937359 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.903829919 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.900646454 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.903282878 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.91763927 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341710765 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.908669137 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924976743 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951640674 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.903410259 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.189178948 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.930050825 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917002832 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.91204531 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.902829149 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.898055644 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.192766075 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35691101 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.915682706 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.897768225 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.895561864 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916158585 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.899445086 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.894480053 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.200561898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92161614 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915860564 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.019304518 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.908766816 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.929044784 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.894723737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.904461405 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.940466124 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91291441 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.928448034 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.898327996 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913141567 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.915122534 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.892889466 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.907138658 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.908445051 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.895031349 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.904267357 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.892612118 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.938640198 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908688616 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911073182 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.917895598 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.017111062 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.893352283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.18420624 seconds)
done (took 299.832243204 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.967605324 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.889924546 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.008125225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.889283938 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97698345 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.961891938 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.887789839 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.890789298 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.888146076 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.386203199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.888325488 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.893974479 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.891252904 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.888597431 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.955854041 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.888424825 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.887893018 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.326466963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.888730691 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.967618193 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.886207944 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.886861487 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889217323 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.384530253 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.887091714 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.887150435 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.966938597 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.88857858 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.331009391 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.886575899 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.886784974 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.333306701 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.966792556 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.915494607 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.894899119 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.892579917 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974969879 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.900800299 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.953024162 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.953781181 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.00456833 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.919284833 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.887709478 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.88548395 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.888093991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890850376 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.886755652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.920171764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.888481988 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.892103348 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.33062945 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.894938338 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.892671456 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.887234794 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888244141 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.916883614 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.889297659 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.888208808 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.966735654 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.889925441 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.95414256 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.384232735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.382551039 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888362987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.886178195 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888490495 seconds)
  done (took 186.500500936 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.954706038 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.961356576 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.953717986 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.891064855 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.936623128 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.955011379 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.893268972 seconds)
  done (took 15.360124005 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.895327949 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888482882 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.937957891 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939625828 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887934338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.064912431 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.899549698 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889474096 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914327702 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.887444928 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.52144263 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.934562864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.893690824 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.885923346 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.898635361 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.941479038 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889757204 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.886273701 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.000846218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.034392158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890360904 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.895001582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.91257554 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.896765905 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.885616769 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.885483778 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.886439165 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.893542181 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.885730993 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.888372479 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886141466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.937376805 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.885794012 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.884675967 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887764256 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.8882757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.886476434 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886446652 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.885885134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88749201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.887953521 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.887604021 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.887999369 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.885547395 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.886616418 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.907614567 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.887505984 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.886674993 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.891129759 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885843892 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.914896402 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886486744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.88726286 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.89453424 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.932047555 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892355904 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888404942 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.890194196 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892416844 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.882975039 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882787612 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.033241989 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932837605 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.882993005 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.934562952 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.034576636 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.881045704 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.881409831 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884356049 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.970917645 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.879018847 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.929513015 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.878143197 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.995004298 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.87928299 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.056724514 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.900923426 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.882287225 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.881267179 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.879481337 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.88467613 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.879646676 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.884917703 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.883349983 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881386932 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87788867 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.878140298 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.8846004 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.881246165 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.874968149 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.92631476 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.875073272 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.881539827 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.018136365 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.875549506 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.993579099 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.902834499 seconds)
  done (took 207.366083573 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.888888821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.881491663 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.874514717 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.892433061 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.877333297 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.880567275 seconds)
  done (took 13.100986657 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.876169537 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.876202495 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.8723113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.875213653 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.877672424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.872710558 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.873018204 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872672515 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.87869233 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.875667642 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.873471571 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.872870167 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.8727598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.873233783 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.874807152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.873742431 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.872436643 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87286817 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.870470516 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874365658 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.082622716 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.873891325 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.873584722 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.878553668 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.878204838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.872986563 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.885578665 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.876321071 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.872410149 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.882731241 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.877287704 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.874656848 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.87724401 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.880651057 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.879269991 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.879474542 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88258005 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.878619005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.873552631 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.874722067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.877956294 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.876448815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.874249853 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.875459519 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.877801183 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.887536338 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.87832288 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.885714724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.874266501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.874358629 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.874618707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.876542615 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.873696942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.873173062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.879448811 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.877050886 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.883789213 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.872185266 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.871512793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.879503488 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.875477242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.880792412 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.874586189 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.876638843 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.880568619 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.873147505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.878173643 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.881890657 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865602044 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.868262174 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.870824499 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.867816304 seconds)
  done (took 138.077212936 seconds)
done (took 562.242538515 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.710228796 seconds)
  done (took 9.504651012 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.996743167 seconds)
  done (took 8.854564032 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.563020284 seconds)
  done (took 10.420358421 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.944293647 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.959534222 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.939796801 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.932581363 seconds)
  done (took 29.643309668 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.30895775 seconds)
  done (took 9.169353279 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.940102072 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.935430685 seconds)
  done (took 15.806597799 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.002663083 seconds)
  done (took 8.853847861 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.145553415 seconds)
  done (took 9.007743793 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.940643084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.933536019 seconds)
  done (took 15.743919844 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.925967212 seconds)
  done (took 8.77424499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.608515204 seconds)
  done (took 10.541610861 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.937413418 seconds)
  done (took 8.835381904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.951565393 seconds)
  done (took 8.802346063 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.22273819 seconds)
  done (took 10.07132579 seconds)
done (took 165.836570186 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.926625143 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.915827943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.91546794 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.915257668 seconds)
  done (took 29.518990839 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.954146579 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.953366069 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.96152977 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.953163747 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.943960688 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.943574156 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.956939094 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.951830366 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.942812017 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.950102378 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.953007331 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.95196657 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.951795868 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.960950229 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.961323807 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.948935746 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.954353759 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.952056531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.941995652 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.959954806 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.9481207 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.951469601 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.915515821 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.915327609 seconds)
  done (took 48.623185694 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107105958 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.988407683 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.068741849 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.966602131 seconds)
  done (took 9.970544849 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.915412857 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.980201873 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.965252061 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.963042587 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.965424398 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.016371957 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.968968801 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.074906255 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.041031768 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.041362473 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.92026373 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.934940702 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.936910758 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.960447654 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.017955207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.912843072 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.9152124 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.028293516 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.974172364 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.093189608 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.913418838 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.969511613 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.963826074 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.964782323 seconds)
  done (took 49.276750617 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.911639905 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.920310421 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.924042989 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.912132052 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.912583027 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.912894085 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.91882934 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.919405536 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.932621433 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.913020401 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.910337368 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.910132415 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.922170758 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.910491754 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.909264348 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.923581102 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.923310609 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.913951251 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.912011302 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.916294197 seconds)
  done (took 40.165901674 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.908519194 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.753106919 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.252497073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.161334398 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.907609232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.909347658 seconds)
  done (took 31.726166928 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.918412746 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.91295876 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.906184485 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.962013908 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.046483923 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.908989116 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.90717772 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.915690041 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.950167416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.967716081 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.9239178 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.934156231 seconds)
  done (took 25.087024282 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.906163197 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.907665757 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.90559923 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917498623 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.916434751 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.914149444 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.917297393 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.907245773 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.92112811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.923825229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.913540058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.918873022 seconds)
  done (took 44.806863725 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.614038449 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97821439 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907610153 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.781512435 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360611809 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458295655 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.796529227 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.570249122 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.39675748 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.854905695 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132884377 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.928574447 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017666039 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.930470724 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199976513 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.303180179 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121905793 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172167286 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.647262488 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.964471604 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.134609237 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155896731 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.224215282 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928740427 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931704797 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.025744834 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427070162 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.681565499 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965146609 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.305633702 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175810334 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.887342097 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986127096 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.93333411 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.943633671 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93219406 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935944556 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202827175 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.032802342 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062559202 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00485153 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179567971 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936157955 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351428839 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.63277204 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.238614344 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.041948735 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93052477 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934937674 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931422598 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858998208 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014540467 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.933583423 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93675484 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.631669724 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93269913 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005564583 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.932511084 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135097351 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.738024843 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62081469 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.932151678 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933526152 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508057908 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026583549 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.045710676 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651567216 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3123791 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.348789819 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.027308516 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.933154797 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934249757 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.140948731 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899863467 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701511003 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969298524 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067847584 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.947057347 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571622678 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219607793 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.368866701 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49041079 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851650563 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208198231 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.697442594 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920792832 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15076726 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.759519679 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855687985 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151042426 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962892447 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932077798 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193366577 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641320576 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042199344 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.943333217 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370302785 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949175349 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93701905 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934560114 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146791689 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406713137 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960726261 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04995564 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944583318 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013405794 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857597706 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.941545255 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.932285783 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837241517 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937183093 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929418831 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.977540142 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.670982367 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971121303 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.870057251 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932944992 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.032302685 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970602603 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.88458173 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182266557 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.236211672 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.605910034 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951135655 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.065501857 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.323295052 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153332895 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93446273 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140870927 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462882914 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.339668687 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973164311 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20988964 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.980752444 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216334256 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349358425 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995009492 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.704494803 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.71893849 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.139520435 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92976892 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.915905311 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915376907 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917863672 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846777222 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.555564545 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.29700428 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.073979446 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121702256 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.288162321 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.890540608 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.909301925 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21268978 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043415904 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.911658422 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.568134923 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.365165541 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.720101565 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.926148205 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105961301 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.146137648 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.865161299 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916612921 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979925502 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919399796 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.917418507 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.296671184 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266800406 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.902830081 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.904971312 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851777446 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911953331 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.905903707 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.436494361 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869365113 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903643275 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.911615927 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.775337178 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979013612 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902390669 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900326713 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436165487 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.403331075 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.903371249 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.562535906 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.893291531 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082600834 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165215183 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.287832183 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019803893 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.588965847 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.322498208 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000664954 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.59082147 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811728199 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886184281 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.82156712 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889438372 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878484397 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886788492 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.066917107 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154881227 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180151031 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.342248951 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943534495 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076949091 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.599890534 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830002447 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876726972 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880499414 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.878001436 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876698437 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38799572 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.173398338 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98298688 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905269019 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881922895 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006284087 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.889124766 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803265938 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877972967 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879069726 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374078652 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904702193 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.825364515 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213203871 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.779452568 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001493758 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921801055 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.889489105 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883551525 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.607992576 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.919138474 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804749975 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37083125 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913340474 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.667946582 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366466361 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463559268 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179950244 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196868369 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.20822239 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.947021582 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089737287 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.962170214 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932867755 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963905665 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81530586 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.804049279 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.536447192 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212276067 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145589356 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88430309 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097241588 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620347395 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107122074 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908014417 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.620383035 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186103062 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856600026 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896388856 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.261993868 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984161002 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96089184 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882425157 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.835128164 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217822108 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922457091 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.579603498 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895463477 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.236363802 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367129474 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.947782422 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.280013038 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092091599 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879936911 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234368368 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.143217072 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916887945 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885233099 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.869197556 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.094752627 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458226852 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.739521296 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883439047 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.097430612 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175374661 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.789264659 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.880790454 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.085981928 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139114867 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880514107 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.26786149 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250561766 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.987425344 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937474265 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107384243 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.612608603 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182866891 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.451389747 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.373475373 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88146687 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807983099 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.581403745 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.08316214 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881647199 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.846250176 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095568807 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116900057 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567596751 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100896067 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124632866 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.893248965 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156408362 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957562826 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.978352875 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.223774919 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.319497329 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.128772972 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107490715 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422718979 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096908485 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337599175 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.051503436 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.884282474 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085997534 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099563862 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.096070099 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.288165636 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053171658 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.590482631 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.887411748 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.090232223 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180259431 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943298329 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.282802078 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051860725 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.968760961 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887663308 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947522091 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888636485 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891722265 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285458972 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.409949877 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.895166155 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960660368 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001854891 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.395292221 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.885468187 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.888669898 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156042749 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232613454 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217967611 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866764795 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882696579 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889849101 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012666722 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.810432966 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890607606 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155482601 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.886680784 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387452752 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031609879 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89950937 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.224033351 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272810136 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.608163979 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846741637 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890377038 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104293597 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198021275 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.126500237 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997462461 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156258325 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223925287 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.922446507 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285247823 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128631083 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888310593 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.761742396 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88919864 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016192935 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.082250112 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158889548 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.394540428 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612689373 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15274613 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.754733642 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889634625 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.701559 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157495124 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159299046 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9396139 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950155757 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892548965 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384572159 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.607728344 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020957764 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.747160261 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813990315 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.901711052 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219921648 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.132376542 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.60004367 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.893748225 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168020584 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197362683 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163046793 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.944145726 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.747536067 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103649691 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893522391 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.899879977 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150475157 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109336337 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137670626 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892393326 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.893460044 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.698295204 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817571488 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.889352553 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944594743 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117062983 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910079484 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.404957139 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.590045039 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175495115 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941278125 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894230484 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163159747 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.413988584 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451842145 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895442218 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116559939 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.922052331 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189831449 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.894022324 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385930733 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193033911 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.893889397 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.482819006 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.136211317 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158935242 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822368122 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899296647 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107700026 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.75182349 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89140556 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.881376201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3851261 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122801151 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.628679355 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449755437 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.893163869 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.896298831 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38669835 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922493491 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384650654 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923943395 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911069125 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411605362 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.590703567 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.18149514 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137326736 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482294264 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.49128435 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.894840109 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.89327289 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89556667 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813359251 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.242807124 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.079403218 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177975322 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927662317 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39014037 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925774059 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.301476026 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010093938 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111778862 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929537205 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.415134504 seconds)
  done (took 1676.215271905 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903527554 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.941866459 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.900484067 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.908471556 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.910521996 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907411412 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901983937 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966701219 seconds)
  done (took 57.162975492 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.894048476 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.908157352 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.899673607 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.894848521 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.907133127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.894772266 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.054822304 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.904307665 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.897471806 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.899338774 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.894833506 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.893696172 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.178468561 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911462473 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.896122318 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.893686414 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.897553795 seconds)
  done (took 74.551628987 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.895046643 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.13966855 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.958251591 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.895730342 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.832950957 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.91193502 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.864223312 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.932442729 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.899192045 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124220117 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.194279836 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.917105313 seconds)
  done (took 90.390501778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.901622314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.898554472 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.897418394 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.89809496 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.897153434 seconds)
  done (took 11.321890976 seconds)
done (took 2190.704593423 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.172400707 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.955349618 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.993551596 seconds)
  done (took 5.773447638 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.045077072 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.089786487 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.202702902 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.967107344 seconds)
  done (took 10.135829366 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.198976195 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.279489338 seconds)
  done (took 6.302917175 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.251791344 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.901108929 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.306494793 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.901069052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.899051589 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.898894349 seconds)
  done (took 22.529373634 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.897823534 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89836768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.897779366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.897674038 seconds)
  done (took 9.416204796 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.897479852 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.623904979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.897483171 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.909835204 seconds)
  done (took 21.152827683 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.046224422 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.013907284 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.040817805 seconds)
  done (took 7.926168382 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.040681365 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.741566485 seconds)
  done (took 6.607216045 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.052500393 seconds)
  done (took 3.877813686 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.927019581 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.169605778 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.393363457 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.857371971 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.587487188 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.008566737 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.266437135 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.150695039 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.321984268 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362768047 seconds)
  done (took 25.871700414 seconds)
done (took 135.051839661 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.438670341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933544415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.10785655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.302790433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.149318362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.105813054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.117041835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.299708087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.972508054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.967683068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.287439481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.158072708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.063665448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927129506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.070970824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925579165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.127446306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.285029512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.950820634 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.186946502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.115924617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.921674449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.116427428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.924900136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.122566471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.04440392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.466415744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9165791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.097759652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.468716318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.04910067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.327416038 seconds)
  done (took 169.77983823 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893650884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894683245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.893511025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89172757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.452908762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.891964228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896793651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894321762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.362041064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.366667173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.896200867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.450073725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886219608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890212894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885917027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.884832288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.541635223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.881569958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.884021589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.881144372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.883647225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.272750638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882146986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.273762237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.525445474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.882546055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882059002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.883371523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.882505901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.882889539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884609554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.883333042 seconds)
  done (took 210.363620557 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.884590657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.883761317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.880389799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.885288036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.883784998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.883514415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883347083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.882217101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.730741211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.720767307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880901342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88335309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884830299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883775583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.884737097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883451978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.882380371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899430757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.882183852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.884083281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.883301003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.573151927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882120625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.585935133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.882548685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.885297492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.884243231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.884360275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.883034266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883753001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884444773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884680879 seconds)
  done (took 221.178632302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.125017148 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.886492507 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.886922145 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.803570511 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.886723904 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.887082475 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.875152026 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.133724272 seconds)
  done (took 19.29953772 seconds)
done (took 622.468419257 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.2742852 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.107543189 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.069320035 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.910796639 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.144615753 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.955817906 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.90592054 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.97475517 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.736390708 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.985904335 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.550153012 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.933367294 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.647675232 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.938547102 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.035860114 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.964481054 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.481705147 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.577563179 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.052706804 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.965299584 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.100049009 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.853082194 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.986828287 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.774601634 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.566537766 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.888802476 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.941373792 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.485174885 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.920075581 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.072746731 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.616924404 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.205056307 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.923145316 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906991895 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95902624 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.939636665 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.134593581 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.919185945 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.036204245 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643449964 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.965514487 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.642225082 seconds)
  done (took 103.507255251 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.898625263 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.896494186 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.895188419 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.897186522 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.906452974 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.896332139 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.895950154 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.896584517 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.896600587 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.896586238 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.896646245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.905054048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.895110919 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.905073975 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.894357247 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.895556695 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.895453178 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.903476303 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.89560657 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.89615475 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.895476967 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.896816901 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.89250637 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.896198667 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.896424096 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.896283214 seconds)
  done (took 51.16403751 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.891248164 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.066759462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.141459154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.910483976 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.890383451 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.894579768 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910035767 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.896421811 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.893911978 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.893299595 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.99589249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.897793998 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909477676 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.139307306 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.907370427 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.891123312 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.890756123 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.892778056 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.073197495 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909721258 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.912019308 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.897278055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.911272121 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.90567716 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.894407841 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.892428556 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.894583457 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.390246681 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.903165105 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997345969 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.966912897 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.913693798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.331281127 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144694555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.946460951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899466525 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.892775272 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.002685078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.898624778 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.892504338 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.910645503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.896687106 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.138546808 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.429174705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.907169642 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.892167905 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.400502696 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012333934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.93339927 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904312142 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.145769354 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.908802485 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.89408343 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.894380708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.930274737 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.903746895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.893917858 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.255927906 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.904844727 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.911698057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.898706206 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.894446135 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.078386863 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.90392839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.067048045 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.903977976 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.900578326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.89682309 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.143126037 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909934537 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.456136148 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.907733513 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.893504671 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.999323267 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.07436029 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.425685477 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.90666671 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.081137715 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.351996589 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.919463063 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.904198996 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.381176146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.92056208 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.901507379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.895110506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.897006804 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.895368034 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.938856583 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.911167726 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.346277472 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.441129342 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.273833235 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920953419 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.906819537 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.896473018 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.256555432 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902639614 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.895084333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.134363254 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.458714618 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.909209095 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.903122035 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.42797867 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.910477978 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.913946618 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.904477911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.150145583 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.912379279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.939419471 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.896084558 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.902103809 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899145126 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.915087373 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.903494676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896615693 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.415859032 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.018571803 seconds)
  done (took 235.781338094 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.896458922 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.894159663 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.895331629 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.894032612 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.895749009 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.896504883 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.893848455 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.896391863 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.896979073 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.894553765 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.897042862 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.898500721 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.897103924 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.904209778 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.937152782 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.898859762 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.497078695 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.897548302 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.896372207 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89437706 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.539772392 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.900025464 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.895924286 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.894947029 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898043021 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.897799652 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.906724178 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.934994131 seconds)
  done (took 168.266968293 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.897589916 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.010338422 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.91508857 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.927163887 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.904471295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.898247355 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.995934578 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.913423172 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.905261206 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.898688959 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.899219496 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.958358084 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.907249718 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.995519701 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.92654418 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.002416756 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99999738 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.902851374 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.898166793 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.898763704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.926977517 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.907087153 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.959663798 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.023121939 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.916703511 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012239205 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.917791771 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899114339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898860321 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01171182 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.915868508 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.959414007 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.927887461 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.916927149 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.01501569 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.015420996 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.000692544 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.001890234 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.904106096 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.898658496 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.900220155 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.901287558 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012459531 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.919003028 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.901503667 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.015470033 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.919915567 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.901021578 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.900515349 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.900380694 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.913701974 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.917386974 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.963687466 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.030279081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934871265 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924302233 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.998260928 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.027974636 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902861094 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998016842 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.905686501 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.014109025 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.919095695 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.902336811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.902626347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.903877303 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.930299645 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.005305106 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.004717596 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907284286 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.999163062 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.935114996 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.90728425 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.902426845 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902094242 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014584455 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015418548 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.935254019 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937201149 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.930562212 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.908788118 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.902580833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.903664878 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.918152937 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.905529503 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016568402 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016766102 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.907089519 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.904057593 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.902686362 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.902672799 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.927439311 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.022636832 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.937795392 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.009013739 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.966840946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.97460157 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.917212342 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.916735328 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.906460572 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.965424627 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.916629127 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.914456015 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186884037 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.963651876 seconds)
  done (took 205.983674494 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.306576551 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.947874568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.958264707 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.224195541 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.262052068 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.903991051 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949906314 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.953884976 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.984525186 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.180203083 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022282126 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.971587442 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936690521 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.924292163 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.946902909 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.984661821 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.959311793 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291495245 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.153139418 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.440106935 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.94132876 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.221093772 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267773198 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.530263393 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.001720904 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.377519029 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.571081586 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.113179385 seconds)
  done (took 64.162968821 seconds)
done (took 830.681914188 seconds)
SAVING RESULT...
DONE!
