cset: moving following pidspec: 25681
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.349898504 seconds)
loading group "string"... done (took 0.550548672 seconds)
loading group "linalg"... done (took 7.043364913 seconds)
loading group "parallel"... done (took 0.156158657 seconds)
loading group "find"... done (took 1.111595598 seconds)
loading group "tuple"... done (took 1.705765845 seconds)
loading group "dates"... done (took 1.231139306 seconds)
loading group "micro"... done (took 0.221573702 seconds)
loading group "io"... done (took 0.968898067 seconds)
loading group "scalar"... done (took 36.232232041 seconds)
loading group "sparse"... done (took 11.186405 seconds)
loading group "broadcast"... done (took 0.908521497 seconds)
loading group "union"... done (took 11.817721794 seconds)
loading group "simd"... done (took 4.144345651 seconds)
loading group "random"... done (took 8.529395995 seconds)
loading group "problem"... done (took 1.854606962 seconds)
loading group "array"... done (took 19.814538168 seconds)
loading group "misc"... done (took 1.664113671 seconds)
loading group "sort"... done (took 3.139051982 seconds)
loading group "collection"... done (took 16.591522447 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487255029 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12292673 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114481099 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118766124 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144611873 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11447814 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122944161 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084371429 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.77785992 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147160241 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119742364 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414379233 seconds)
done (took 5.101676526 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170660048 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083349174 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081741269 seconds)
  done (took 1.312928189 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065536933 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121486001 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066330175 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067117868 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066748947 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066359428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065628708 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065814791 seconds)
  done (took 1.664790614 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073636652 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068794677 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068711624 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068006432 seconds)
  done (took 1.42660608 seconds)
done (took 5.799903923 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761178391 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200939539 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18216789 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398582134 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129124057 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153526971 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642989447 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312115624 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186619509 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081291922 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10458444 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317721284 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107555259 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639929513 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074837403 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090657023 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13595917 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416234412 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067712102 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081859829 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088834357 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128765078 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085996513 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074844431 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14398893 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068618708 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130701586 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080259015 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066136144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207795915 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172187819 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672391933 seconds)
  done (took 10.190283842 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095510645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09702066 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068847792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136316167 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098020252 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069338914 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070665423 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067031243 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086084618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127226979 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088531605 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101676668 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064981296 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069130533 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084354242 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203849952 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079890769 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080783636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07018797 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075393416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116550996 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078727839 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077806675 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077358958 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128220951 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18047978 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098748549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097485246 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066920997 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080368299 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115276601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125810418 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067148441 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066538718 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124129771 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095582293 seconds)
  done (took 4.608573727 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.289381765 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139783988 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091416381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131297943 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064625741 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106796014 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065457323 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080693469 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202244242 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351637491 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576150476 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110629822 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103168089 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067659931 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068342999 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066738463 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345199956 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10793947 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1031161 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080906949 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06929408 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068871996 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342121254 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067171447 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063508645 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067568484 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057704706 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12301826 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067877606 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.924350386 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125370694 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067282023 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100583036 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169353278 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108299618 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063579783 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.217159523 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141822558 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06876482 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064148688 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150713859 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069925588 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068376956 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084097744 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10359739 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112179389 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065458104 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066532238 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162642472 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065018359 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079900473 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.980675512 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153872524 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079335464 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064170911 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245700474 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085831341 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069183284 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064984533 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18652585 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135925885 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067046824 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066407246 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067705083 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06869965 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359766609 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068493411 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.711585839 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070147415 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076950392 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069347462 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069530748 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072547067 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072273725 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08538616 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066106819 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075013754 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066168914 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065592066 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066580044 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083841924 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357910557 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066227276 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067954278 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064274471 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085962294 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096646376 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066178286 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065097362 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099837763 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068093258 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065559063 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.212586603 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066993376 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083822311 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0692534 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113693658 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066108427 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088498079 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066815862 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065292062 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096659797 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069143176 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099226749 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080711455 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068957675 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.39843654 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064387954 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064796775 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065073746 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068784802 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064818822 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067583382 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066004932 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07933631 seconds)
  done (took 20.892251703 seconds)
done (took 38.126982995 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271651417 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075842119 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075235402 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075262873 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074971965 seconds)
  done (took 1.804169718 seconds)
done (took 3.018508359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11897159 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098805779 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064010945 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095316718 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064033312 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099631562 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098807009 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080788751 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098924636 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063993555 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095692958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064105092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064028564 seconds)
  done (took 2.340448584 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082265895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083102458 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06964724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082170794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063826643 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08243326 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080548665 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087933784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080467544 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071759035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063392896 seconds)
  done (took 2.055335871 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081551501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083760352 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069263019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08111557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063354102 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081036576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08043283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085141222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081154113 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073143635 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063881573 seconds)
  done (took 2.051409678 seconds)
done (took 7.649644037 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077219299 seconds)
  done (took 1.275962242 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590859248 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.047045913 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081567521 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112029312 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183387806 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119638002 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280215105 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086737749 seconds)
  done (took 8.878831518 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101616255 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071016314 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070173129 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.0717446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068834567 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071027993 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07108122 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071924735 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071241065 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068270733 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068194002 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072235562 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068716746 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068854272 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069410708 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068985797 seconds)
  done (took 2.421510206 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092147082 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090876444 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073646594 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074716431 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07204965 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071822142 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074227388 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073294435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070895642 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071721525 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074804016 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073255199 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071350754 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064839381 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073967668 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075566773 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071044317 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073811658 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074798099 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074815226 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074249085 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064380554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071558489 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073600374 seconds)
  done (took 3.081868424 seconds)
done (took 16.866151777 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112325439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071135658 seconds)
  done (took 1.388836796 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080828845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08306112 seconds)
  done (took 1.378599873 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083047561 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065017525 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091303206 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077940814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066528572 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065521865 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087908046 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066333998 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065643701 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066114473 seconds)
  done (took 1.952866521 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068475838 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077998876 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070774129 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081677211 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073960152 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064356684 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072598114 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067739655 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077537373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063002578 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070810773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082034484 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070843315 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083759465 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072195298 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068064548 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070638086 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067116154 seconds)
  done (took 2.520663833 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066079658 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067147634 seconds)
  done (took 1.352919546 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066914397 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063768911 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066845424 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066792937 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063489846 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062662533 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06350595 seconds)
  done (took 1.669605725 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385621122 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109871938 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29420257 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070290856 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081463208 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248679653 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065131296 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070366041 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070022556 seconds)
  done (took 2.65529534 seconds)
done (took 14.136456291 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079446914 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08491919 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094979503 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.366343196 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09144498 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065706331 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113763326 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194197221 seconds)
done (took 2.320139988 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214193105 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614025768 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386355149 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197847063 seconds)
  done (took 2.420142588 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324332678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086681994 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059030501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066830316 seconds)
  done (took 1.763642024 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065688427 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069025066 seconds)
  done (took 1.359813923 seconds)
done (took 6.985580833 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066066975 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085024077 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066299635 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065922501 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063659617 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066320097 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063913758 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063698109 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066063827 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066069342 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068421144 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065908309 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065829426 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063489044 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063239958 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064964834 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06590833 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063308169 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066179721 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063466538 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063169523 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065474187 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063373681 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063688581 seconds)
  done (took 2.838862505 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082829119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066369788 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07138346 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071998739 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070330128 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071399865 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071344972 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067014068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071430424 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068009076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069760035 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070328467 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068285675 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070051741 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068118134 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070263486 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071637421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066458227 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068888179 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070227757 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070921192 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06637371 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069713254 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071352489 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069595161 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07000251 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069696295 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06639411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071209619 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069936884 seconds)
  done (took 3.33475762 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069807811 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063071006 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063889542 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070473743 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063826514 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064686186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063466781 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063728328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064282394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064052416 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064820576 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063468292 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063718496 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064500464 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064451933 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067722904 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078927918 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064587574 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063746755 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06422892 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067117021 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063700693 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063723942 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063850333 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063426751 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063292159 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0640534 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063510277 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064344837 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175562022 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066394976 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06731152 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063332174 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069936787 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06731685 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062993634 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067107199 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063318358 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064089166 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063081316 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06303243 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063049128 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063336969 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069886576 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063901214 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065104774 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063436363 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06466436 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063728961 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065708723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062667914 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063062245 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065061115 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064377102 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067349506 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063124037 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063958936 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062689559 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06423115 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063254045 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062835464 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062966733 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065448652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063741189 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077834899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070112314 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063307248 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065452632 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06440911 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066017265 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065198855 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076942294 seconds)
  done (took 6.043560457 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090731931 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088756718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064920221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06504026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062150198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064167793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067374406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063925886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065706319 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069657783 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06420969 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065220091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065214926 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07634328 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064210653 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065196987 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069999358 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062046523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06373671 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067001834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064159953 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067237028 seconds)
  done (took 2.744185205 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15374426 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071004343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105564172 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073058206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067749046 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07346681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069672971 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069943714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070099394 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068105944 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068361219 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069715393 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067797624 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067917159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06823176 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067966159 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069851906 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067969827 seconds)
  done (took 2.612711446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076860912 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065836373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087046546 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066409628 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065640422 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06798172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070604679 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074208521 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068229553 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065646551 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074045644 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068472027 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068159296 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066127163 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06850001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065813683 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068118069 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065884107 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0740203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070829419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070745268 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073904488 seconds)
  done (took 2.784713762 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079576925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067352356 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082718994 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068335553 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061715426 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06428382 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069998913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065826523 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069876179 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067632574 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065978737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063937952 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069261742 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065707355 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06938835 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065961301 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067444453 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06582725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066959636 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061536859 seconds)
  done (took 2.60254751 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086911713 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067725331 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067576192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076048822 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067145166 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067410476 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075080452 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067368799 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066872846 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087382004 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066879363 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067175243 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07491479 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072008752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066793227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074649882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074371323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074883059 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066972355 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067148108 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086980646 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067275841 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07481915 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066937732 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067032182 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066945927 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067400801 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071806104 seconds)
  done (took 3.249860259 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066280318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065802524 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063082887 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063284192 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064134155 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063462756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063166972 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063318168 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065637666 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063266912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065888109 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066038787 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06590936 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065926873 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065551961 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065289401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06597509 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063154196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063341337 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063070023 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065425885 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065468726 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065652302 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063403234 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063341386 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065302896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063358858 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062957311 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065461527 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062990454 seconds)
  done (took 3.18383918 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075297566 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072989702 seconds)
  done (took 1.397463369 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063263861 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079259447 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063082682 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069614752 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069723962 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066484426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073703184 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070142909 seconds)
  done (took 1.801010097 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082201748 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076386887 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068274783 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080750511 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076149429 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08241942 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131322812 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067004363 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073168198 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06376212 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079493484 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065280165 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072156148 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066301517 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071771769 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072059202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063840036 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071895064 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068520915 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064663474 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067199893 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074550546 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06828535 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06153754 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067116458 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087573186 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076561512 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06553626 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069003545 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073413078 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071650788 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0600236 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06594741 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06684476 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064013955 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075445249 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081023421 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069122321 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074529658 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067126649 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076872642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061295804 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070641345 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072801658 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075767095 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06620852 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066757794 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06109491 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063688431 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068139611 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061534055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066040683 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060731682 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075012914 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069240994 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076205097 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064524034 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067320795 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068528659 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069020062 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072322232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067932406 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068302902 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06544249 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072555193 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070511843 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074966963 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061113798 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060243755 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064292662 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075968498 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088810296 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072562867 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066904785 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066847479 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063780279 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069433435 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067648846 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072279172 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073179805 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066323357 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071779822 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073912888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066585398 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068807253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074681755 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064698575 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06949019 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064571702 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082320676 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065247845 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064335132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064293506 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076434403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069969913 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066184155 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064721212 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073673592 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060490629 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066781905 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067160112 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06695124 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076003086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069717698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070145504 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073646151 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072320613 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065378117 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067535765 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061736355 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065736554 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064650375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071949341 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059273359 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067450016 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065482122 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06496583 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197707945 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065088897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067716273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074442872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072651082 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065610195 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063633645 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069052052 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066732216 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069599593 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074643776 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064897689 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062308539 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061441726 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069977841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066526085 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071235082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071477031 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069820024 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060884019 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.0648266 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0715684 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075396576 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06697073 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067074769 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07244398 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068063236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065530739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072573068 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06917406 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065568408 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072574764 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067387907 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061688695 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069742783 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069930452 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064868743 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07060669 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070480607 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068531065 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068192995 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065105959 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075090736 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067416765 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066557271 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066764342 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065184108 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07736313 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068927962 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062742472 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063825016 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076742096 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064339992 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067274144 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065646298 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068385002 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067375479 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064121346 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066176234 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068444283 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077070649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069921574 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067717444 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071698232 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078349993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065954584 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068649883 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066480468 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067753239 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067471851 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075226399 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071826843 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070622056 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068893013 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062644765 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071760457 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073779633 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06583279 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06424396 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065459469 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070690397 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071964998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070746159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066977007 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064554899 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067157343 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069469403 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069074738 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065965784 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065485262 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072815397 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064615826 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073199883 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066979148 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075947693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069500264 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061733605 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069052695 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064564801 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072045072 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061232639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064148196 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065313311 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067031218 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064677564 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068176783 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060215232 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072703702 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072916974 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065150726 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064153187 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06456288 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071597891 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066519308 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068430033 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067995684 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070744884 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074942885 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064737882 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068312973 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075488708 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065075517 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187096005 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07309244 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064810571 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066465543 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065736946 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064817739 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069693562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075861652 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073259799 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060626551 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069307466 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064961116 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065718839 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061940304 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071073774 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070531568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068066178 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073926145 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067483392 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066912218 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070552896 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066605116 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067839725 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068101335 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069274921 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067649123 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068617478 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066505992 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069519767 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066000708 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06510575 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068132392 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066568965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067556496 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071876813 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066281122 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067655601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069546375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066852406 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067315433 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067007044 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065955818 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070588211 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067313846 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067648751 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068638531 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061746308 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074226813 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066876659 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073998883 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066935651 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063521158 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074104163 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068654134 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071807823 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067359921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067189183 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067615028 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06648483 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069105801 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073686394 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064447532 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07708514 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074752001 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068004639 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069463447 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067179423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068456756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065330641 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06727614 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067102464 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06673273 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066816156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07083612 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068805955 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066154061 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067676874 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066993541 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066359521 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066940364 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06064314 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065535882 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06541122 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065729031 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076106814 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066669894 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065790904 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065226487 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06681092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065136953 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062802074 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074475732 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075581894 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067219494 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073766931 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065661315 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067801831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076732285 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060434011 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064402042 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064023707 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063981573 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073170348 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067150129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075041662 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066535128 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065636729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063125504 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066618574 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064184687 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060262955 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06320859 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068640921 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06420956 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063995356 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065035597 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0671593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065955091 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073914453 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064097774 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065548803 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065041084 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062537746 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06418843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064628436 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1989604 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067393233 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064839534 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064045239 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066625813 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067819425 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068576741 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065951546 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068397433 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076842787 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066477292 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069181698 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070367509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061229084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069414738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066263124 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066365545 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065729498 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069834641 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070085655 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068138422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075628352 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066782877 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067670153 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066820431 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065249288 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066421272 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066390631 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066560328 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066015971 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067838491 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074993518 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064494549 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069263619 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067017849 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06685476 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073628637 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067046492 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069203528 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073386053 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066978473 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068486796 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075011108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070523509 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069980312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067470199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068219272 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072578685 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066092796 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072652395 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066645397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06799508 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068288839 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063999188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066273206 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066276324 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065577634 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072868431 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06766024 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065903903 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065508074 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064110207 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067348314 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069410265 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074304489 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068615599 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070278611 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061745644 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063405108 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067860317 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065167396 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068340132 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068925398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071655634 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068931799 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066715132 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065400634 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075796098 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072070659 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070013291 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064708596 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06988114 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067306637 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068706365 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067690759 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066694367 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067537483 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070503354 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068068926 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065780615 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073361615 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070036243 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067499229 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06824935 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067810222 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066857634 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062465831 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067344922 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068638795 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071814549 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068764026 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066750679 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077097966 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064716477 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067312427 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069680055 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066292594 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071244699 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061669524 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067831506 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067181871 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066465637 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061191433 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064845813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06373134 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06740483 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06428133 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060538817 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074942432 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073913644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067656003 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063862667 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063530702 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060283252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060469541 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195064453 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068287618 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068424792 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077258375 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065877645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065248369 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061967729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066815484 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069755713 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070633508 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064463117 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061991042 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065806875 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070014081 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071941854 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065485525 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066412474 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070051005 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069615616 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065295967 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070155168 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063377633 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070154851 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079082128 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06727167 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066952069 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072759246 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074805218 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067403363 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062923488 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068196593 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069755574 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067284113 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068152606 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067428502 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08170407 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070271892 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065732585 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066397529 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069915635 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067349234 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074518286 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068315733 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067455666 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071139687 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06911072 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075819305 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068804217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074385301 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069208125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069856492 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065700453 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066635046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06497908 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065755737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068142902 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067031174 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072153456 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075141272 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065933516 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077155892 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075853716 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068515053 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06310858 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065725562 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066320985 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062280034 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067790854 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065591043 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064937181 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064684051 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065369874 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067381387 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0716314 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067084737 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066830722 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065999848 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060833165 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068737981 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068880242 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067525836 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063433811 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06623199 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067248857 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070334066 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069940659 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063986981 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068155776 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068091704 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067216817 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061882614 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073006891 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065698611 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068412698 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065900106 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066728211 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067317031 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070216086 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071826608 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067568886 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068969332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07019732 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068614733 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064337565 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063759118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071935543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064466424 seconds)
  done (took 42.536158618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099972604 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063171825 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062079538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062163354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073872775 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06298364 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062249149 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063255864 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063237923 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065521263 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062078514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062006439 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071266805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078287876 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074024743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067014859 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061937458 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063548369 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062083317 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062889702 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070814693 seconds)
  done (took 2.756679539 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073840305 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070064796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072244811 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07629507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067480457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070401183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072640094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070973684 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075983327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067300768 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076201935 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070615063 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067426752 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067381416 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067541542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071068405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07586977 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06743507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070578823 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081284017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070871429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072632388 seconds)
  done (took 2.895970828 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067079939 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065231917 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067392427 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061053252 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066175231 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061909552 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069263984 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063845866 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069468328 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065642098 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065197788 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065079744 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067561749 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061338931 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065895831 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06425664 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108083792 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069230118 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065850403 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066505019 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061735234 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067921678 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061745084 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061808289 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065320199 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06895879 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066610214 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063823312 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065303235 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064858668 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065806397 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063532565 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067435305 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066448214 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064859783 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064848661 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065684052 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065797858 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061420581 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064050534 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066205924 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062057628 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065964197 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067157501 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063834707 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063590464 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067158325 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065403759 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060676942 seconds)
  done (took 4.559999545 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079834103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108486965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068151627 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088289427 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079894855 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075598727 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069054367 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08947877 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063534775 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064327476 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081578294 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079724555 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06590939 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070256755 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07208679 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065621207 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066747408 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064702269 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069651252 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065537393 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0695518 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072595861 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080212396 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079007793 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069542926 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064551197 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064917791 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069684501 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07837851 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070042276 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070336972 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070774817 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080137562 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070792116 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065047866 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067507556 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081718424 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065864665 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067948352 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063398165 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067510747 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069833147 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07217181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081984207 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066148667 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070850334 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065796358 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062967594 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078930872 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068292982 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073631658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080232192 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069601595 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06594634 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070097915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080600849 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065705224 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064200897 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068567829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078087485 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063275465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069621055 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079708711 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067793694 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073407966 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079837431 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071036862 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069585337 seconds)
  done (took 6.366268454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075014373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072016673 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08120268 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080889869 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072332957 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07284495 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072462727 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072129539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072452722 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077203073 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07239151 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093176161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067562648 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075292651 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072510696 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072644725 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072441818 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072582507 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072374292 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072435525 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072784404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07998615 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072318383 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080240191 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098238425 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067702013 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072247563 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072935576 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080482003 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072860011 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079260229 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072392999 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072432631 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080387024 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079804499 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072171164 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065316361 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072152545 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07235321 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072033931 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067465131 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080391285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072030497 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067651905 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072213176 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07165437 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080623841 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079115687 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074733861 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076762533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071774012 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079993958 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071776433 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07181616 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080043908 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104824222 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080080456 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080272341 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07204814 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07984967 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079619037 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085887215 seconds)
  done (took 6.046262385 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083216856 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074789479 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077055371 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061823914 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064206036 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069905894 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064423176 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064082454 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074515571 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074846472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076854156 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069776618 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072720399 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076894549 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069937912 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072855993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069911688 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069497092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074208691 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070260677 seconds)
  done (took 2.779842554 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075109811 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083272114 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067068393 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07254956 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068736287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071867456 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068213159 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069207437 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067004603 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069341608 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076317889 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076165395 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067006296 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072329009 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075991413 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071526424 seconds)
  done (took 2.493266419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074499307 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072780279 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079625041 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067091947 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064077533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063186732 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065669672 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061566071 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062597323 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077906954 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066347183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068210525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066008801 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064834373 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063020989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068678877 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062313956 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063337076 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06567472 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078110561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076840135 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064878708 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066370865 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065906524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066092081 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070893454 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06549015 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063838073 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063586144 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066213274 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066702714 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069416986 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063087498 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064095949 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064731864 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063040328 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065472851 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066069344 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068366876 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065328593 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063997738 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065670004 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065541478 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066586883 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06186749 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066702457 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061983853 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067717934 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063720116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066049402 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065557567 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068004335 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066183126 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072021586 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068248361 seconds)
  done (took 5.013339265 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07928826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06951461 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061550809 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064123652 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068693736 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067316272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069555369 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067281948 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067600749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063932577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067570095 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068276898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067520782 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06966642 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067526218 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069160149 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061728358 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067924318 seconds)
  done (took 2.57179581 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071178612 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066819346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072372718 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066054794 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066370849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067937939 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061881865 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065152419 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06434779 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065849705 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065572964 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06821827 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064276818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067885528 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06555974 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065580019 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06798031 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064869242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065500915 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061796622 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067601178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064398314 seconds)
  done (took 2.803626611 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071457372 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091321797 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137413588 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084224422 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081236559 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078792253 seconds)
  done (took 1.892117355 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089821198 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078230073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066889768 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087839456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073635528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067402803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067253676 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067582563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075953015 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076144991 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067673898 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076247931 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076183818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075540738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073187253 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072943877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067508857 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067374719 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066032949 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083889099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067522247 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075625974 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067634798 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067029144 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067386707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075315071 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075705523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075922722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067209282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075764347 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073257434 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067177555 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076316681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076175705 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068739263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075919573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067327435 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084226765 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073503698 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075302636 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06857148 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073258698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07602791 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072454843 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076011562 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067615425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072228551 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067370453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067754897 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085892121 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073822127 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075616342 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073405834 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075956078 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076227436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086281934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076228334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075231157 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07314077 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078724862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075669818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073037215 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075316402 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07580776 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073231517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075318177 seconds)
  done (took 6.221575352 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081818794 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085666153 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06841706 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076861126 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075677025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067511742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067756463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067806011 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067864379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0675992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107687778 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067922263 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07584555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07599399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067861535 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067764521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067303113 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075560938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067182804 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085975082 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067357286 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075517618 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075775662 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076024498 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076029814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073535654 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067625547 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067857275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067240532 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067431561 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072962597 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067874231 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075472156 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066944116 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075896227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067758904 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067517524 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072460777 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067721862 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073208671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075447289 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083968491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067318736 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067636697 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075760842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06730847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067266706 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066970189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067446283 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066870167 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076091079 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075822946 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076407963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075538355 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067978776 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067885021 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067480811 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067734429 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067669741 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072970384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075788985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067594045 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086050272 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067531708 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06717553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075372699 seconds)
  done (took 6.134565666 seconds)
done (took 128.888125131 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184604951 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165483489 seconds)
  done (took 1.693846908 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069782327 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097479708 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077068809 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128950028 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066650754 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100499726 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099450239 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077870177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065987251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066130535 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066547971 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069038852 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131861108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066418301 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066191381 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068827841 seconds)
  done (took 2.676867666 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097114806 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157182371 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098692852 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064845467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097400144 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072683442 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064995798 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074941946 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070974902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064852858 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073107884 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070368719 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065041434 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070755751 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071206808 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072612005 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064663821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072607403 seconds)
  done (took 2.785536313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101435505 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091472924 seconds)
  done (took 1.551577809 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158035417 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105384304 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149628807 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352279116 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167268698 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229225921 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127165489 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127581488 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11711783 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123257554 seconds)
  done (took 3.012081128 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098657018 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151293037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255840811 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11492434 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072086459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09472158 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116139855 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077760539 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080818625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080584531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080484373 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076385536 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09833902 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073216544 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073046951 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075911201 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102628368 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072640933 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074484554 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076623134 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099408885 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065442114 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073409812 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072004422 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077683643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077309256 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065490447 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066026933 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076735746 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074505677 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077119449 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093428968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077034908 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10723785 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070267989 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10793403 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076355546 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073786461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073961996 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074095003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07887393 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078885207 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07215976 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07615502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065182289 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077037183 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065291411 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06544841 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078329789 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066689863 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077857033 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076810908 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107068514 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067145334 seconds)
  done (took 5.964862524 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101055016 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103968034 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071553416 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110985584 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099530938 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07141896 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10127495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093167406 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102773429 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069931975 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068104503 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070320548 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08268392 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083085714 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111995928 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104300191 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073318745 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070544099 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103950518 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102210918 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06826837 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095033247 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089430431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102087985 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067456024 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07083572 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068328146 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070253402 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077314909 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078840932 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069873757 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080872106 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084868624 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078515981 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067174841 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068243199 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068540677 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080051306 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079672694 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078702205 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078190523 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067745935 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068014316 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071270705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070140648 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06764162 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078663117 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080875852 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078712258 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069249979 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070066146 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067874929 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069545716 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08031329 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077622395 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080767603 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08016807 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06849912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068439497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071844948 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08112604 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079487861 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079222344 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069822883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07928124 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068179726 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080620007 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084650165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068201755 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0697646 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068530992 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069593037 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06987131 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078240607 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078317906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069976198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069617339 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068467974 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080241938 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079349287 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068489401 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076933514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067229849 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068347711 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069708916 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069833752 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078232724 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079761861 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070114001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06805589 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069310335 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068633353 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067148554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076771384 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07927782 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077887439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077353259 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068229292 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077478098 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077423248 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068611382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078338904 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067628808 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068976985 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1972859 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079493262 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07827251 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080437112 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070695113 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068516264 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078547065 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080907362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069417132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078606963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081176314 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080168798 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067964955 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081928205 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069057572 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080021465 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07010739 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080345231 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069386015 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080334151 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069684571 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068265199 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069118465 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080110429 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070479667 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068838046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07015063 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069881757 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079710189 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083178539 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071120183 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08133764 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078730237 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070794566 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080220575 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06979059 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080576616 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070338564 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070155956 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067893248 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081932734 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06869371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069291688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06997877 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081274068 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068762419 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079499753 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077957489 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068317075 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081609897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081211319 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078227148 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080031587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07001731 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069237524 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068142775 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069600418 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078806441 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08048042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07028928 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068209599 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078944375 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079935286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067809909 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077774372 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078668056 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078642746 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068622092 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069819513 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080590396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080912667 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078365878 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078466876 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078459474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068287338 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077845191 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078725916 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06798471 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085221126 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06797483 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082445673 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079669889 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077269578 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079462362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081012733 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080383521 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080474224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083127265 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067929677 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067735442 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079880707 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067893841 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069597973 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078119392 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069725494 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069234701 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081716733 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067367472 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078106773 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066579016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077370619 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065924752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068474258 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081360513 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067038599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198602746 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080380975 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069598543 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078082344 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081026341 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079036703 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068363709 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070229157 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081006725 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080044974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069337535 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068729 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070501058 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079111453 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078050569 seconds)
  done (took 18.663691661 seconds)
done (took 37.71647117 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209394046 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150334494 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179563908 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118260769 seconds)
  done (took 2.118710508 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121565273 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100487097 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095169522 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064583472 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101443335 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065158476 seconds)
  done (took 1.945021268 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311776471 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21077205 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181978411 seconds)
  done (took 2.100527134 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19885554 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187551532 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392998022 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251680199 seconds)
  done (took 2.532523681 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144241447 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089362722 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066762218 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083345362 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134728224 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161162372 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101218387 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126161129 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077669632 seconds)
  done (took 2.432348501 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147556949 seconds)
done (took 12.67561287 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.192178473 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101094184 seconds)
    (3/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.149808047 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217564099 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113764562 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152310114 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108632937 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182284954 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117692626 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071118738 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087379288 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111348452 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.156815367 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.204676551 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076913122 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.167623065 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078962894 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072898945 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073050204 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089480748 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.139042637 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072748995 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154033865 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108411864 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064838178 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071140103 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126198626 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102198848 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088327212 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099085771 seconds)
    (31/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.117113023 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129168501 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.165399381 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149185226 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085697626 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136077279 seconds)
    (37/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.153869659 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070999625 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071505494 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178300246 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095150325 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088063907 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.176428769 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09485764 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217097524 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095462472 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092284002 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101211947 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157080697 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068727596 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158013187 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160464847 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.133241085 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181579708 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.2015387 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094410967 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072441263 seconds)
    (58/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184093325 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135200939 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.14816113 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091083812 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144548316 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076780008 seconds)
    (64/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074034599 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072240975 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066233298 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.179014943 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156578054 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06715127 seconds)
    (70/309) benchmarking ("sort", Float64, false)...
    done (took 0.123722718 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087098446 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156555024 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071965629 seconds)
    (74/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062450284 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050915287 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073346576 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062073709 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.284014597 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195181409 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076571434 seconds)
    (81/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087340882 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100742836 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106732066 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107431637 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066602569 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052235663 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071665945 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.067005526 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064801655 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.164488245 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051052028 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.17648134 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092528037 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051890615 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075331645 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117200677 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.312132805 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.150235627 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065509062 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071190768 seconds)
    (101/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060464376 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.164322427 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051624103 seconds)
    (104/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101319165 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051191352 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071842491 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074869063 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090266927 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167616614 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052660102 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176049525 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085558738 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148583253 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075101793 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079294804 seconds)
    (116/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051776786 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091008281 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075877565 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071586908 seconds)
    (120/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072549563 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148514025 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138055614 seconds)
    (123/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075162605 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091293056 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108348872 seconds)
    (126/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098524802 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054273261 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079136271 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 0.12613789 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065078689 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.132371073 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072875967 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051976441 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078316342 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05112939 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071742933 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136438516 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072720713 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070047416 seconds)
    (140/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183023148 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071547748 seconds)
    (142/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066542003 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075014949 seconds)
    (144/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088553476 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051690469 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075639299 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148810813 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071713966 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051641198 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149978414 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072516836 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051067438 seconds)
    (153/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05183551 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05112489 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052625406 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064775246 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072214272 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072712279 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088792642 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167899122 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075692781 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065826753 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07338802 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050983464 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178813283 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064060955 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052836438 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066421898 seconds)
    (169/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069097589 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171498149 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065334891 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076516139 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074618787 seconds)
    (174/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072846478 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064140774 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051879238 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067172717 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140664582 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07256166 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050940046 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072977344 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069806018 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171085384 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07763344 seconds)
    (185/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074177917 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064937648 seconds)
    (187/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050709786 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090529497 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071639437 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.205532801 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067935891 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052548603 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05165669 seconds)
    (194/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062348528 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052581834 seconds)
    (196/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069824726 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072243829 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074196001 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185231933 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052447394 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150432512 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066194486 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064022995 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051591349 seconds)
    (205/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052520707 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091445852 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052936325 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065455636 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06151311 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069025176 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063835473 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050921516 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086776548 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051549118 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110555884 seconds)
    (216/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098828488 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067185491 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06697058 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076966543 seconds)
    (220/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052928722 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065260729 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086430372 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074534678 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07243595 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053183398 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079725288 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072312045 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051917725 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108012297 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065917463 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051276186 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06528565 seconds)
    (233/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053416894 seconds)
    (234/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118017676 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 0.13857137 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065024447 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070423516 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075221854 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081715348 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194304929 seconds)
    (241/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050932828 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066766496 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065823694 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071019485 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050991423 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063730548 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061978543 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067965149 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066029857 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065331594 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066352614 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134687731 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068653338 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150764326 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142211776 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087935365 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064799084 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052604636 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051032336 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071625501 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064404572 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066419811 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052995729 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050777409 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064229787 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053277218 seconds)
    (267/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050911563 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127126875 seconds)
    (269/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072557141 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052858623 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066504545 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061879718 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071310492 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065668621 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107522989 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110040152 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073044461 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051299478 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066280914 seconds)
    (280/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051518964 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150008491 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065072957 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070030422 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088454242 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087872641 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178503757 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072633003 seconds)
    (288/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06183302 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071603625 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063582252 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12452163 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066817652 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06500517 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067747247 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063852614 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064719518 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065000427 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072407988 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051227087 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061903127 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052087979 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070100243 seconds)
    (303/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070115007 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088525877 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066677873 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070042472 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050830445 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071232043 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078523341 seconds)
  done (took 30.40609143 seconds)
done (took 31.814156639 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08548176 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093745389 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076228424 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092995368 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081113536 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077051732 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073089725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078483967 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080146732 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081637666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078754458 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055219721 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074546605 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074184348 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07476178 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091404934 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07866923 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073008654 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072943036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064878413 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073084964 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066247871 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067429523 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054814113 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07780586 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071661975 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072465232 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073973388 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066253361 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066331453 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069410907 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073315617 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065412424 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07793341 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07204925 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073156326 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074561726 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076687612 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06752955 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066039969 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074190616 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066232514 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072878441 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073745303 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072055664 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071549617 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073420555 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07832285 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091356117 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06869969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074125762 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075958659 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076196256 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072395881 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069531802 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072836312 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071181096 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091374081 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073802154 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068286147 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074899633 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074096409 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071192407 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073452929 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076108669 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07536406 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075414259 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071137951 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074547077 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0714866 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065462818 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072810688 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06904781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065575826 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075522775 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076900372 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064497124 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071431346 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072612482 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071373409 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064820394 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067517283 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06708091 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071341902 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067374487 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054920356 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069145014 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071562238 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064921039 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073519292 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071613411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071976099 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066880636 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075591973 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065193148 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070814025 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06560994 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065389156 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066953943 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068985024 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06527495 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067865174 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074488966 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067011264 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071486869 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078981931 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06563808 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071695071 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064430647 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064879914 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079520663 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074762064 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065260986 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067799143 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064269266 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07217469 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06473822 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065199131 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06528368 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065182076 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070636653 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065062136 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06652564 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071232081 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076511386 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064226378 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067409849 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066501307 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06433797 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069441266 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064621888 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064616598 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201518709 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062575202 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06936104 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067194586 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073112608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068284302 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073787917 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067535252 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074466807 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070218583 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071790249 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071176219 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064707207 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058785366 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068644873 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068140367 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067437733 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066596101 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067400836 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065803087 seconds)
done (took 12.48702651 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067037837 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143543381 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100530775 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095328067 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086170661 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066892876 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076273043 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102139006 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06771178 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103812694 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08731322 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084999166 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113077196 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065352282 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066304928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069919114 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067432057 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081570032 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10100212 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086540828 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116244674 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06559009 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094794762 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090816449 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0873182 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101813731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06715158 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070500744 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069775461 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091291714 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086511685 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070401285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066907874 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100577345 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092716028 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084107139 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06654022 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082585756 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067337084 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066034661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067555767 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098316484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079798036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080549819 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069863729 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0690442 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067388298 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08382316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08954028 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078885139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087143567 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103141936 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068729173 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065868959 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06497465 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085456167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065858568 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068810477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066487184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068159888 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0663693 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069344776 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080882455 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082068216 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069985918 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080251168 seconds)
  done (took 6.820464198 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084118612 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089697566 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08327506 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083382761 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066402202 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066781307 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066510999 seconds)
  done (took 2.045185032 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067448115 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087815793 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089269225 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089006665 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085023948 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088198611 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07606223 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067094923 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081173198 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067879548 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087656392 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102124516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067631 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073345806 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0909638 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06685331 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090194671 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0667415 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069455869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090120098 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068440635 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082481416 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0700462 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067079179 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081325699 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067188029 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113587267 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07065841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067953121 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069783246 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064770422 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107395815 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080069541 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075518517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066343452 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080497084 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080327669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06480268 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082184113 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071737015 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080049293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066675372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067006458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06437626 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070282388 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076622545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06706146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06675543 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068949537 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085811239 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067259261 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079483 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069290899 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06907701 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06726958 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070063758 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076082376 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066880954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085680388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067347814 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082560845 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082210285 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080238171 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082538277 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068510708 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079808079 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080388416 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069579623 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068691584 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069730315 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082603032 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064722326 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06758564 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077046515 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068417542 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089020426 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088702757 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067767735 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075377941 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066591389 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066219607 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06640533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088765745 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068731337 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066033011 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070478687 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069546593 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064550891 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065084287 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069622844 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064648176 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067909635 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068916848 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069033158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068936449 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082649382 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068574315 seconds)
  done (took 8.762260749 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069273355 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068320879 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068760676 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068142246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067440424 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06792256 seconds)
  done (took 1.939753182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094261948 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069036942 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080005245 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072347236 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104137254 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086425892 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087209975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078729648 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083509641 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078591658 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086592241 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088625729 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092545563 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072975131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08749332 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072027512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087443447 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075733729 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078425981 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072715124 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086534971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07292707 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073265145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082172638 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075409985 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072342229 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067371949 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078513519 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078318564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078640188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07238892 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07589814 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070451938 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078686044 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086648208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070901888 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071829249 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077078763 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072451332 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075197404 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088125067 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073313207 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074609652 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076959509 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078503133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070269327 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076845359 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076361992 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085855033 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076772471 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077473117 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07133205 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07472474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076675539 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069957085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077963627 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07672368 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.0861757 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071991009 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069940515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068790331 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075134847 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077874552 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074731905 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078455605 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076794042 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070202528 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072581522 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072998187 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071492231 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07702524 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06879591 seconds)
  done (took 7.089797142 seconds)
done (took 28.15055505 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542466846 seconds)
  done (took 2.034267599 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600542055 seconds)
  done (took 2.118876525 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.58638073 seconds)
  done (took 8.101445103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394330096 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472735628 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.68779628 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130734085 seconds)
  done (took 3.242619393 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673794109 seconds)
  done (took 2.201195111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210987858 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195714519 seconds)
  done (took 1.943724425 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376097208 seconds)
  done (took 1.892700073 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103352588 seconds)
  done (took 2.617492749 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26332683 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162730284 seconds)
  done (took 1.947943995 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460672527 seconds)
  done (took 1.981695883 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.851905958 seconds)
  done (took 6.375094568 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204063389 seconds)
  done (took 1.776177876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241612135 seconds)
  done (took 1.758680511 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.703295093 seconds)
  done (took 3.225030043 seconds)
done (took 42.740044277 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0809923 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081078485 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081387761 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077845482 seconds)
  done (took 1.831902365 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077348441 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073589855 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07655237 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072910552 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07646373 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073476012 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074239532 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076952754 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07231599 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073293157 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072598203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072308583 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075014798 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074191926 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0711703 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075390959 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076059453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072433928 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075654332 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072904223 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071036585 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074862724 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074934037 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071971401 seconds)
  done (took 3.297508248 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077791155 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073428865 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075503434 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072836634 seconds)
  done (took 1.827113395 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077855868 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091826362 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089646751 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077645759 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09183322 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086629755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069280281 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068964799 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073524209 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077292326 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068374915 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095948249 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087843693 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076799268 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079107037 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066260578 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068400029 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087159293 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077482552 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077655354 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069926669 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077256093 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068624954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088288031 seconds)
  done (took 3.417569007 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07767587 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103886745 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077181543 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087086235 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090401209 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065233147 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074669182 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089564266 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123043192 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065599683 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069993243 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065721884 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072550309 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065338023 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076360207 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104694337 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108580188 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06870822 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095906961 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065461636 seconds)
  done (took 3.18309671 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073619336 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069947239 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065624899 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06930068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077471566 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073340061 seconds)
  done (took 1.960633866 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067885035 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067433398 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067666024 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067265028 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071801918 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067777928 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066330629 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067431854 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066956555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06711841 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066814589 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065728532 seconds)
  done (took 2.336297788 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422883613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069132992 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069266323 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066064731 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070629041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066478763 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080297662 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06807199 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090783737 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066637256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066712782 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068440334 seconds)
  done (took 2.734422289 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20632253 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076718521 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237661814 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137178086 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111883358 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116080265 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104426633 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11326263 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144418834 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10203698 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16808096 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167045522 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107667745 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138229042 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089544652 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098382141 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156098075 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162739236 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104168047 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16634579 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144449853 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125610096 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147031045 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101452777 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106413989 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122296041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071575643 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080643019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17158206 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131946531 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146729104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111469215 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094260844 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177470998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171656586 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143822814 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134764687 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083678746 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102747291 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132952566 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198908848 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087877564 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162815093 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246730669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081783079 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134583957 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121969732 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121831154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108190908 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090341962 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146935918 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185229766 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13975046 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087793502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112742873 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116136696 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117245319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103974698 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182127805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162022038 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128277068 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071598388 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100399124 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15352776 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133143787 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110746641 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128446352 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094702309 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134064066 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155633947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120679831 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144750675 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128686106 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089267111 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120600654 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140436175 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128848878 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170735424 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125732834 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073461571 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12606031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104374638 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081755079 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143313646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075914813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175444111 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098884601 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106685197 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113412875 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109259092 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109559223 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163155393 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143305692 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244125016 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066465798 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104727444 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1217503 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148862611 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088307446 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10965833 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117650368 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078555096 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140554178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07546136 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124604728 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075899938 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126138344 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132153305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075939097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122100151 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101211889 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100342533 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133703692 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161415278 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089681496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082244984 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168132815 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122553253 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105433754 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144622052 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157174498 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099045524 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103192067 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150297658 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180829587 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089851307 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163014193 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108091083 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083997651 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087837214 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125046634 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113172173 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122984236 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082495479 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119074033 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169358601 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075317624 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096096129 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13537917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079665289 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081081723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103304715 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100361895 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095202014 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10059153 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104455462 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137675595 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12319766 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104774086 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268705901 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099398806 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170966171 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090787546 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100597589 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103785543 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071467984 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138033871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157678697 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080505263 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164877399 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124817744 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10581724 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120088844 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083463464 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140851693 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07886428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070582907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145716453 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11170708 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110624676 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151242875 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104678395 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128176997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120173987 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136193991 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133149852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129186992 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105074204 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088386356 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11202669 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125893 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07331067 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091783031 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080633966 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104384898 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096099709 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083814907 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143251114 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125688889 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100629305 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112005981 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097206778 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1475807 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076885083 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129988479 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120004204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094102676 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152201652 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152194056 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133460946 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09946499 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144612804 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070359706 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073857877 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088707357 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120812594 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081894038 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082238346 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114544274 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143760503 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126566521 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133193587 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109118783 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117520257 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151361843 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068224611 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113804965 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143021576 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11745109 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102795367 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088190234 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097179231 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137950244 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102796759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169487679 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109283664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121048277 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14526553 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096393401 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077007797 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104348458 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128441713 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099120326 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137244503 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09624827 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085158334 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104985262 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072158416 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095134821 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120064884 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113500937 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128267218 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110620445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124960144 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074377288 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11052184 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114638636 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11494275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061909611 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114008991 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150275978 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089432393 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11332913 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144855667 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076248916 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119313769 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.428064619 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149175509 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087744098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112745091 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121553542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131281649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123369157 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143135899 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109974578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13893614 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111128104 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087835507 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089517683 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099103381 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107412014 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097242207 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110124024 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11691073 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095599272 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133945943 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105382647 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111198943 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120287044 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098237237 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092024579 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098232704 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176047133 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120033625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171665643 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099321903 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146263037 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164673511 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074996274 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079382982 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078792629 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140507963 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084421537 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131570585 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098494554 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105984438 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125009144 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142461311 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095532788 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069099712 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108619483 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134610487 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11262576 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098600939 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105447501 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163141062 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099910542 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081468477 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113684947 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104730964 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102503899 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172827033 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061545801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097696266 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075416437 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08017325 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126295157 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151257404 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079958517 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103430632 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11804325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109298554 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124871168 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099142011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097687621 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112584917 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145612962 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125882377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087565584 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109691214 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126816513 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151992862 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102557914 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093834864 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166145217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14817749 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156023614 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086350695 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111670983 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128517743 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105541157 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135556081 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081610996 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158840325 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080140374 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131729187 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101047695 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087643153 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125871511 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095908066 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085987625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142729908 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113963268 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080522342 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075784796 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113837769 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116268408 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103490749 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073535887 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134206378 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071990673 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128201496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163935386 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079263205 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102049375 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.354489432 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083484039 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111617203 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106071831 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092312228 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101114607 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175507797 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09033973 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153117817 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14349748 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11543611 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139617858 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101289366 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63762933 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07936151 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154330123 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117828208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174132205 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098982154 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119269203 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111031045 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125166241 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145570004 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106151166 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.1802418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13367215 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117332554 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080316997 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103632807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103504286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08965121 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105698644 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11485308 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116639561 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094227302 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117009 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124569309 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082575743 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095945538 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157544766 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117752345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145682973 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141475325 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085847675 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119351953 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143397367 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080724557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122326933 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153104049 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107014808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098299515 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080780882 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.253966541 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17237405 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074231237 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164211934 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120675571 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110754302 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114627335 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116070099 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132267973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109307427 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123585603 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094056856 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110859111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113450728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083042814 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077487032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105053677 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112876124 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097874041 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098827689 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09841327 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152372159 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072141485 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096658366 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103757973 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145305413 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17500249 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088644376 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083109213 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119434021 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11331372 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113993656 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121060591 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079599085 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082845633 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082125397 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077725681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108801877 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112929214 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1050905 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112101648 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163966476 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083037203 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225397773 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095436868 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104984025 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069977405 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079222385 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096635579 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097564825 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108524847 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101541716 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171736297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095206718 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090140118 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092576301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073724826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082969824 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128469478 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257687597 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120523491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099315368 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063124751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109357301 seconds)
  done (took 58.767365652 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109838887 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082418527 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097680584 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152141519 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122797166 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212345369 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15808873 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200406101 seconds)
  done (took 2.82589281 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068033813 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093671842 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100139591 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083777168 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067163125 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06972912 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225788728 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08139516 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066584855 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089150116 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079908253 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.0694255 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424480038 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066264652 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069772958 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063804741 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067483843 seconds)
  done (took 3.468109229 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367514858 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.365905388 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373089311 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073438774 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.84049236 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089662027 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.087899323 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097209011 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072368613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.282174273 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703461889 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095726017 seconds)
  done (took 14.140127226 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076877508 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07048115 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084629451 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085277106 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072661905 seconds)
  done (took 2.076630222 seconds)
done (took 103.448139301 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081039557 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392529853 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054286735 seconds)
  done (took 2.163929254 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08270502 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08543574 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085973645 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083106804 seconds)
  done (took 2.0332257 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074444152 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076820942 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084697543 seconds)
  done (took 1.926026353 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224764542 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140365405 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087359616 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082071792 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078110706 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078570984 seconds)
  done (took 1.937355734 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072576 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075081058 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073314316 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076612313 seconds)
  done (took 1.992350045 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076382305 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052712274 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054773505 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055850061 seconds)
  done (took 1.934357765 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087144378 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07918608 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078430504 seconds)
  done (took 1.939054415 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107191997 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085817397 seconds)
  done (took 1.889071577 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082118766 seconds)
  done (took 1.779480961 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099244066 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114027453 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128603875 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109744163 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136978129 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109205997 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086175712 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087550863 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077483985 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087793746 seconds)
  done (took 2.731648411 seconds)
done (took 22.546665585 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078517492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3686748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361072676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091713606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669100947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356926326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020649769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092804266 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113937387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068184236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084251707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97448858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320437469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961010515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32403677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650676445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06886682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068024287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068487682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005953291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067584219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068147225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068944546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649035623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.3718211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06843014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32469735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068373668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070027758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355743486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06863414 seconds)
  done (took 16.259111026 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071124916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118212782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073986224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084647412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070873726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069646677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071728364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069287766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120323982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068366904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084803147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067841439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072012623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068993605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087576551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068665164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06904795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069138729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068804036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068783544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08677052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068179629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068868354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069094166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06863407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080109875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068437138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068651702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068743679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0702237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070973368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069128099 seconds)
  done (took 4.111862018 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116078082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125704458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074684544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103035277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112689033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070335092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144359916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093294098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128200271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068211203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085355123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06866476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101705532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069315588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087568201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068787603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069987482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069580474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068871057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069115911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087768114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068322013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069040765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069505668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069047657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081536908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06888864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069143353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068664887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07078176 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071789775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069365304 seconds)
  done (took 4.371407002 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072419505 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075298264 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083007215 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083676323 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069611319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072541386 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073443094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07031942 seconds)
  done (took 2.318137292 seconds)
done (took 28.759768179 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080422617 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068631998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073062571 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081119066 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07308535 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079047315 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067037617 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075023001 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072278971 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073292955 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075815448 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067600379 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071292461 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067231211 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073995253 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068129156 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079950863 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07211841 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079544706 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080263889 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070246281 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073097691 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074764046 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079554378 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079534634 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079730067 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077467139 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073301072 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069572986 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070863152 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077125746 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084167514 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068501779 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079438925 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068234165 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067856192 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071564152 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068656738 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07987523 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076999637 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069866433 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076411081 seconds)
  done (took 4.809541627 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087964437 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091238928 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084898583 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061728634 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067203412 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065138379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088600503 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059772544 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060419468 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088141642 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056218112 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059714218 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062827619 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054119243 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059456921 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056868274 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061958885 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056233063 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059291508 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059723339 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058438883 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054380735 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060461596 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065132048 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056983208 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062305332 seconds)
  done (took 3.421651547 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074165511 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084271952 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089821738 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129306083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104962623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077982161 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078552347 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092847108 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085783367 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067624143 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07143529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094545157 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088625853 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074287761 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068136092 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085144581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082826486 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069718844 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074324982 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091486189 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084766286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084545871 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09365712 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081420168 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067396086 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070427279 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072483698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082160531 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07257807 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.0774792 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072182452 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071600855 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070062608 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079519223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071821326 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06969578 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09143377 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077401304 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078628808 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068645606 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071491366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068840372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089944264 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123317714 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067318609 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07432518 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075691074 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.088447416 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06793268 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086517152 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079277827 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067753234 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070709007 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067201033 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068200033 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081461968 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070094163 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070096633 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076977859 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0706571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08614332 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072061369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08314325 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067318885 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076038041 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066944592 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068789693 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066593924 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092970884 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069258763 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108996483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068873504 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068660808 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076575834 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075510562 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073548968 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068319636 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082781206 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078056079 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071107782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076338907 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071177447 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070898087 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090509363 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070067313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0692738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068622897 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07386243 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070561829 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069434229 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080840362 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068039046 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07088342 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08456754 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067621662 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069262448 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073779265 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072435155 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06755463 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079085458 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072625071 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068587904 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077154274 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067753456 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070795508 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077823998 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074240059 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067085094 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072152385 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074161846 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068663713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06944288 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070844959 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069788832 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076589331 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074648222 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071920017 seconds)
  done (took 10.696228585 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161216094 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15566191 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070324794 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145257914 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076718085 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079339841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147716368 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095200882 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068409005 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068917705 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069483253 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110315803 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108653948 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115503779 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079110998 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0682315 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084225875 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11397435 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149809444 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143561697 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08421354 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07725506 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07018242 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06964185 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071235972 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078791937 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085836737 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077419161 seconds)
  done (took 4.47773016 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081105682 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097206539 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074347445 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089448455 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09107297 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067948377 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070714642 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069791032 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080941776 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079021764 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067835321 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073645065 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075079045 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071824807 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069211139 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074998256 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075097976 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070581265 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071408052 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073392129 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07822253 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081436112 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072295636 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067434227 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074644862 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067319002 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064920378 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084962897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068383907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090637698 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066020515 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075466627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082317541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069377139 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067978554 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068108302 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067802909 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067811988 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069611859 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06682238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066982622 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058125126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067156537 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080431107 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074023192 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05682844 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072953938 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072969575 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073111744 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065902425 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07095591 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070467992 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071426383 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075068027 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072678075 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072959624 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068992126 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06595802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075446054 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067861731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065121306 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066410631 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072465097 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066552979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075437664 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072324441 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066283849 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067557922 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069562243 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073584503 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067454049 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070862867 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065254007 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069862258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072462328 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069495599 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069070515 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066094207 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067426826 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06814591 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055884601 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067621 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054012165 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07078322 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066360214 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066472894 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067684929 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072392568 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080470777 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069206022 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073299869 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069055891 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06704071 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071365123 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060948114 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070441597 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083108912 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083450908 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067692143 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065674834 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082377128 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072256902 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066736976 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056494331 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075385214 seconds)
  done (took 9.249025415 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094775369 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087890081 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070765561 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083915022 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091384266 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086657957 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075016537 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077475109 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069991878 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082641845 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074396215 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076682077 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068712978 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077271669 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093889917 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077370311 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070456514 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077461545 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072601276 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101285101 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082970861 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082670968 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075417248 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068859163 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076473924 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081600754 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090169122 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080132352 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079040795 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075931971 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080664601 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08975102 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074255559 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072782412 seconds)
  done (took 4.489619365 seconds)
done (took 38.853766959 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.797583657 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.978896125 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.796457355 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.142837823 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.875656591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.963626862 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.938339785 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.783465751 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.904583629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.819193466 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027387112 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.814053295 seconds)
done (took 65.578037495 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.889723062 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921555105 seconds)
    (2/2) benchmarking "String"...
    done (took 2.053703009 seconds)
  done (took 5.694075828 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.086056516 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.482881352 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.027866016 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.779333507 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.784708029 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.091670495 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.578476487 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.300339635 seconds)
  done (took 30.766223963 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.007231558 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.985172007 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469190325 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.507601042 seconds)
  done (took 15.737690348 seconds)
done (took 63.977430431 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.805226569 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.830949428 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.799698729 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.76477073 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.837711177 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.787735117 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.197082205 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.834893144 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.778968036 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.768530146 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.780388277 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.210229683 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.785313461 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.197625283 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.777471964 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.785921245 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.801215099 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.344775189 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.928973826 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.785126427 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.795662712 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.806097057 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.77398605 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.777841734 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.785008585 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.769554049 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195678558 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.778233134 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.37825342 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.770484687 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.803404923 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.286371971 seconds)
  done (took 204.443807004 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.769736372 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.686013053 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.745626345 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.785771731 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.145782587 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.963992527 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.907625206 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.217456038 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.771057652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.784134547 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.981736102 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.765284955 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.996963978 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.755575165 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.775052706 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.768935253 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.943367264 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.006312698 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.769976936 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.045214915 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.767490783 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.857141715 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.81712546 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.947869464 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.796632213 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.847258215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.95686194 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.801543553 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.961945794 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.915104399 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.786088491 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.786277187 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.993668071 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.640984498 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.789257543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.778047071 seconds)
  done (took 169.740793472 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.906854041 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.767755902 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.767359456 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768080137 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.779627981 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.769391195 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88989082 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890158751 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.225955254 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.256503212 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.818628542 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.598726542 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.764119491 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834782978 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.778477031 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.76766472 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.780493098 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.793934704 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764829958 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766084327 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893093506 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.776172485 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.783258209 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771523479 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766323715 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774612729 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.134074588 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764875423 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770599995 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.026990561 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.763562845 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.768532185 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.661166475 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.06967987 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.768090669 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.764267373 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849195621 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.763702166 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769856779 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.763183163 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.990407746 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.763711855 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.764054454 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.765515941 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940594273 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.764755464 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.88912028 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762340864 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267049214 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.763892366 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764687258 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.600573973 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.44018355 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.765113419 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.763886602 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767926376 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.764410531 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765026134 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.770203027 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.468435207 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.836690752 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.76642708 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.769608027 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772050762 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.765750047 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.931828761 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76602649 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.25923723 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.823701873 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.984491127 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887065824 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.76765554 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832974286 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859382926 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.764251864 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.766552965 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.764891156 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.764565578 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.847425135 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.766794176 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.891413445 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.772172084 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.767559913 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.815218989 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.833678778 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.767332279 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661756288 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.765555297 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.764259306 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.079142468 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83120936 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.765913996 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.765912769 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.766796895 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.896387938 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.886588641 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550123281 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.767162478 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.551796819 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.762956912 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.757926746 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.930392548 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756892025 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942937619 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756991183 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837456477 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759714743 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755684916 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.757801757 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.755325478 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.787994036 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.75634312 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.81332048 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.757496979 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.127902331 seconds)
  done (took 402.061550251 seconds)
done (took 779.931188087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.437753608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.397973384 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.513220922 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.422050253 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.400231122 seconds)
  done (took 13.869626196 seconds)
done (took 15.568993865 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842699639 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.845474109 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783610145 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.848340461 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776486265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.846098187 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82651904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.783351484 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815022096 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.784540001 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817605381 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782329368 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768420638 seconds)
  done (took 25.220069707 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987043052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996466532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829195567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994945979 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802181104 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.983185254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.920656636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.914286184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910312685 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.776041799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774948141 seconds)
  done (took 22.588074392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.996961236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.006539789 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.831692058 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994654605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807136074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.998971873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922822591 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.914743125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.911646634 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775838829 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771286678 seconds)
  done (took 22.636165376 seconds)
done (took 72.141925413 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.768996698 seconds)
  done (took 3.471266424 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790442854 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.924908427 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.770692164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.771111128 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.76969769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.769453452 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.770338824 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.771278954 seconds)
  done (took 16.041005639 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767418082 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768115207 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763425017 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.765566902 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.769543941 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766107539 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.766770019 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765924236 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768833252 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.767225573 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.763713998 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767332437 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763237564 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764115866 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765566561 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.766801605 seconds)
  done (took 29.962625555 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.767628203 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764258548 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.764457936 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.766064772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.768666416 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.766656991 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.766981443 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.765908588 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.767358186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.771396719 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.76698839 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.767974376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.766957945 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766083873 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767152106 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.769852439 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.766848132 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.766646591 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.771973603 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.765999577 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767388834 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.7687087 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767316589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.766241933 seconds)
  done (took 44.121334303 seconds)
done (took 95.301150795 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.562623086 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.25287726 seconds)
  done (took 8.517612331 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.770916153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.774862599 seconds)
  done (took 5.28577101 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.768754379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.768995903 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768411016 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.767701458 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.769994487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768892008 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.768229806 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767043246 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.768177506 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.76881227 seconds)
  done (took 19.38731138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.774322992 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.771234731 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766776053 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.767920382 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.771300099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.766627783 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768295379 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770229919 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.770697007 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.769599903 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.774892831 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767252347 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.770960543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.769244315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770243871 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.768481707 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.770699273 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.768154432 seconds)
  done (took 33.56525482 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.76996157 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.7712184 seconds)
  done (took 5.246010644 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765552259 seconds)
    (2/7) benchmarking "second"...
    done (took 1.768529754 seconds)
    (3/7) benchmarking "month"...
    done (took 1.76683084 seconds)
    (4/7) benchmarking "year"...
    done (took 1.767518078 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.767203824 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.770660123 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.769013529 seconds)
  done (took 14.081945055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.772911366 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.935750695 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.032103419 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.440804693 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.771722589 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.774502862 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.720552661 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.780597427 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.7784509 seconds)
  done (took 19.713367734 seconds)
done (took 107.500383718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.589973967 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.772620008 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.128908273 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.833802698 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.786675259 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.0692553 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.802542915 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.999273864 seconds)
done (took 42.69129503 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.870780154 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.32614322 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.352537339 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.344908861 seconds)
  done (took 12.736976311 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.769021972 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.321192689 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.825999436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.455882194 seconds)
  done (took 20.340034964 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.15407091 seconds)
    (2/2) benchmarking "read"...
    done (took 2.143804771 seconds)
  done (took 6.022510933 seconds)
done (took 47.686399978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787344296 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.78552374 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.789967458 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.786094616 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.78525445 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.787464565 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.785099819 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.785907134 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.786550866 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.785283925 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.785782759 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.786864069 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788600545 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786479522 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783991493 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.784771206 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787210665 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.785099933 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785681678 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.784203384 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785914071 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787737903 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.783285368 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.784849658 seconds)
  done (took 44.584501346 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.788114726 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.786924455 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.788907554 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.787431705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.785703092 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.788331319 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.788441777 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.785317655 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.786904069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.788531795 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787520559 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.786715536 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.789653066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.786965254 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787063394 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.785727858 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.791404965 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786149695 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788364016 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.78676231 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.787957943 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786183481 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.788403235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789120549 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.787408486 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78874258 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.789458877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.789454531 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789143615 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.788799437 seconds)
  done (took 55.35942187 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.793968937 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.798526929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.796169715 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.790293624 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.78794397 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.790625061 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.789029374 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.791733739 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790413975 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.789341127 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.789545935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.791277913 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.792100107 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.79336468 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.790518434 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.791430061 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.790448094 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.78913805 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.791634084 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.789515775 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.789787311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.791638807 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.791330775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.790404483 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.792035423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.791161425 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.789423671 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.790745666 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.789267333 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.791519086 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.795006914 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.791859765 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.791185705 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791028194 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.790957886 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.793524258 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.795147767 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8002569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.790748353 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.790890236 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.792517546 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.793272659 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.791495168 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.793044129 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.792318852 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.791694107 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796232605 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.79093923 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792029403 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.790846604 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.792121309 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.791227493 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.794758252 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.791755586 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.793140805 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.790695722 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793285723 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.791836629 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794107499 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.79345156 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.79359202 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.793022493 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.792973948 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.791998554 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793183545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.793231695 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.791767543 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.793373252 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.792586802 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.797079097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.791213917 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.793406536 seconds)
  done (took 130.757994187 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.79195053 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790418013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.788965916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.790842992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79048241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793140001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.789506253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794949474 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791214046 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.79418346 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793330379 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791139722 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795110902 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793464407 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793512833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.79098542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.794052402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791001185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.796884837 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.794061174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795311415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.792608887 seconds)
  done (took 41.164753875 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794020239 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797630084 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.79298369 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796073359 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792827974 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794350018 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.797606215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793721313 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794125815 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792263544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792439443 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794432203 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793804236 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792599915 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792125808 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791872827 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794777593 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795251659 seconds)
  done (took 34.021051808 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.793136826 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.794024569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.795771743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792512853 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.795682972 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796210585 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792514189 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795774382 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.792382601 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.79340765 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.797618559 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796420506 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.796263553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793105012 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79618215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.796381062 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.794822642 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793321052 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796655348 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794517905 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793128557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796986152 seconds)
  done (took 41.215036329 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796788064 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796361303 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793090574 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795169292 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.794647454 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797223874 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797688703 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.795254418 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.795889144 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.798246355 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795114108 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797863075 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.795748857 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795587432 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.795311691 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793104488 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797848273 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793902637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797490743 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794541906 seconds)
  done (took 37.648293649 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798661548 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800513599 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79961151 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799238633 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798055986 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.798605836 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800050694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799472902 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800285256 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800689211 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804172406 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79889934 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800822154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798114546 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800273042 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800603104 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801475124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800414447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800630261 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801290862 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799814065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799911177 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799777256 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799624071 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799707705 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801925211 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801361175 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802121931 seconds)
  done (took 52.138641015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79867113 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798998137 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.795329132 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.80083634 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.795164262 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.796271133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.797072822 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.796839656 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79807839 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800410061 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.799146576 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.798931055 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798727559 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.799658535 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798777565 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801684102 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800189396 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.797914199 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797524297 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796637922 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.800253285 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79892833 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801566569 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796558416 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797510988 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.799410052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803566942 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797512557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800886084 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.797559107 seconds)
  done (took 55.691691135 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.819486866 seconds)
    (2/2) benchmarking "in"...
    done (took 1.817839259 seconds)
  done (took 5.369986468 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.797761928 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801054078 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.801795328 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79938213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.797380056 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80049249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79995656 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7971527 seconds)
  done (took 16.127861363 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.800030313 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.801080583 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.800618875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.800784522 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.802052611 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.802627398 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809533746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.800392426 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.803558343 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.803387178 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.807359668 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.810794996 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.805869597 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802006406 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.800343089 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804109501 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.802477745 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.802985535 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.803777218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.801502008 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801974685 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804608598 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805162077 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.799961546 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.803664356 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.814924641 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.808312856 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.803026126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802442008 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.808695607 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.803113774 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.799428699 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.803019713 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.805820836 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.803636562 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.80390592 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813414723 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803990474 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.81398858 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805720892 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802260904 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.799574835 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.805050062 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.80915703 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806070971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.804657522 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.804756901 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.801243046 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.804306578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.806866614 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.810065415 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803869509 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.800587863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810974526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.804812396 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812815947 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.804481883 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.807711631 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.811811137 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.816088599 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.820098881 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.812168305 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805142021 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.80655474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8139967 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.826461489 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813913375 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.800514786 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.800764378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.80303114 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.812092438 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82323726 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.814163324 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.804784625 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806987059 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.803740957 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805536103 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803486652 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814605392 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.807804074 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.806526213 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807016214 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814601294 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823645883 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.805231842 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.806071655 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.807729411 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.806622254 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.807358448 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816163816 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.807528075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.805204341 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.803744546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.803923554 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.810274193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.805909782 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.804941753 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807432344 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.802563576 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.80591165 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805969961 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808370751 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.814789872 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808297536 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807285979 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.815103807 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.806958205 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80654022 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.815732175 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.801567159 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808076383 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.808377031 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.815059096 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.80436449 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810290266 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.816762105 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.810844325 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.807953249 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808332061 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.807574926 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817987674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.835321235 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.807558996 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.807320392 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.813700806 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.818791257 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809102157 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.810109123 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.806796123 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.802655946 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.80445662 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.807318703 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.809219815 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.810460949 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.8092779 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81159591 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.806090333 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.807699372 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.811909509 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.809123186 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811810375 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.808617211 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.809833737 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811905697 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811025588 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.809409981 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.815839809 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.809611821 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.809805679 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.810980202 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.80496885 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808248142 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.812059971 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81015967 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.808349269 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809183748 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.806859111 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.809697116 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807299422 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.808080394 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808516182 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.807656484 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811542401 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.810177478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.813052578 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.808647566 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.803738484 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.807714225 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.808099165 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.808052699 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.80869201 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.80547681 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.812028232 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.817125791 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.810260309 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.810059978 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.813074053 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808332642 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808351142 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810929049 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.812997434 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.818232243 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.81098908 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.818969873 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.811389236 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811706962 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.809546537 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.810770566 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.808557954 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8117949 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.81329046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.817234206 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825676488 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823770493 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.810766569 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.812248711 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.813283908 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.812725415 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.816816075 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.812541294 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.812116205 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813172488 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809364434 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812828335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817055894 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.812975956 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.812608448 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.808034688 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.811387227 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.80962387 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811356094 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.812546243 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814928963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.807637679 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809705144 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812452589 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.812677077 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.808354574 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.810439032 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.810852268 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.81204772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.812817252 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.822105523 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.808317037 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813728859 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812431756 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.81395511 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.810209316 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.812111904 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814569371 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.813256223 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819420596 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.814815603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.814852606 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820078156 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.813146283 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.813469651 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.815898667 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.811628387 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.810601806 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.817635477 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.819165352 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.814173438 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.811520787 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.814384551 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814164756 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813282785 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.820444598 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.810160097 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.811278612 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.814564519 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.817665381 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.810047359 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.815974307 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.81538588 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.816381509 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818161354 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.812358556 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.813348587 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817980978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.814469712 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.81569416 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.815245171 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813651423 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.823288414 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.822844572 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81468198 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.818027471 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.815273915 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.818425748 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.820707139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.81402267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.815080593 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831960682 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.823929428 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824790544 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.818858111 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.813288114 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822787029 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.812144634 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.821038198 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817987276 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817576011 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.815629341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.815638983 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.813148035 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812904204 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.816666996 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81662498 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.815100167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.817674857 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.816440487 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.815643686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.815725247 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.816548516 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.815637813 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.814365824 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.814279539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.820354578 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.817007783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.814761022 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.816389122 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826087666 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81640619 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.818975699 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.815553841 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.816395519 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.816555934 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.818423963 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820209919 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.820584801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.822627909 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.81621886 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.829192103 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.81947478 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827797375 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.817014828 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.820585275 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.826576395 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.814034301 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.815383515 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.817408903 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.817555277 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825779785 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.817780876 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817187876 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820256233 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817468786 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.817585731 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.817822112 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.818648596 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817204005 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.819482374 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.82702274 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.818973685 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.822448409 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824571533 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.820102482 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.818407342 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.818804188 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.816296558 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.821571037 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.818999313 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.819471944 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.817210931 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81954904 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.818300695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818872117 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.817312486 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.816175611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81683501 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825727506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.819238858 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.8230886 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.817118834 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.830146882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818604869 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828292607 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.818551472 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.82050104 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.818110707 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.817194414 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.817354649 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.817941836 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.820175321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.818073876 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.818419053 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.821117141 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.820375605 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.820695985 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.819695388 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.821763457 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.819481771 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829369948 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840787112 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.821029119 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823181329 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.815428434 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.821850884 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.826846446 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.822255959 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.817279128 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.822917623 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830106252 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82595182 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.82252994 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.82150389 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817623146 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817778427 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.817504147 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.821118244 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.821511209 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.820636018 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.822592879 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.818042641 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824820683 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.81796785 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822866118 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824906037 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.818232558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.832079369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.82178326 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.821611497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817865389 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.814050714 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.820783297 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.820426928 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.820471 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.817379151 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818987168 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.819858562 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828156535 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.824052256 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.825587439 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.818828146 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.818437108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.821679514 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.822430182 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819095519 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.821740094 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819693305 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.821857098 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.822306377 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.824142748 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.81841028 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.818463741 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.823361351 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819846701 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825539755 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.827053971 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822469948 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.821556154 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.817982695 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821756201 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.818711467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82298319 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.833527217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825466584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.828512605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.830441728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.824986783 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.822338749 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825329643 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.832262724 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.817119889 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.823331117 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.826064484 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.823378223 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.82360316 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.828295462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822474361 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.832750866 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.825298422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.820879171 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833241387 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.82391091 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821236688 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.823705402 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.824814385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.823097967 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.820357403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.822219983 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.823195389 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833257615 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.826557693 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824824353 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826775888 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.820505593 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.825675938 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827734116 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820953395 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.822691135 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.821614539 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.825097188 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824306848 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.824865414 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.822225618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.825253451 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.823518163 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.825963887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.828368675 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.818114759 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826559676 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.822522281 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.826711712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826394757 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823821426 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.820150137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.824409415 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.827386521 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.822572719 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.823267239 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.824642634 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.822202822 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.827491451 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821706283 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823589598 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830106095 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.835805042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.833079572 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.82160235 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.823338972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.828740515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.828979016 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829219345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.827700366 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826853946 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.829565657 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.825857113 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829251166 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.826441238 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.824829894 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.84214725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.824375637 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827780858 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.827386948 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833707959 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.826283325 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.825202188 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.826938729 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.826843196 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.828918078 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.836531541 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.828802768 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834719327 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825589374 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.827002949 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.8290784 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.83193334 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.836868563 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.831831741 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827660916 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.826539576 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.831610137 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.846681598 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826203342 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832089937 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860253191 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.826971035 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.830594247 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.827713761 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828215815 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.829278034 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.831055194 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.828371207 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.827248935 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828657153 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.823965037 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.829579546 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834627514 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.828682035 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.827032966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.827571822 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.82421939 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.829706402 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.825546147 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.830677458 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.827951054 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829603372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.83043315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.83098495 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.828758897 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842422382 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.841106477 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.829496463 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.829762758 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.82711279 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.833974118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.833924827 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83919958 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.836660226 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.831456817 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.831708171 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.830295449 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826280193 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.82544907 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.831533401 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.82879644 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829431105 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.823524535 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8422072 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.83787525 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836264408 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.832633934 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83299053 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.829838289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827988637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828184475 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828695707 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834912829 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.832074323 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832731428 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.826759871 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822934227 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.829090801 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.837522732 seconds)
  done (took 1085.138369832 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825471985 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823940438 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823291806 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820849832 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824817736 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82351948 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825658921 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824428932 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.82413993 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82564139 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828857854 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823922432 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830687033 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823241697 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826107309 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.822520519 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823457448 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824353747 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.822040799 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827553242 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82587114 seconds)
  done (took 40.077163073 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.823956914 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.82769198 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826760369 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831302555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826145216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828918483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.826302836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827518963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828931249 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826895835 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.827790594 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830968406 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.82473381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.823032153 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827409336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82767711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829125932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825285751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.826835049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823969122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829048963 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.825185178 seconds)
  done (took 41.95462694 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.829875255 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.829457532 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.825021587 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.828726177 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.828090238 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.824304372 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.832168797 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.828071802 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.82900617 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.828333665 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.82810068 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.830241126 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.834801123 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.833887279 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.832780119 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.828114814 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.977118415 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.831035798 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.833266785 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.832693595 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.827286221 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.837103638 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.826898597 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.826640409 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82643854 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.829150488 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.828381468 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.827495414 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.831924562 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.831956965 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.836539257 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.826321141 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.830786148 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.828538066 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.830606638 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.830045196 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.834163034 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.837299878 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.826117099 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.831162245 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.839665319 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.854398043 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.833095989 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.839536013 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.830004359 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.834935627 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.834361039 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.841547682 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.825657452 seconds)
  done (took 91.641717148 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834218202 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.830216442 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.828216395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.830842592 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.831902153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.830328493 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831010903 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.829245572 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.829116652 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82710752 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.831584814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.831158798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828578643 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.829532136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.831971751 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828105898 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828593848 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833504217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.828905786 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829291196 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.827467905 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.834373589 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.832511577 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.829876108 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835709161 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829650455 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.830111459 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.830503085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.830936734 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.826949357 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.835907443 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833392512 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.831450926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.832367443 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.826127257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.831650678 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.832769871 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.831888923 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834288336 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.831631676 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.833877043 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834077048 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.832349782 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.832644791 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.829578035 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.83183102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830874329 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.828767021 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.830026203 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.834089083 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.833310495 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.8325743 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833548096 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.834593049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834227498 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.835323879 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.829662558 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.829492719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.834663014 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.831208587 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.829799477 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.832922062 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.829791251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.833196204 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.831047509 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.829980756 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831876233 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833749716 seconds)
  done (took 126.297038444 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830671872 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.835118688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833136477 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835328996 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832768465 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835592564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833572902 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.834656739 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833411773 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832402387 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83203487 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.833401715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.834911314 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.834073951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.833041445 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831763084 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835574249 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837730673 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835146701 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834804769 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.834492101 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.832270965 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.833179938 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.833617058 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836990388 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83355265 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834343131 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.836095943 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83569008 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835179697 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835182849 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.837884209 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835978755 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.834789122 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.836437422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.837058021 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837392818 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840430949 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.833859223 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.834160386 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835997627 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836502 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840907276 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.836680998 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835285019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836047374 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.835590276 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.836537456 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836263956 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834943462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.835176418 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833932134 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835984213 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83601651 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835649505 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.835605116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835985804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838662908 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834703104 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834979407 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836665155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.834722304 seconds)
  done (took 115.546366628 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834961935 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837266852 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.832101755 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.833350054 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.834965257 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835467219 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.835755039 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.834028788 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835927908 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.835899436 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834554506 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834480338 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83315356 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836390829 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832356377 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834364951 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833756453 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.836159932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834936179 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833593048 seconds)
  done (took 38.461682916 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.835081382 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840083629 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.834902833 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835788442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.837751179 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835104499 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.838665351 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834956977 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834494396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83527879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837900088 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836185015 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832915162 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834963493 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.837787595 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835681263 seconds)
  done (took 31.144073273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.835213389 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.837490324 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839243781 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.837773315 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.837880272 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.834799867 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.838259403 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83378412 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.835494361 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.837219676 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.837503263 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.838506821 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.836744562 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.840113456 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.834903485 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.837309403 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.835163863 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.8346619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.838764665 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.840471715 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834925952 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.836258954 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.836366818 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.837320364 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.836561852 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.836597149 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.835078594 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.837125603 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.837735409 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.84149896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.835462903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.837983762 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.83509451 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.836408212 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.842503216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.832722027 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.840359008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.837604488 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.83957702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.839048635 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.838781331 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.837812792 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.840004822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.839151423 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.836279133 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.840242996 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.835911855 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.837886461 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.83840332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.837982532 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.84088136 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.839040977 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837402121 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.839436535 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.838323459 seconds)
  done (took 102.83733568 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838762581 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840130494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836244822 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.838903372 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838832384 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.839380896 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.839733337 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836334692 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837261477 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839798839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840335275 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841041472 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836024201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.840137009 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841046129 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841464816 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.839744021 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839042098 seconds)
  done (took 34.87547169 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.841091896 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.839022425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.840210766 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838270509 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.839252173 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.841095813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839095225 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.841107171 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841008204 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.837456066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837402963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.843793578 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842961736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.840912813 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839537722 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83951386 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.840525103 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84096317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.839303888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842242901 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840966746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841166628 seconds)
  done (took 42.260352293 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.84246913 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.842656659 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.858090961 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.887073852 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.877838805 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.842666523 seconds)
  done (took 12.923486451 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840775087 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841598146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84029609 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845355415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842406768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840555078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839758766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839960683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842704978 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841138373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837585825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842725199 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841438108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837914528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842754623 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841801061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838558491 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839543979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842006015 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84404401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839854153 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843429696 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841099293 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841388635 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84021758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84099697 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843315492 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843059022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838595651 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843936074 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842796667 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838609282 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843196875 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838991276 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843980437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842644486 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84162798 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844719732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842803518 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842505555 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844560345 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844034839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842140941 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840863673 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841633258 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840262617 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842209575 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841387356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842065734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844384478 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844096364 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843205815 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844109036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84503024 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844279951 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84423605 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844357811 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843907465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844267842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842040107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842685109 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84535094 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841832049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844163726 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843558218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841883109 seconds)
  done (took 123.35711211 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84224482 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842461452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842426837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843731852 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842121598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842400059 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841226521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844716885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841970063 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841970681 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845052243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843697422 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843813308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841818427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84106851 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842176894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84122626 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842678678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842593927 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845170752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842043663 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84294051 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84308819 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845678183 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843223925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845277649 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842348443 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842729781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842373899 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842088461 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843560939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842373697 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842643346 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842363984 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841633293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844476099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844834104 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842669535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843702909 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847514301 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841851024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844982698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843041611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844627325 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843456413 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844276456 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843668184 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845608138 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844988877 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846251403 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846569324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848185195 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845908474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845499181 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844831681 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844160134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844807664 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844646084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844891841 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846281593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844371378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845245764 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847462413 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844493624 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844216575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845406138 seconds)
  done (took 123.46956168 seconds)
done (took 2525.783345754 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.930039867 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.944472145 seconds)
  done (took 15.654180091 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.009597815 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.965362725 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845612898 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.872005516 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.84664582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.864466646 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.85934325 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.84506775 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.848618648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.848998874 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.845708745 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.033692856 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.853776005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.845564249 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.846602613 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.939418987 seconds)
  done (took 51.953544731 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.852533699 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.851919523 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.861162839 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.851456104 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.850972527 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861730221 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.884094643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.852930294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.883918511 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.861449829 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.922492957 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.861470657 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.849722288 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.898746809 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861610853 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.864519602 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.939799475 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.923418787 seconds)
  done (took 35.512764539 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.92656862 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.857343236 seconds)
  done (took 10.569830944 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871917551 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.87582532 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.855441838 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.857441553 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.865119863 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.872974062 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.843425716 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84872469 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.86377447 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.845805651 seconds)
  done (took 70.381797181 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.856249047 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.849979631 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.851113712 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.849454771 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.841962864 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.846481356 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.84973725 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.848732079 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.528282328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.887360592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.856395806 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.857007037 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.851496704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.850615762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.847993381 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.871918945 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.987813303 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.84753621 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.848694542 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.856106342 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.853129459 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902701455 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.863646219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.851459126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880732309 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531591003 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.860159366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.857723691 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.968572504 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.849636164 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.851418441 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.852741654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.85448464 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238758834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.169265836 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.850532097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.861224024 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.860136893 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.849643933 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.980113295 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.851783532 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.856147238 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.844899522 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.155410575 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.932053444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893687844 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.228376756 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.855382251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.854198604 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.882569624 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.854257155 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.855734689 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.866375113 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.364185804 seconds)
  done (took 131.752970539 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.846884561 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.142936826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000970091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847338625 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118940334 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056145748 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790575671 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89811527 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848983292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052495424 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06470397 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955371575 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848161868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.847455067 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847862937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846777914 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.009312366 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.916399658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.849230233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.847385456 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876605146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057106027 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.971645708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849571037 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.869792889 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059547079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970944041 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955157808 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.332950979 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.848027765 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914703718 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849328082 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.848133133 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846378553 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.005120584 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948553693 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937925004 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.848629792 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846459949 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.85013738 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.510164561 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047512112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.948089845 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992314903 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002759398 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053373847 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.495798729 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.847094385 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.491711045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011740342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061858015 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057488851 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.973772201 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.852524862 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.000575783 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8478517 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847699907 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086541182 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994668469 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953095369 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851048806 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850307815 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84871296 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096580603 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.851783608 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945851321 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850878095 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.851219225 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.948752717 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954463513 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.990651571 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063994047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883429657 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.582745193 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.06842939 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064769505 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.917806325 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087518042 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851602603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849617424 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937390978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.601057261 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050810617 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099361464 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072562473 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885293978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.448471225 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.850983043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.043105302 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036577818 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044391836 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.998977326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003863812 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.177796088 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.849244673 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.849107746 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.079834258 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989633114 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.854048825 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213295022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085956498 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.478814492 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873762252 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147912807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985839392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.167629089 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.477103841 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.851619536 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020694881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893650245 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.853461085 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851571078 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.043106831 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.658395188 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850999444 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.58386221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.916437116 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854022027 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05721575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854745941 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060959797 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854873289 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090369778 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.366518758 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888135725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022841918 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.99935278 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.642150086 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101665506 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097319133 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971616685 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123837694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.582864997 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851924568 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127938472 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854705652 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.853921606 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022084828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.854701782 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001890135 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85578105 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082816037 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879047383 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012829539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855061316 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085881906 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.889751905 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906484495 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856245328 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977627166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85421681 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.740984387 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008658663 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855262591 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853028355 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.263108882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.852905427 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000429631 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084731141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879233198 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926725843 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.379094122 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854247934 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942602787 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881617822 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.463878438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.854179213 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.067735466 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.800834242 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.29690542 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.855034597 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.094844235 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.086829306 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858112915 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.853220024 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.594267351 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.561185807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855018486 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014619426 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.255322995 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.507089999 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06101995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858066848 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983338107 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.859194884 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.930272184 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201013808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.854159508 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.855268981 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.856928024 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.854864901 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856176369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06430279 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88761103 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.353673799 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992467142 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074444832 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.166442235 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.078386183 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.901566917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857349388 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.103969968 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860127342 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.921143688 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.85875527 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879598865 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090850658 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859365064 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090732987 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112927132 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.764258571 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907025449 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.859654892 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857822681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.855647192 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.004750072 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948745561 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858543036 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857832478 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968404762 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978160728 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.050384849 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.450025203 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.967330932 seconds)
  done (took 895.018073365 seconds)
done (took 1212.621763334 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.856458713 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.859096489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.844713114 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.859058359 seconds)
  done (took 29.212580948 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.865951394 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.864623036 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.866062687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.863537975 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.866393679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.863780784 seconds)
  done (took 12.985166854 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.891995038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858256094 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85936179 seconds)
  done (took 21.403862108 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.931829014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268985173 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.968824387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.306337151 seconds)
  done (took 10.271798506 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.867812662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.865761481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.866678966 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.868256808 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.868689973 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.868366844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.869139598 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.86824593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.86804386 seconds)
  done (took 18.606945307 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.015977206 seconds)
done (took 98.289567215 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.037318865 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.999258248 seconds)
    (3/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.999881671 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.456450624 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.905214105 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.992751963 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.861782192 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.984530749 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.088114276 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.004329487 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.845937125 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.944189429 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.860398856 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.324673815 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.921157109 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.881047148 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.964368169 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.901469913 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.897511647 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.004931883 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.256886755 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902982123 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.862236806 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.979282047 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.963296409 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.087254114 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.85735226 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.530751404 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.881653795 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.68239622 seconds)
    (31/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.00548588 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.896003181 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.454583281 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.855134249 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.39812715 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.865505317 seconds)
    (37/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.036740064 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.97554272 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134638103 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.050802667 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.860453794 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.899747816 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.853867567 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.246354068 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.856603519 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.303979942 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.788838708 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.870957059 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.163296359 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.935305311 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.393197828 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.866564639 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.120186691 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.168864044 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.173839748 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.200916177 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.983624589 seconds)
    (58/309) benchmarking ("sort", BigInt, false)...
    done (took 6.871784338 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.860143137 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.286376328 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.148492238 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.981510886 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.897094953 seconds)
    (64/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.918929592 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.896981361 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.928718536 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.307952067 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.057632574 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.941847279 seconds)
    (70/309) benchmarking ("sort", Float64, false)...
    done (took 5.657522566 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786259486 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.068614134 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.899731057 seconds)
    (74/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.194930724 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.258981375 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.981041936 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.000109672 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.897616734 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.856435883 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.884293026 seconds)
    (81/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.983255731 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.003649863 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.072747528 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.609654307 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.062362298 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.104263221 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.952101086 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.569812969 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.21691708 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.745411682 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.931855796 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.228108054 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.558766606 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.772768997 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.950550536 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.970389965 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.917380805 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.064202598 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.461962898 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.26780953 seconds)
    (101/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.036123399 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.463676726 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.087234312 seconds)
    (104/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.010027549 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.495010756 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973021391 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.979028316 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.509084309 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.871883506 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.449603652 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.869930508 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.772535463 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.954011314 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.003518683 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.544095838 seconds)
    (116/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.006762857 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.070429299 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.869323418 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.916653338 seconds)
    (120/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.879802696 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.171432141 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.869831048 seconds)
    (123/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.454049173 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.981070901 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.088738666 seconds)
    (126/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.13532146 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.85693087 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 3.218777529 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 5.632687041 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166978664 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.324574204 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.895797461 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.853782562 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.433729102 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.967621229 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.146245827 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.870434122 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.953767852 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082695864 seconds)
    (140/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.323896358 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.247992218 seconds)
    (142/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.927859693 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.108048699 seconds)
    (144/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.901846511 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.85633658 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.910077529 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 4.524471713 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.977472851 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.173884603 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.934645403 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.16130583 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.218086867 seconds)
    (153/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.027450416 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.035424441 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.856493456 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.111255022 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.898200245 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.952958658 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.870796711 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.848733723 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.146360834 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874822234 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.903831616 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.961954299 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.871675403 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.992254926 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.731520589 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.994068845 seconds)
    (169/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.955379926 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.870099088 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.209929847 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.874765814 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.046439961 seconds)
    (174/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.95870672 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.086735157 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.234790678 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.862057404 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881585694 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.89931735 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.750614517 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.897766266 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.01498351 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.87549008 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.387145725 seconds)
    (185/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.879790959 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.254804104 seconds)
    (187/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.109866473 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.674097018 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.073789741 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.952051965 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.263862751 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.850464347 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.247292432 seconds)
    (194/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.175817512 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.394650964 seconds)
    (196/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.375698382 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.90545982 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915021763 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.474688561 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.281053991 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.140015231 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.541912879 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.975755048 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.232770714 seconds)
    (205/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.472801051 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.924526243 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.384457425 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.124875987 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.154642071 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.940311615 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.931284554 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.250734139 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.788592908 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.081266546 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.948251725 seconds)
    (216/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.019035761 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.003061061 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.990190143 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.882250303 seconds)
    (220/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.215376126 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.255896369 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.779108056 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.638570906 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.075266287 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.260775423 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.554193894 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.909365644 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.044305782 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.371222654 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.875771641 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.083577612 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.176159484 seconds)
    (233/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.057690236 seconds)
    (234/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.956244279 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 4.839849894 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.20101487 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.900324175 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.552729898 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.807892167 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.992729796 seconds)
    (241/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.063528246 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.961844625 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.133964691 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.069215833 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.980633636 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.91793814 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.157686742 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.832255956 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.993604876 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.156598789 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.622855542 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.896002781 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.900613405 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.161792083 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.875750043 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896457147 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.163938874 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.863621366 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.195291284 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.909693905 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.06379189 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.877969819 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.864836168 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.437496762 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.974221168 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.864297701 seconds)
    (267/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.228626148 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.989170151 seconds)
    (269/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.885767694 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.862040769 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.127469518 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.267873218 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.903189286 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.878923907 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.401912394 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.956174087 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.259515469 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.059496665 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.878412556 seconds)
    (280/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.782899902 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.951129395 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.21182176 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.896787757 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.679867843 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.13582918 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.878835076 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.961608793 seconds)
    (288/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.088164221 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.136217678 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.962218969 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.984666294 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.877947421 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.513866135 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.94185528 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.989293876 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.229945308 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.28314945 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.040451267 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.089153762 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.138382282 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.220377166 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.922677643 seconds)
    (303/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.905034575 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.255307914 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.989219274 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.899743365 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.256202093 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.906275847 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.440977773 seconds)
  done (took 1025.376885486 seconds)
done (took 1027.189238093 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.916065212 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906568964 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.88996341 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.911855227 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.002518798 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.918377201 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.899944661 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.892143895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.937345866 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.940722584 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.889702396 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917596513 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.891725394 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.890919308 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.889484161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905015647 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.196402552 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.916607059 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.908958857 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.901436377 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.907739793 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.889831322 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.940916476 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.91916035 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.894999772 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.893621135 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.894907362 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.909368916 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.001992691 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.892963333 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.89361883 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.901483117 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.195616224 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.911920205 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.884713943 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.91079803 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.901169232 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.900264027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.894706035 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.922606373 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.339322487 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.8945602 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.893041485 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.890350117 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.889807518 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.894893917 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.891419954 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.89639548 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902794699 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90436 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.333731767 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.909806846 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.892861686 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.889082327 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.899881949 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.888777397 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.891551213 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90592717 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.907725115 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902339813 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.185387052 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.917603686 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.891012558 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.903918171 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895177394 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366355237 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887622377 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.891903126 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.341655221 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898155979 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370235323 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.90115556 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.893050751 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.903693653 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.919837092 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.194672902 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.907544277 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.888777648 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.896884291 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.886945916 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.898567021 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901436301 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.896271809 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.889510969 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903794523 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.917502365 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898455254 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.889338692 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897619013 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908052932 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897651152 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.901473406 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.890789395 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.886637244 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.899457193 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.89278746 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.893476751 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.892090485 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.894868157 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.898257664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.33116104 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908418451 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.884904629 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.88524523 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89003208 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.901424954 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.332913801 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.892902314 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.911025451 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.935773697 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.891305944 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184619669 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.917032115 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903350847 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.900573122 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.890350432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.885131458 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.183889368 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356098415 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.909658025 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.890649031 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.887764418 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90621884 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.890977508 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.887199577 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.197251839 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.915590725 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906164531 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.009823917 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.899927847 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.925271659 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.894464313 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.892288486 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922754173 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906462068 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.920373765 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.891909346 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904673352 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.90720663 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.888706747 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.898803511 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.898261466 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.889866941 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.89580535 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.881389642 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.917365555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90212159 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905382607 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.909507446 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.009897365 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.885904566 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.182361262 seconds)
done (took 297.042545175 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.954930354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.877716897 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.98238029 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.883604317 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.969592507 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.970212092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.88159302 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.879596044 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.879337885 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.31983228 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.881358452 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.880560362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.883985923 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.881172577 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.967921633 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.88178109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.879782786 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.228273209 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.885622633 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.952580856 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.879507007 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.881175672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.882806257 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264445329 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882186771 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.879154671 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.953009439 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.881529282 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226451153 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.885962015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.87746872 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.227804429 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.970216952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.899393904 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.895333632 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.892688513 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.968492374 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.887451128 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.968303287 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.96990222 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.979090246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.92549271 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.879899175 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.88775676 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.890429708 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890640346 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.880902012 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.91089412 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.884084051 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.87967822 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.228217393 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.891771591 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.886028375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.886086752 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.887830486 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.92303525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.885148545 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.885608144 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.978645797 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.885715497 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.949549468 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.270062197 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.321455876 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.895549432 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.88856416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.891131151 seconds)
  done (took 185.470936741 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.95599169 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.956367412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958612723 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.894580023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.939645843 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.957877723 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.892724617 seconds)
  done (took 15.374931236 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.892943086 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.891847286 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.936470521 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939954006 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.888383592 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.037261706 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892047079 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.902266259 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889883657 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.944771388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892599415 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.89518013 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900270774 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.889603515 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.94368618 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.905802519 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.007897569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.896368853 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892898847 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.049417024 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891801876 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.902305981 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.952346295 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.903788441 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.895362941 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.89776849 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.477381286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890775102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892956818 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.893875705 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890699009 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.938086279 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.888300423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.882388321 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889959034 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.0113802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893579517 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890089325 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.893168304 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.893383794 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.891950456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89326243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.890848517 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.89134181 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.892288145 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.916661771 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893826741 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.893350926 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.895374133 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.891268778 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.944691698 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895116735 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.891354139 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.891341169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.954263655 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.904354697 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897463584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.894143228 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.893930837 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.332013915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.0518677 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943717274 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.89334024 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.944465355 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895644971 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.892444831 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.893301729 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.895294481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.951677323 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.895009404 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942962796 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.890865727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.053088165 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.918450561 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898245093 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.898664991 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.897976048 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.899151867 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.895040752 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.903685958 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.889502617 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.897381911 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.900815045 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895988413 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892750376 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.00471116 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.004862676 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.892832725 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.909090837 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.902695518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.890183752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.947302581 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.894473955 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.894389127 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.949071706 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.011845012 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.956782051 seconds)
  done (took 208.618492981 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.899245052 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.903981108 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898593563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913403094 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896027102 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.897508139 seconds)
  done (took 13.231325508 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.895386397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897107926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.895862842 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.898470784 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.896418227 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899340089 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.90018563 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.901590984 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.9031036 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.898974863 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.895931018 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.899956448 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.89951974 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.899465234 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.899657269 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.899047213 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.900558069 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897536917 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.89729262 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901110252 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.039163912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897958643 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897681975 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.898999737 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.904306177 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.898309765 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.903863006 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.899021683 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.89936883 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.904675085 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.904240926 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.899862082 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.895780633 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.906726179 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.905314301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.900745737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903686017 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.897006288 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897506687 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.902110551 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.898691489 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.901013604 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.900743356 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.899632474 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.901440657 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906160461 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.903673978 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.909095396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.903307107 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.897038047 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.8981032 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.898042203 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.902491285 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900495659 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.903178238 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906345202 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.906535157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.901851458 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.899651475 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.90283195 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.902251997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.904080298 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903113546 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.906626135 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.910465519 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.898540669 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.901932358 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906690944 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903947359 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.901922578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.899945402 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.899880791 seconds)
  done (took 139.841552483 seconds)
done (took 564.365032689 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.049893274 seconds)
  done (took 8.877915514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.963784359 seconds)
  done (took 8.893295494 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.498541219 seconds)
  done (took 10.340692772 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.91509442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.916120052 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.915898236 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.915239431 seconds)
  done (took 29.515417965 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.923719296 seconds)
  done (took 8.765324666 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.920854016 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.910516271 seconds)
  done (took 15.704547791 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.978518975 seconds)
  done (took 8.824199902 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.95532025 seconds)
  done (took 8.798461681 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.916507553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.926650688 seconds)
  done (took 15.701337122 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.894108138 seconds)
  done (took 8.736252316 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.59520433 seconds)
  done (took 11.447397836 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.920101418 seconds)
  done (took 8.775106579 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.959529617 seconds)
  done (took 8.801433008 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.079286144 seconds)
  done (took 9.919568545 seconds)
done (took 164.92845498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.913670427 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.908821896 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.910410184 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.90712678 seconds)
  done (took 29.480574079 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.950839648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.949260175 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.952242508 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.961168938 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.9549686 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.952388572 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.94341025 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.943227925 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.95765512 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.953063221 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.952432214 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.951637558 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.947803695 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.941173111 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.951666058 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.947028365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.962643154 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.948801307 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.946958985 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.953284238 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.917147802 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.958502488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.954379475 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.917281015 seconds)
  done (took 48.613811102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.114624462 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.987488549 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.068549204 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.966985432 seconds)
  done (took 9.97969275 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.967611964 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.967847722 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.982546991 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.02078036 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.056550018 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.980066742 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.940449774 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.935872661 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.925410504 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.97008036 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.046698039 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.986823799 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.053677586 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.915769544 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.105942788 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.916771963 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.916533952 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.971412828 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.023754456 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.035143666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.919199225 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.971816732 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.97734515 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.986832588 seconds)
  done (took 49.420006458 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91721058 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.926551131 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.919716435 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.916096835 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.915031673 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.919498629 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.924676747 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.917524396 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.941416002 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.918827308 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.914317307 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.91669117 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.916409624 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.917510689 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.918046507 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.927799722 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.927166529 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.918048962 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.921256545 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.923729928 seconds)
  done (took 40.261939571 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.911837587 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.85534433 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.264204159 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.168527614 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.911967858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.912130769 seconds)
  done (took 32.869349812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.9334514 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.983679767 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.925022889 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.974851409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.052344285 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.926110421 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.922175147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.988850983 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.029004277 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988709583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.936431652 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.944295545 seconds)
  done (took 25.449592922 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.91540315 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.918476824 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.91737925 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.931636948 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.926597465 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.924032686 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.928388897 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.909562748 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.931852136 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.936801686 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.928742656 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.933635863 seconds)
  done (took 44.951201099 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002206539 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.960412392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.967995473 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591805051 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291090657 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125301827 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.522991495 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267116249 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.916322523 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190060548 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984254873 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023750927 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173298542 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394617122 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.947053074 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365920329 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213173563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123870483 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937655073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60227822 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979595767 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087126179 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.715203353 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976314181 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12769131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.04437347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.175277233 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915033079 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051394521 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954600938 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925836965 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917611535 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191400286 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298770591 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021299413 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927228583 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.537567083 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.631333892 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.907020974 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.679247099 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.655594937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037498482 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926732902 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915395163 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852341821 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061784161 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298036654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.922255555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626092028 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918011295 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924975408 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011572212 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.923697843 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.732262895 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839870797 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.919946398 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.91561042 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92419513 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493906494 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04876776 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098152269 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.88751625 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.010479953 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673139806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300707544 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.065937112 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.922343163 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926146165 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852673935 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.602078033 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977434707 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251604634 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.943472847 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570461169 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235482528 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.037017701 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862466104 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189994524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432307614 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.894912663 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149967771 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923821516 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85687184 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.866850926 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858357444 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177214783 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960053706 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.699835443 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958557603 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268648188 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931279714 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941574172 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942850087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147452612 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.805402872 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925525599 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.755372755 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067712628 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944491786 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274982886 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85512662 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.927135535 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179076812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.134994601 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.993790243 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.407200883 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085722685 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481148158 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.977322901 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.060537101 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969545394 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.191099421 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981345961 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.047099325 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975988351 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924255069 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220447373 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.491680141 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.058779414 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.995069611 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051221873 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232458622 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950219247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009691561 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935616525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.923747124 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.68093464 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478771013 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.925369599 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.927657213 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.996262748 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969636483 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.925969053 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878133287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.555040654 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005604642 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.940047686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149693086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483455116 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237300267 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862001666 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256440903 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987558381 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.151579034 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.568822248 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.001407283 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189146595 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994799797 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.013932149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972861207 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946363824 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025291899 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944705095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.061070832 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218377895 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.932981543 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.929408301 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.724720367 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963496464 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929126312 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.93263573 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679866238 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196076746 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947342257 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93282208 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.81831956 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.941198507 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988423293 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934974384 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934882934 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.467281757 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642975332 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.932634474 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.518525105 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15204655 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936840079 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.698700782 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042101359 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.017788619 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195846302 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982364867 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.862278986 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.634509217 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.619061093 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927473397 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863226107 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.925383473 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938470921 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933807473 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.121789943 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201245312 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966338385 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.609178461 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.973782671 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932271899 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.933748585 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925673905 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.438939132 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.052609186 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.097094987 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973581371 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072232065 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.942682314 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864276045 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.932530733 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931706843 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925114028 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.927840539 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961297779 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.612140771 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307066601 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192324806 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.542611763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941743058 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.662593431 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.990103465 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92967683 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.634247806 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229713365 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.96288615 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942135818 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.939653876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.68429516 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.641369532 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500191862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239819595 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223224464 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35458851 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.125883604 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.958202849 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284374311 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862903271 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484817732 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986540106 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27770542 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873529763 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021077677 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.572461135 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270828449 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939655763 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157987536 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313927528 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.690642627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07579272 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14390572 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968152884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.066595328 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890717582 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.457927175 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071386186 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.629171341 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13734669 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283851331 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.636538308 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.05507959 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.931903843 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603259371 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008899934 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.648153255 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.106543579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097656459 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901596201 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41536266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939946304 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.157315665 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276122615 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.08423349 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.059137586 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86744625 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.943581796 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94543789 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.935270561 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.93044495 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.800837337 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.187081952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944020691 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866912944 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.019558475 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214639837 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.835691125 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.939426854 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93103366 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219378095 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.458709236 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09719319 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.006360492 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.449453737 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941073784 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.867739 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86905109 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.628540057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.940654381 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909841532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125527823 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.037846871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84900799 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988958795 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015695669 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19409334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.944446079 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204551002 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206049269 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.641261088 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957767311 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.035553041 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60702485 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.046261481 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937905278 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172091412 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68841663 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16351662 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.98357238 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.886374605 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.931849124 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147595162 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931323715 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858293615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161838852 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.657628714 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.980468037 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241995252 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009451289 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.861708622 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98039968 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.027087271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943356269 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01562649 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945570044 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.94645631 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947339053 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985535365 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880571608 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.059748648 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.949324697 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032339552 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063311364 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.459071258 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.943450074 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206727926 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298482616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255977777 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99225596 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934235644 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942989691 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872435692 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082183191 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.1632921 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210401735 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069573744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.052494677 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961940742 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.634994112 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.124539153 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177886668 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213181216 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.834432295 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431217858 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974858073 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.937912796 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947477648 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.150216773 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139863713 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225025812 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.074002916 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004493802 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308615869 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210105386 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.940196638 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939376199 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530785051 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.000678759 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613238149 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.97740998 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884409417 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212327143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950611168 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318145704 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95872917 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.098144651 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.714982047 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747629455 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231452159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.923258642 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997730545 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211842798 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325949292 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251849652 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007117101 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950256154 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.050115853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084519878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.806041587 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939327218 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940194871 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987674738 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.648146983 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947259979 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211671263 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250231826 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.939112577 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.812608903 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964142902 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.951370526 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165789218 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197039663 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193365572 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950423153 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946229618 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.755218847 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212390184 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99872441 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877678744 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.942204437 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036483661 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191858043 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957964434 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.394470091 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.650542179 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201436749 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.941141606 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962020425 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083138039 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299179387 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260673209 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.475005804 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148195387 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.530628934 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527152511 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238261671 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.94628963 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.08067875 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244190559 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.943175032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003637435 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979307723 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.208811336 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249415878 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.956310257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.625669234 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.91005125 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283667926 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506483014 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881649148 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955914283 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.00515101 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.940410515 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072049235 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952254112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.823882254 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078249419 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.721493129 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226029495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.946562998 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.932238856 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.681670089 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.216829137 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973239997 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091030305 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947110388 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.618979593 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.294598073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201982703 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.011278862 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.952336059 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.94925464 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94279562 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.934301882 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.142249742 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.141942128 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210160434 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.043878171 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.981875534 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947336415 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.162247222 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157053414 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.866072589 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082942084 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003197613 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987385816 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.851309877 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.454970561 seconds)
  done (took 1703.551506933 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960459339 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.993974308 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.052456425 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.963307603 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956568301 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95741848 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.994706322 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988011371 seconds)
  done (took 57.744946972 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.950253184 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.166228068 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.953286332 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.949531178 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.955291785 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.945992218 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.115524087 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.957527665 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.956006635 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.958278978 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.946032837 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.94691616 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.25320748 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.971473565 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.947031178 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.93481176 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.952513042 seconds)
  done (took 75.761009186 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.948540803 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.956158861 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.96470712 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.966179692 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.979958226 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.957324923 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.753710304 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.97225982 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.948568948 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.076831211 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.58171376 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.960832022 seconds)
  done (took 87.946030784 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.955414273 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.955096398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.956063093 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.955199239 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.954818438 seconds)
  done (took 11.660026131 seconds)
done (took 2219.558228323 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.203837674 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.167666715 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.188211633 seconds)
  done (took 6.239052822 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.092043145 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.139052795 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.257545943 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.265542813 seconds)
  done (took 10.634376067 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.227797881 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.317532771 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.158123375 seconds)
  done (took 8.579383639 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.346927634 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.959519923 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.05443711 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.943490852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.941663267 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.942933783 seconds)
  done (took 22.70566344 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.946786034 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.948965282 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.948491059 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.949189147 seconds)
  done (took 9.668819848 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.929247709 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.663528825 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.929998122 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.943318704 seconds)
  done (took 21.3421223 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.697391811 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.710436678 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.689386555 seconds)
  done (took 9.973936721 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.591049093 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.866117996 seconds)
  done (took 9.334617245 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.20919007 seconds)
  done (took 4.084958728 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.079768254 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.211288552 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.406682469 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.44123006 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.496485949 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.819678362 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.253837544 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.189212196 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.337385913 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.387458761 seconds)
  done (took 25.499870881 seconds)
done (took 143.509803997 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.326130081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.184434668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.147591218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.283768077 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.167477477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.207911562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.368731798 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.265147127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.792407558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.791066787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.284298867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.168515064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.104224979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.183967024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.104032653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.186481729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.168891971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.33708073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.016908762 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.177042086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.370775738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.922248979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.130884897 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.938502998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.167903169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.098845065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.501772706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.186586036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.173321019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.51087704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.100483487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.332115815 seconds)
  done (took 175.577202261 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.714211386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.945288894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.944375384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.945913347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.5367879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947437504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948525626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.94634168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.205355604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.167098348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.946722721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.534958927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947802286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947954789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946063991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947508707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.303254337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.770293787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.95711449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961619584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96693016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.538886466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.971077391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.584435313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.360931452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.972733912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.948792009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.973878329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956334799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.960672339 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962697052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.9481285 seconds)
  done (took 211.590604835 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.948438648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948126549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948852583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947228538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.950643661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.958328045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.951964712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.948678215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.516335161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.490069698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953223311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.955770617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951612073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.948768547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974251838 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947874639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.949882835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.951534796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.954533479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955634793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958664182 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.838374406 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.948745742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.838978403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.950490453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952428342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.950331177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955346646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.958238373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957157592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958610541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.949939091 seconds)
  done (took 223.269229359 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.152374615 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.955579044 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.957703089 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.910032535 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.956287358 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.956302523 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.949915831 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.153874373 seconds)
  done (took 19.888018805 seconds)
done (took 632.215132279 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.412394052 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.247043005 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.126050549 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.980274699 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.210619988 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.008650025 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9762524 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.036242529 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.702485227 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.03962427 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.626192595 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.99426559 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717999089 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.998606617 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.10751781 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.031672224 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.550040279 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.628251675 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.154607363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.047079849 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.140845056 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.941361538 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.048724624 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.734250434 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.721635086 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.982166058 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.144448597 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.551839713 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.985127244 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.141729285 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.702256308 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.344450152 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.985266393 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.974171553 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.02665443 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.008666117 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307944012 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.983865193 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.102135647 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.743936916 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.025899642 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.581871609 seconds)
  done (took 106.658526344 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.948774728 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.946336826 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.946962065 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.946480541 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.949051628 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.946847433 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.946810109 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.946440673 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.94687204 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.946852136 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.946458815 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.948281648 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.947897355 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.948083447 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.948368338 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.94720004 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.948765294 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.951665542 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.94723073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.946934058 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.94851237 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.948701015 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.94881098 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.948635269 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.948600959 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.949460632 seconds)
  done (took 52.539711403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.961299117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.101414255 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.175812472 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.976733553 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.958389359 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.963567704 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.97886219 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.964199939 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.962976572 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.96245581 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.049733993 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.96498749 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.978628961 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.17630148 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.973655921 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.962162103 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.961004805 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.959762732 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.110536303 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974826519 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.977477253 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.965108245 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.978940966 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.973412083 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.962607674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96380389 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.964537114 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.393214319 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.97023518 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.049978305 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.003230889 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.982427535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.349803719 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.186334838 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.011475864 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.968744604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.963228326 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.056765891 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.966283087 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.963352645 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.981041313 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.969182279 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.179012511 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.452969716 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.973414212 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.962262434 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.403944447 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.076734931 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001908998 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973375387 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182056843 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.975261194 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.964921448 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.961899213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.998101149 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971401865 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.961978816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.265469077 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.972325603 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.981141252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.968001006 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.963075864 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114403796 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.964547433 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102323843 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.964944961 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.966721275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.959199118 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.179716261 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974950173 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.460972813 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.974976736 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.962938635 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.051280458 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109130652 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.427797238 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.975202392 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121232629 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.369782303 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.986952932 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.973651434 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.389192239 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.991672467 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.972712053 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.966055521 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.967350664 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.965109733 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.010762492 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.980748603 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.404577341 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465750077 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277129697 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.991050508 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.97911104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.965802582 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.266936394 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97308093 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.965470195 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.175419573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.47228609 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.974778313 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.97379828 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.447356743 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.97798042 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.985050426 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.975578068 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.187979661 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.978767686 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.009818302 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.967631632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.973086535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.968475781 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.985442877 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.974809278 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.967902512 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.433466991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.072148049 seconds)
  done (took 242.473745259 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.962062041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.960262439 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.959533071 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.960618776 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.960260971 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965685907 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.959058532 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.959843783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.966136825 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.96048819 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.959796523 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.964216627 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.962774466 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.963215023 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.462936056 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.968951194 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.572873059 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.962221162 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.963464306 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.962889934 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.641142707 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.969957054 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.96374696 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.968585538 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.965344129 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.963319698 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.968218337 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.998707982 seconds)
  done (took 170.692437671 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.970625612 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.150224 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.987434977 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.005084906 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.979795441 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.966923471 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.993148328 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.98998789 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.973354925 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.967861046 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.96842334 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.031532153 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.981843247 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.100760021 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.002130671 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.999666549 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.077134376 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.978593093 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.967240233 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.968662129 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.998099283 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.967099159 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.031629818 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.097750592 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.988876367 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088235488 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.978322078 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.97189565 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.969487946 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.086693292 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.986302495 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030676326 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.998656522 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.988506182 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.093356813 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.088189105 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076531081 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.998244078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.976349825 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.969375757 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.970337048 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.962683481 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.088859098 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.990382869 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.972617812 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.080912297 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.988777993 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.970463527 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.980810079 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.97005544 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.983898454 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.990675899 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.039230744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.103015252 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.004816885 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.995950114 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.997708889 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.263779994 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.984291235 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071497426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.966133171 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.088043713 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991144756 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.959887365 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.970676834 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.975363308 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.999245468 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.004061425 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.078533761 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.9788292 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072817552 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.005426036 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.978488669 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.972400751 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.975353474 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089782532 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.089942865 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.006602901 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.011895291 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.005483786 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.969823745 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.972630712 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.96326766 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.990112674 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.977845223 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.087414438 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.091064074 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.981504227 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.974997609 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.974787571 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.975106644 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.998835297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.099366087 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.007510666 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070786734 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039329988 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.050084 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.988737741 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.987557583 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.97691712 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037842216 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.987351111 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.984922891 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.313289671 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.046091964 seconds)
  done (took 213.523210909 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.068404818 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.440008887 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.027667303 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.030503231 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.247840653 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.403792274 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.789832141 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.021163843 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.023020593 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.049608709 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.183016965 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082243886 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.037085131 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.011829024 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.442730183 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.012780446 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.022869147 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.043950343 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.027947794 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.582010744 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.333313343 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.148460305 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.0189573 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.176706051 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.003593574 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294745658 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.344116319 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.404600286 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.058629705 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.366471619 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.352394605 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.710091305 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.22861042 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.264564611 seconds)
  done (took 78.161038819 seconds)
done (took 865.930577376 seconds)
SAVING RESULT...
DONE!
