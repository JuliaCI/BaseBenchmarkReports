cset: moving following pidspec: 14123
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304026006 seconds)
loading group "string"... done (took 0.593797696 seconds)
loading group "linalg"... done (took 7.22744456 seconds)
loading group "parallel"... done (took 0.169320754 seconds)
loading group "find"... done (took 1.146630486 seconds)
loading group "tuple"... done (took 2.01844685 seconds)
loading group "dates"... done (took 1.292898087 seconds)
loading group "micro"... done (took 0.240330737 seconds)
loading group "io"... done (took 0.965662562 seconds)
loading group "scalar"... done (took 39.789657814 seconds)
loading group "sparse"... done (took 12.732700024 seconds)
loading group "broadcast"... done (took 0.987735099 seconds)
loading group "union"... done (took 13.691063005 seconds)
loading group "simd"... done (took 4.767134719 seconds)
loading group "random"... done (took 9.283030616 seconds)
loading group "problem"... done (took 1.980528675 seconds)
loading group "array"... done (took 21.609395686 seconds)
loading group "misc"... done (took 1.91953 seconds)
loading group "sort"... done (took 3.203797814 seconds)
loading group "collection"... done (took 18.127482544 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537843498 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143678329 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118934244 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139396741 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184807006 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129747561 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146953205 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086669553 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.046706346 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168796907 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139395674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.481437359 seconds)
done (took 5.085074378 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200320574 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085846208 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094933381 seconds)
  done (took 0.882849544 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0659651 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125280945 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079776607 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06685193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0664501 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08027111 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065838363 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065029149 seconds)
  done (took 1.259488667 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072633675 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067986302 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083442777 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067546395 seconds)
  done (took 1.001557815 seconds)
done (took 4.130127614 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.899499969 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233419115 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187780134 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452886974 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147381998 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187209632 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672117611 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331215354 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210120408 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099621307 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103912516 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376298467 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107072104 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667332289 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077936685 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106169812 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158252274 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439470399 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080412949 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082596202 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102963121 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141092094 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103231432 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078474806 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16664519 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068785891 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146401803 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094255509 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067954093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242369865 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189163009 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684873305 seconds)
  done (took 10.451490525 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098397613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115633338 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068615585 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138684272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100854982 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08531401 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070415164 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082773538 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090838413 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157059176 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112907631 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105041586 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081143312 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068660117 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099953879 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211549397 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109467465 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086595672 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087479712 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076220326 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123925369 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082389724 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092789537 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077858742 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151317199 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19471665 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11044391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110737219 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068335165 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080597142 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130615627 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142674326 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065153883 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081023782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138779093 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110526292 seconds)
  done (took 4.533824529 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.045288491 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159502731 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090493469 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151061243 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084642152 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108803329 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082512682 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100401345 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250435681 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.10371978 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.46478273 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13147909 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103158502 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069150002 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085614663 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069209123 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.546665227 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1487334 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103847655 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106574964 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091125089 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072258969 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361417979 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069508223 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067315897 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086646331 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060425008 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148270894 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069082381 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.235280085 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091387697 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089542618 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10376671 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201542245 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087008605 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110827248 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094527104 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160987686 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086276397 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066646692 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17382512 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092637301 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068513643 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10734004 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105409718 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123496865 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084165132 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069336005 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185010572 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06860448 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101653276 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.906251835 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165526015 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07963918 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067549698 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290936912 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083991113 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083470974 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063691439 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273367895 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154050249 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073326034 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084942616 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067042769 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068920145 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389195911 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068804631 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.670275493 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06864185 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07571659 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084634686 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06709753 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087983301 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072033802 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099908368 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067150006 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066681757 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082876962 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065750468 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082787833 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084513083 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202331884 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082507533 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066360387 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063807766 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101746897 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110674067 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070979803 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064403237 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115676226 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068511523 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083093162 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064066774 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117900913 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063868163 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0823375 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08433216 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084453978 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127005387 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068927494 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143515843 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080505553 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099813412 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.091004821 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113398797 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079214892 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082453509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153070128 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065245115 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065258484 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084523439 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065224227 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083386415 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069013854 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095549955 seconds)
  done (took 21.058762268 seconds)
done (took 37.798216904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.296218988 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0936448 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09392042 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07659943 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094513445 seconds)
  done (took 1.443011245 seconds)
done (took 2.204164351 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119328667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115097933 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063215158 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113091584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063579113 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119628934 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116708799 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083127059 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12148406 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065568611 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114681264 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065744893 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064172797 seconds)
  done (took 2.013363223 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08270865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083642958 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08467602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080854515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077508016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081761358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078940343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104024209 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079424232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087477108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063795816 seconds)
  done (took 1.664191202 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081412025 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083015535 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084339452 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080143305 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077630405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081380588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079187813 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101363578 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07995616 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087704643 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062944669 seconds)
  done (took 1.660508838 seconds)
done (took 6.09117371 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07711045 seconds)
  done (took 0.832082516 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.701367949 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.696748936 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08319027 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132177329 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220319493 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154225411 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.445254935 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112530042 seconds)
  done (took 10.472381595 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087823982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097447668 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068694475 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085340136 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071432712 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084905743 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071371376 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068795118 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086527861 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06867804 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08365008 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070889081 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086070089 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070676345 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069032946 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085211239 seconds)
  done (took 2.078947516 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093603844 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091787094 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089850065 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076023836 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089072608 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072814495 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09120247 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073761699 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086870853 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072444342 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090510392 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074083917 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087532065 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065856964 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089570021 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076466004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08618323 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074038836 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090251231 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075759047 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09117673 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064773107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087986468 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075421152 seconds)
  done (took 2.83261886 seconds)
done (took 16.978209111 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129758492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076057583 seconds)
  done (took 0.967447839 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081309595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096673559 seconds)
  done (took 0.94737179 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081310778 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079711433 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088293937 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092533582 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065351012 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080958894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101698903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066274527 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080184156 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066313446 seconds)
  done (took 1.571696747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068115741 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092023382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070727893 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095871952 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072812186 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07953752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072194141 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082970914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078065258 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078841156 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070693987 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098262572 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071405093 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099541247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071797106 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08396682 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085824383 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067628132 seconds)
  done (took 2.209963436 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065503641 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067004151 seconds)
  done (took 0.902588015 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066295817 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062763259 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081470974 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065849355 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078125177 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062738821 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078646512 seconds)
  done (took 1.266139008 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397343595 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107609823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240552182 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087487396 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102155266 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260322919 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082457804 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070810539 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087072012 seconds)
  done (took 2.242892677 seconds)
done (took 10.876603969 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078994633 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084408301 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10908762 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417462636 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105700093 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065979051 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131152365 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220855443 seconds)
done (took 1.984904528 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124550578 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602950585 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.394491911 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210428019 seconds)
  done (took 1.986918941 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37182164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090779049 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073608865 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066730722 seconds)
  done (took 1.384853093 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065919591 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069171325 seconds)
  done (took 0.915476729 seconds)
done (took 5.190060676 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066323284 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.10178999 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065719051 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063719442 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082326095 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063274179 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063401267 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082712872 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066938043 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065098164 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082102069 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068876531 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081785608 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063816153 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063587016 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079528842 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065908378 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065320645 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080083011 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06345683 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063529595 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082064677 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063884802 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063100073 seconds)
  done (took 2.522412124 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08506019 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082402924 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071701939 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086407747 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070461154 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087291468 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070744202 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066585594 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087212345 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067849164 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088737677 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070110406 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083183712 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069600467 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083177452 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070524614 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086958051 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066888687 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067822591 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085744735 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071331222 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081899573 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070019007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086645706 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069957923 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085861004 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067494092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081991899 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071733605 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086182258 seconds)
  done (took 3.104678385 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069909037 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063102934 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080021074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06989302 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063188076 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081026156 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063723961 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079394813 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064366059 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063593977 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080580804 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063513198 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063660205 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080575797 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064270576 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082855269 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079770361 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06489814 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079646047 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063965515 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065819642 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079424977 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063545669 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07945801 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064027407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063602831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080252528 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063191717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064476565 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08009985 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066361636 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06606726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079990597 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071032546 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083423146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063943131 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067864916 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078970737 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063790411 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063515154 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079688865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062988083 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063063325 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085901921 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064009472 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081608428 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063642035 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064760234 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0805848 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066625889 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079127572 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064149431 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065457502 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08104129 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067465167 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062465357 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080123268 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063475132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080097235 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063940337 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06303267 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079129874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066348251 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06488093 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094512869 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069959995 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078537253 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065209341 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064990313 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082447181 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06504307 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077118373 seconds)
  done (took 5.905876895 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11515518 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090670201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082023313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065740954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078162035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064353137 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067448119 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080809453 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065460334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087623797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065587881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065753103 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082339044 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075661433 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081800889 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067398188 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088171552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064179963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065253664 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085612303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06612488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085740286 seconds)
  done (took 2.482131232 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184452405 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087785424 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108635411 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09001679 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084893207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07499161 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0714581 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089099607 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07258463 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086754094 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070155802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088452523 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070226531 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086535568 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070472054 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086486595 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071912147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086976743 seconds)
  done (took 2.370063495 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077829278 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065768669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105046582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06589656 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082783344 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067816399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087854235 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074574927 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085160473 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065713733 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090976975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068436006 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08642596 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068222507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069920491 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083991331 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070751193 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084609991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075727037 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089593626 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073194959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093178832 seconds)
  done (took 2.523034403 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080673945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067615605 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100242074 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084159262 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061740712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064589858 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088461545 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066039762 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088975859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069641133 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067537497 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083606976 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073072283 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084568566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072562012 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08468174 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06907722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067989239 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086542632 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063566799 seconds)
  done (took 2.316463589 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086336301 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083543076 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068699023 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093237941 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069529587 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085912093 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077012696 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086203503 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069337504 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110885587 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068854454 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08742366 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078031321 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091323594 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069310167 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093396647 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076711372 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094098097 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068147788 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087215272 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.221842221 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069091557 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094215741 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068806209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085035583 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069028992 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068220654 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090893109 seconds)
  done (took 3.208998898 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06659412 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065782359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079586397 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06345204 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063418702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080077433 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063849083 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06320389 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082754178 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063462566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064718507 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083700687 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066933335 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083878993 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067309447 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06745868 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084322764 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06478805 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065017188 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082055204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067428316 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067711876 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08461925 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065305588 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081315292 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067359951 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065575105 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082125386 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067659374 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06509798 seconds)
  done (took 2.934067148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075707173 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089647193 seconds)
  done (took 0.964273263 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063603652 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07982502 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080004252 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069670692 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086816493 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066527024 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090861284 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070326191 seconds)
  done (took 1.403078914 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081564526 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076942407 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083858031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077644047 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09461864 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082542244 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153695663 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084971608 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072994192 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082240074 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080250621 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066191682 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090494495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066696011 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088880711 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072158833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064843096 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088342936 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068881074 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081494505 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067546967 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092776426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068723808 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062890957 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086074477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075216531 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094449088 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067127927 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086516062 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074599368 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071289719 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078587438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065723201 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084687521 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065451679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094775345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084317699 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087223455 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077802214 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069192156 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095876821 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063275798 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089684534 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075162508 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094830332 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06864805 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067852387 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080832367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066171766 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086959846 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063815917 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068283728 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080164638 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07477218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088236337 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07929703 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069860068 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087324513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071427207 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089327328 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075629836 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087225706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070658562 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068108982 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095383157 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072805569 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094855757 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063812888 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061326601 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083140876 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077707768 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10806819 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074567066 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08625938 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069173031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082845626 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071387148 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069436119 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091052588 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074938092 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085664983 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074918264 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092698842 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068694991 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070267575 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093250586 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066251463 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087784535 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066847823 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101677549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067206583 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082563811 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066164416 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079409373 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088744986 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068127189 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083107988 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074935921 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062080096 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085961025 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069155207 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08597719 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078786033 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089587691 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074644687 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093918342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076349794 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067923491 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088936064 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065121757 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086236588 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067403541 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074678381 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080116895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07153578 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085927821 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068671547 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076917596 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083867135 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068180204 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093305197 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073097056 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082624415 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063686605 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06978091 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082869231 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069191124 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09114935 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065064461 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060795305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078859961 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070316925 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083016075 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069531264 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087485112 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07001327 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06117028 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081681897 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070723561 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092323018 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066821724 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066921485 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089465723 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06709837 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084241614 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072678691 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086674289 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066466427 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073610603 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086085459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063336257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088987 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070662288 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066200277 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088751152 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071505433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087807758 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069812501 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083658747 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074231521 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068789406 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084590481 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067776995 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083768829 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079030864 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06973748 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080817584 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065151548 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092721468 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066507541 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06765418 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085390901 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070050068 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086653692 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065984336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066662889 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087527402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078636252 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089620195 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068767779 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090696528 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079336966 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084873459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070286774 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067594912 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086478804 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068785248 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093950702 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073356007 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090832887 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06996098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064453999 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091028287 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074896269 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084723895 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066886566 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066686125 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089679965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073900874 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08975393 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069459829 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083653107 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069391679 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071245018 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087756623 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067857271 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084572136 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072739168 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08462418 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075285702 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068706688 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096608965 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0713825 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081273574 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072197894 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083981232 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074780305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063733829 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08409612 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067440167 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086517953 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06782551 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071621364 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080512114 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074998458 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09281506 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069130853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067123757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086018311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075386431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087452028 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07223263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070731943 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092036926 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078488647 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084886095 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071513097 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096616858 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068434067 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061824659 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091261665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066979184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085587367 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067692857 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065627477 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088769509 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077337897 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093433438 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062762765 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087537641 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06689524 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068108489 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081489057 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073275446 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088454249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069190371 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074881339 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087244831 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068811898 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089879018 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068505246 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068032807 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087952336 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071351846 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08641147 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070975438 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066496084 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08951044 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067088363 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08448854 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069984296 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067907349 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087350582 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074062972 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086010365 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068162482 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087641384 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069967875 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069144184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086984514 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068193957 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088424669 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069338178 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069052401 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088405042 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063926831 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092478966 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067781437 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075202115 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086509715 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065348658 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090332546 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070473358 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072262035 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086445264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06871222 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087343928 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066523741 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086477436 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075618858 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065763079 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096719532 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076264409 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087108474 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071503063 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085488823 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070167298 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067468998 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086932125 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069478405 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06778201 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086343267 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072501653 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088466172 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068372171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069606794 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088150459 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068258982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08729684 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063047901 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066735109 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085519718 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068084448 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096488516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068805008 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085630791 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067058252 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068055765 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083129768 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063361794 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091115286 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075055905 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08406481 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07436058 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081863282 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068492461 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076153089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078382963 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065350046 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081650681 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065842997 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073963577 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085248397 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075014493 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084084778 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066326875 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063246828 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085488898 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064781257 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060241269 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082155252 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070852116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08317664 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065456379 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066195163 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087179067 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067348389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093040037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066202693 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084971276 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06735736 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064624935 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083002122 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065927958 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085925063 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067524304 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064034506 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081181263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066812573 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066674843 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085768 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066807057 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086516559 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073725817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083198896 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069979499 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069319033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083052559 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070006405 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085445779 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068011674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067205207 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089591862 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070676755 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086793572 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076251504 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084046078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068918327 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066851878 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082363059 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066568299 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065918476 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084451164 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065243128 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084955647 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074086574 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081108981 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070209517 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066028831 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08483536 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072535331 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084688781 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070088835 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090393455 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067520862 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068032637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091519319 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069729542 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086877289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067774391 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067079591 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08973887 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065181994 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090762523 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066409746 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084199098 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068308842 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064881911 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0831198 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066709232 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065373568 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090880153 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067631 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083435271 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066057848 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08150457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067429845 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068897959 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09134506 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0695295 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086876096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062554336 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063254019 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08594125 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065182136 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085279535 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070365137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071772207 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086277439 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066697575 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083085105 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076128128 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090105611 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071546789 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066340192 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090284799 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069558162 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088492923 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069914011 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068739462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087206377 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072598288 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08780556 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068343233 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07518976 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089325138 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069265874 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088369246 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069648973 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068017951 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082240653 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069244073 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088184251 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073928086 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069758539 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086782263 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078897393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084365618 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066901975 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087239046 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066139542 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070494983 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080130223 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068133093 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084592763 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067883075 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061535029 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083329656 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065313394 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085796254 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066702146 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061302271 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094931052 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075925922 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087587665 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066611705 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064478633 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080154245 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061801294 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083258438 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068374089 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068383052 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094823769 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065675223 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083904065 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062486881 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065740242 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087765068 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070200927 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0817862 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063096676 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06503748 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087550894 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071922062 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082730576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066484234 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069623061 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087378256 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065027357 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087765404 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064428024 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087052414 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079465286 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066100699 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085239392 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071753317 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091211811 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067108367 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079427752 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067730195 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069035635 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084681033 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067622775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084915422 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080688766 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08714011 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06583827 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06477262 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086813106 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065925459 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091910943 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067908407 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066994168 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088969109 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06822067 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0923911 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069632538 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09175164 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069304689 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087361598 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066196463 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06642929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082865905 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066581173 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085379129 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06768749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070894259 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092798629 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065676335 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095020517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075103927 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08579918 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063617676 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065224698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083882667 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062128345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084706416 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065256644 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064487222 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082605299 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065553928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084731973 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072907493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067338118 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08506924 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066346371 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077938383 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0691624 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068676534 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085646297 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063861295 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065351208 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085967363 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070111003 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087326069 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064508308 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08551856 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068579563 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06753734 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079914023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073148925 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06457316 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08742907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065557715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084028019 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068141603 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086901774 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071980094 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067520399 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087440415 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074961835 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08733968 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064005604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063450467 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090024807 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066061637 seconds)
  done (took 46.510165678 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106335488 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081604958 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062523771 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081266286 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076380032 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083486814 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064194888 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063910925 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083418826 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067177426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082256241 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063545352 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09210012 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087484741 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095432473 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068025199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083465929 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064789653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08219845 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065303823 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091755513 seconds)
  done (took 2.49317213 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074757851 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089278002 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073054445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094174899 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067427618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089173646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073733144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089722813 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093970161 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067559643 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093770898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071873639 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085163691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067641013 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085042592 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071609767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094410294 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068433976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089049185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072664028 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089045965 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07332773 seconds)
  done (took 2.6191585 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067597498 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066181143 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085969784 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06192756 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06538917 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079521279 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.0700383 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083460938 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071234843 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065267698 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084372017 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07392105 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086199414 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063489132 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067375237 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083329159 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134446715 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071681112 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066983391 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08876164 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062893302 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088105446 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061873868 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061438034 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084008716 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070027806 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084524469 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064532082 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065024767 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084265173 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066232261 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082618201 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068604924 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067246742 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085781307 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066828464 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066074863 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085841237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06211832 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083440706 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069640483 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06360847 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087096609 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069468756 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065097348 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085178317 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069335342 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08602719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063038768 seconds)
  done (took 4.506008702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083760615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128353445 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086669195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08879681 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101017942 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091912702 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070167551 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110380101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063503097 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085132521 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082727797 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105338706 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08694671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07242445 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093093403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068366394 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067521739 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085764918 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07086755 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085086373 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071088746 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092874242 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100161897 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081101972 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090149422 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066445596 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085680633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072206555 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099855811 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073029334 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091966786 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073491812 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101957017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07274655 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087650669 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069416566 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102754833 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08624985 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07010728 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064866135 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088642435 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072136263 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093579231 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084381552 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086836681 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070224245 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085465899 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062720062 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09734856 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06725469 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092794528 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.09932067 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069716446 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085086058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070873917 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.0992912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066333238 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083470748 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069683492 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098383825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064067477 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089050855 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08177077 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08821999 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073558455 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100139711 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072093438 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089932381 seconds)
  done (took 6.654211706 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07462836 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090957935 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081815045 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099558739 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091121351 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073586681 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091009358 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072997447 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090509554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076849265 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092073874 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113595092 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069375013 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096122609 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075262513 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094781543 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074404352 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094653105 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074550533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095133066 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092899484 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083408557 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094129128 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102093103 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105164893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089583696 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075166081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09320893 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08284092 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095228672 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105758354 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07486234 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09398216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101550108 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087132238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093422049 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067282634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093345295 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075089678 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093449093 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069864756 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102381616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074020087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089575505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073971815 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094129389 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102082132 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086293496 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097064947 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097507232 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075349532 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102142225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073758018 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09447323 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101914506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107069483 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102417994 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102555149 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07393912 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102365144 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101502334 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108756258 seconds)
  done (took 6.410530883 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085779222 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093435983 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095398428 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062555926 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063952277 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08940453 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064006047 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08187086 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074749421 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09320985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077605366 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089399977 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073292747 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09809403 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089870196 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073883547 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089529438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071007676 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094372633 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071146191 seconds)
  done (took 2.487799995 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075655579 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101461712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06693364 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071278981 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088283643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07072477 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087846535 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068476602 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085474564 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069655734 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095043119 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075996364 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085288707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072217794 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095032427 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072652685 seconds)
  done (took 2.141136237 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078987865 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094907317 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081342083 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085706052 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064881968 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.0821725 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066399333 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061477042 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081937316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080374649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08612652 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068079825 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084907953 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064605177 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062840955 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089453901 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062026352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084724735 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067811309 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10150051 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079720843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086143717 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068812599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069448674 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088750112 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073011562 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087949365 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065286701 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086190389 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06916793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087669805 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075813966 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08378975 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067057068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066115775 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085055659 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067892119 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086709088 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071547763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067632188 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085994416 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067170326 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087210994 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069005504 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082968304 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069070642 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06422573 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093616615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066621986 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087481749 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068661055 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088943527 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069226447 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07861537 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092014199 seconds)
  done (took 5.116837589 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08028669 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068646141 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081324322 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064257963 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087614657 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068055834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069013051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08807974 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068026563 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083091184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06932578 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089424264 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070277924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071052985 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089758708 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071675975 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083695205 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070317092 seconds)
  done (took 2.239819041 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072316848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06667078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09217126 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0664117 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084519789 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069055679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06232514 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084527838 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06539466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084398396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066813254 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068039198 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08449487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068686278 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084326107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067537981 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068316374 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084372906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067198754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081098924 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069357689 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064758876 seconds)
  done (took 2.490159693 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073076702 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092709887 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161206174 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107495416 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082342488 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099685057 seconds)
  done (took 1.484264345 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091318951 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099176551 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067575191 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106696018 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075005554 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087220368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069071614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087253398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077168851 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101188262 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068189748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096588978 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094608691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077807451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092475603 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073236462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087846737 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068360529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086686171 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105748616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069241434 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096664999 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069149423 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088433924 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071200931 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098005146 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078408315 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103487014 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089805875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079165381 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095720067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070742127 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099178978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103064768 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072286963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097988415 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070848627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108608263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075595612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0985127 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070901339 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09584559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098661361 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076154751 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098982456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07057051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095366247 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069471358 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090890249 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113957162 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07622811 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098364383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09551724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07939677 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098319263 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114341352 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083877371 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099041315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095667505 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084485208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097800042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074347485 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097339183 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101521042 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074136501 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097200923 seconds)
  done (took 6.667197713 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084358666 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105377323 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069101282 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101097949 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095826953 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069536767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087049719 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06946396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088013714 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070277549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131685796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070694954 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099256728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098844376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071353901 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090075565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070614364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098974104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069858782 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115449098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0902556 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078844059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098535441 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098266259 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083631839 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096499094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070345372 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090616053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070758432 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090361272 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075306398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091137058 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098190985 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070082055 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097984011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071598664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089344843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075029638 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089664865 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075934082 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097655352 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106652897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068723012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087763054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081059285 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088146005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067456709 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087710145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068765644 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087124017 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081507241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101016634 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100962321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096298907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069600933 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087352618 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068758998 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087316253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069194451 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092390874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077359848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087745423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112641209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069203576 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087823455 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078009057 seconds)
  done (took 6.54042856 seconds)
done (took 128.876668528 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201831941 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184654746 seconds)
  done (took 1.255159375 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069089751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095210382 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097898209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128674268 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08651714 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099842917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118078383 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078879436 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065842949 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086565315 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067488189 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087710819 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131723823 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066755011 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086108359 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068999696 seconds)
  done (took 2.311094962 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102982513 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194830111 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108549053 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065270394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098991074 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078227151 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085362082 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076991104 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093669958 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066329723 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076753384 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094651257 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065351184 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095647579 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074701981 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098044977 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065775205 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098291625 seconds)
  done (took 2.519443426 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104008501 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141336742 seconds)
  done (took 1.121902042 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198916352 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122005256 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202061185 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.413992402 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205347707 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276868664 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173527891 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171366128 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156845438 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169202366 seconds)
  done (took 2.962540563 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099030269 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169333659 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310683509 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136834176 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085764097 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115080987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138370649 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088463957 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101295492 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100476428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081079537 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09704368 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09739281 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095665887 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074016959 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096760591 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120516124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074896717 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096598051 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076822309 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118341444 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066759642 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074273545 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093953711 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076576055 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097384528 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065858333 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08550559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075696425 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095218711 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078635512 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113091054 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09733884 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130909305 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080972286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130233189 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097593726 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072734566 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094626432 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072045472 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097554143 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076575199 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103863916 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075425337 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085936252 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077635574 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085782182 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066809317 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098417282 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076744081 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098728988 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077691434 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129923565 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097836146 seconds)
  done (took 6.200597285 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745263987 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109823646 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093746697 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.809316098 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088345547 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105129933 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.716697263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116347075 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209829998 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769758691 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089379469 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097868347 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178725817 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232691822 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.879419586 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282256725 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.629578271 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103208661 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107086532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130898405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137301762 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174529717 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147819328 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431563033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074395079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09200394 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135806337 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073948766 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158529648 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083120223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092622671 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154766722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223382778 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153668815 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096096752 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069563827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09054999 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152361177 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236780918 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168558132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157781286 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067426904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0908803 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138483541 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130420566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067395106 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139206418 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172105607 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148171235 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073152959 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095378191 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140882823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137112413 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142130169 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10059172 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.260465077 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289336092 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090625264 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098069144 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103298545 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233899035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082949595 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197008232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138774366 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16568086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090907637 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728178115 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145901507 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091968338 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073656696 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118025158 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094832751 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137828831 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147610842 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.34697185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162377893 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072816739 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090196298 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204387048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082886554 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090921193 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139712413 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073936636 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120142222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163006263 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141470617 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147237718 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.204710843 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138506228 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159794508 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073936072 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122019595 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074129251 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188541442 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192264328 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13940589 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183826659 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159427688 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140789612 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146048781 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074561612 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169165909 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097477225 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100374578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137056377 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190536837 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122477507 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08155653 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093150132 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139479464 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125207515 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084471945 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158905347 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148459698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453921975 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146506432 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067033769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107862214 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138630216 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138708203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096636852 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208863057 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121151968 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145123245 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119448651 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08879176 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119151352 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139902667 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077068812 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12121595 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13503116 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098289591 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211610057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188259282 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076757226 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213999725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.139338104 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095625877 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149207018 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11863693 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145570681 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076163335 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157067249 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075423719 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753765976 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14294245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12006049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072773799 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172639545 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069065905 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103492002 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103225091 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068862277 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752202122 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084885536 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099977136 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08270187 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094542807 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120166104 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136172796 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072285654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1373485 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201332904 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095226683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096060133 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104272866 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138501555 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095924636 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082843132 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10434601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082678934 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121435932 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094336119 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082326866 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1671379 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140084418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.171249044 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567242078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070418072 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102979061 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178390598 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091471698 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261583667 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137228203 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.175235278 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139035441 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101618164 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28851897 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142771208 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172300049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085274398 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150045034 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089311554 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137011766 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141190266 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069209256 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096661769 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140256145 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143654341 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161738412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910674496 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091153944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202295873 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068566019 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148665364 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096841881 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075512143 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259514931 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069815317 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166455029 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142694491 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072743807 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10335019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691043096 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103815091 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138354406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073399297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193579139 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140768711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133997207 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.15743377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075769327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138106821 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187616073 seconds)
  done (took 40.130968098 seconds)
done (took 57.37897807 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259483354 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176389069 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242324337 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143385968 seconds)
  done (took 1.797585975 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142770879 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104192095 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116865352 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085742908 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105925999 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089094956 seconds)
  done (took 1.546311775 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.410890585 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274057235 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232328526 seconds)
  done (took 1.821325472 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259999599 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211771042 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453567411 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306757696 seconds)
  done (took 2.259288607 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175562277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115818026 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069289213 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109567134 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162563907 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259639637 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130225912 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192237948 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081607809 seconds)
  done (took 2.244680898 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.202921188 seconds)
done (took 10.77877588 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096721075 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.292024102 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.210316745 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078801811 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211188318 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.172907682 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105865043 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078158921 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075376718 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.262389354 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092275107 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099218576 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078411274 seconds)
    (14/309) benchmarking ("sort", Float64, false)...
    done (took 0.14966821 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085759654 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105577933 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.164521418 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.161406437 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.240059969 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216273889 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098624287 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.215032943 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.152243146 seconds)
    (24/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074947571 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092584473 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075032399 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117011869 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080951754 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074258679 seconds)
    (30/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.07754266 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097881735 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.177317625 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115011029 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.157777308 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214973073 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15662015 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.159795296 seconds)
    (38/309) benchmarking ("sort", Float32, false)...
    done (took 0.149446768 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.161438311 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1503473 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149093289 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094885611 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073506816 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.167103519 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093930989 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076429037 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06915458 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095047238 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067585641 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11454226 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157573641 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.118298561 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081798107 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.182452141 seconds)
    (55/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.120254953 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176509903 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.163139504 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098790808 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070275942 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094721053 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.175669802 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087951328 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095273157 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113089793 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090795508 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12036126 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.12715837 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075526381 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051513086 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123772341 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13754903 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088919986 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070385602 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106083477 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073960446 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08848517 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154096446 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165983766 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07588102 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156827678 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080592163 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.089860235 seconds)
    (83/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105114176 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088544234 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173587931 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075869 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 0.167343305 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073570544 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065000067 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089891741 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093013886 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116493739 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072255473 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095504612 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078683806 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11994213 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076618642 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120821639 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071204651 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193628388 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077278677 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099133732 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196409013 seconds)
    (104/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190149433 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.220763324 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115938519 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070330035 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07130694 seconds)
    (109/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090339648 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136701973 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096177357 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078390449 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167281287 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068120445 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.169768344 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055568062 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101882409 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053462595 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053515607 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17463561 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187083863 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094340568 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.182863963 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078623827 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.162175427 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099152849 seconds)
    (127/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207241094 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.140359565 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113107631 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.0794589 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117221484 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102299828 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097741326 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074483457 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074566367 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141246108 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050802585 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100010006 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097858147 seconds)
    (140/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062526154 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138577069 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165749074 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064500284 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075117869 seconds)
    (145/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130706806 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179695819 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116131657 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117267754 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055014639 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066839329 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090929636 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150778136 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098293471 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068053497 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0977509 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.140642095 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067478838 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.181703906 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086086409 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112500185 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096395626 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095324277 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072489931 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074783627 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071451063 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157130319 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052154435 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098977194 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157576875 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066805028 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073334151 seconds)
    (172/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053690171 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05131943 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.082587091 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096532938 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051224223 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089303435 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080743142 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050787137 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.0891109 seconds)
    (181/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062603815 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126338653 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177636331 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162109732 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099010844 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067459504 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068029504 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186985436 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07487565 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155610722 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103688582 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054870117 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068661539 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095002472 seconds)
    (195/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054319967 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077073474 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076942531 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053362771 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053628932 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069268757 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10418386 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090461113 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.388310664 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10507007 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192199109 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077430658 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065240899 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095333847 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084079098 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09344278 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070925877 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056666917 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080573681 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05372621 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055060786 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090507288 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069519685 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078023994 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098854201 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.078928693 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104428054 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055311858 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055219888 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092880399 seconds)
    (225/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074269198 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05515223 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089806492 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069280362 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193389216 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067857489 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167187432 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072808987 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116172011 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131971317 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076332496 seconds)
    (236/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083241073 seconds)
    (237/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074516703 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099468279 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066792259 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09961432 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068376271 seconds)
    (242/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062770948 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091151957 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053502199 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066802182 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095927954 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063666053 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164724824 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090973917 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067488799 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104534736 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055702177 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115161655 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121684695 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077561167 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054288372 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176811237 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053226756 seconds)
    (259/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05476182 seconds)
    (260/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197972287 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054149787 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173727993 seconds)
    (263/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064147981 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092313571 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067883633 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067735688 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141995223 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053342997 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067743597 seconds)
    (270/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080291088 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073903058 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053389954 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098364962 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100566825 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091597324 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05355109 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052911033 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091396669 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069657775 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052724415 seconds)
    (281/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099745932 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076261982 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112734359 seconds)
    (284/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212416441 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055491109 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053015475 seconds)
    (287/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125013736 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072922861 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.131369199 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075297663 seconds)
    (291/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054160462 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077035174 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066719632 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053663429 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089220868 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054897698 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075560277 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115796375 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053943177 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067684067 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097450051 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091663529 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105207859 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068381525 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096540274 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072976179 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053537962 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062075281 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077959697 seconds)
  done (took 33.574852672 seconds)
done (took 34.488633459 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080796661 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114369558 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076002349 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117531354 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083754006 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102675321 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075311812 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080031425 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106347611 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084382317 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104942496 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056482828 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100226746 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077314781 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100066908 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095000005 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103994037 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075056778 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075394383 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089937061 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07596587 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090167791 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069002695 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056439646 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102183013 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074476671 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074579026 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100743964 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067202386 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090601405 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070209958 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075029793 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090828532 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080268717 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096522392 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075710754 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076543814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101577372 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069389271 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090382899 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075951298 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067841298 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097884043 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075541121 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071954654 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095597615 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075844699 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.1044535 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094799854 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093249451 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076397832 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101660881 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079819765 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073658112 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094232575 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074955288 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094834593 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094885969 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098699537 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070968423 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075209659 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099359561 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073296812 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098001501 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075996347 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077627805 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101186744 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073919888 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100267001 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072905471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067266003 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098839768 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070678082 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067078925 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102735389 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078239591 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089558502 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073369526 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073903301 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097036282 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06755172 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092017444 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069669456 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073596055 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093155283 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056844391 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07109951 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096299063 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067499797 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075800954 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097982251 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074358396 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091458434 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079103785 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067925431 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096430303 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068366766 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06783557 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092641048 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0723048 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06690191 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09356504 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076374286 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091722125 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073803182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081764504 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091121052 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074703923 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08958144 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067541795 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082925923 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101666688 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069254097 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09354283 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067368797 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075676486 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.09055359 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067894041 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067985882 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091308952 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074106549 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067595368 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094292907 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075420446 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104472608 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067812649 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071457359 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094004951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067914923 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072833414 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091615179 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067621994 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091207614 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065818288 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070887231 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091342856 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07528977 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070525454 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099297581 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069999303 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098776203 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07317213 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074129421 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096358958 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06697771 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060775747 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094402957 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071325492 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070347567 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09144372 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069356077 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067643945 seconds)
done (took 13.481071933 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067070033 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169612022 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128784695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098785266 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114062261 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067875411 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103111727 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106588687 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094183639 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.130738458 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090022392 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110669609 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11813431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090416256 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068548335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071678477 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092930466 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090943292 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12936685 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088490704 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143064888 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090390171 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.123346942 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092938017 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115636592 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105803056 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0914562 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070868073 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069455652 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116459261 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109382946 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0698662 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066151662 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12165567 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117502878 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085207502 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08811845 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084516226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088360752 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066645337 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113566339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099681199 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104682038 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081438741 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095297393 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06864337 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089124875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085648783 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113129693 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080231683 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11220913 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134152418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069677991 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108457938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066803821 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113971101 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084275913 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094402874 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068624037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093687464 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068206646 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071768298 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115887773 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11775686 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072705471 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107923287 seconds)
  done (took 7.342082474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08441202 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115968971 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083834676 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10711245 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066754925 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067635144 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092464571 seconds)
  done (took 1.591901757 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067453079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087837282 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113369913 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093103404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112369699 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089830919 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102246374 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069656691 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110738497 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070264504 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113764137 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107535526 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094035939 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07673446 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093947225 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093848332 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093490488 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093001123 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071661846 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116611419 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072469007 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113987713 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071226111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069052593 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107340872 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069192881 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141645346 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074413938 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0930271 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072712981 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067537988 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144091338 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107211101 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079991164 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068458626 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108708978 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083867612 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090791167 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085843395 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098470152 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083972694 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069206046 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094209833 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068168648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073397345 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104917417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071049661 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093505629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072363424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089470679 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094759214 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083754938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093152768 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073572491 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070326768 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098876142 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079767625 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093620614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090066408 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070412321 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1104747 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085686773 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108418547 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086160475 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095901865 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084311846 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107786504 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073146518 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070892743 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096474088 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08609442 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090694665 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071096663 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080223499 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094807312 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093609058 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117117813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070669942 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103608313 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069965803 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069406748 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093407771 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093660693 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096766876 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069184431 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074040584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096694261 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067814287 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068268147 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097007473 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067996637 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09408325 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072372856 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069008618 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092355332 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084262027 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090691598 seconds)
  done (took 9.531856838 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069180759 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068435719 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091934958 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068259415 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068314236 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091809911 seconds)
  done (took 1.439612036 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097588809 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092559433 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08124374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094711394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105833248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105455089 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08287881 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106208622 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085300285 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102709319 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082048579 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105952162 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087971058 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095745417 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082564973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095710985 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082297082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099161971 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078888026 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096327139 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088528861 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09614756 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073152967 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083149832 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093748259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072876041 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099682448 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079984197 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101473675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08331445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095208571 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071466542 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094949231 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083599719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104852731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07240019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095492511 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072288369 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099569185 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071020038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106663044 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076514837 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079938768 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098763211 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108498488 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074961487 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073954658 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103679755 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.0848415 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099269093 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072349231 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09504254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070486981 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094372507 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072491189 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105950455 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071717144 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104832529 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073494047 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072402761 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093181336 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071462267 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105454966 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071398767 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10445431 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072554747 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094472049 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07422207 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096846747 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07261227 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071381059 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092431201 seconds)
  done (took 7.338533368 seconds)
done (took 28.214427303 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650733383 seconds)
  done (took 1.631890175 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.776115569 seconds)
  done (took 1.759750163 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.547978299 seconds)
  done (took 15.537114391 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.62944817 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.784356896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.830598701 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136949509 seconds)
  done (took 3.367608041 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885080121 seconds)
  done (took 1.897950072 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233562501 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223453127 seconds)
  done (took 1.450663546 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73276636 seconds)
  done (took 1.731949347 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.314665114 seconds)
  done (took 2.30600855 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322299267 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181124341 seconds)
  done (took 1.502430158 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523191848 seconds)
  done (took 1.521562489 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.928327 seconds)
  done (took 7.93310457 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227570138 seconds)
  done (took 1.241621189 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270499916 seconds)
  done (took 1.273154695 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.120371805 seconds)
  done (took 4.122609655 seconds)
done (took 48.267486659 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077703105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081563623 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104074824 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078174091 seconds)
  done (took 1.338843565 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077216183 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073218538 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10020151 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073126458 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101340428 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07320329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098519228 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077271608 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071606992 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097035192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072664634 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095381427 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075579454 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098042805 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070420897 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075726068 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099500923 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073226587 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099057928 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072829746 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071100279 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097476827 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0761296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095114834 seconds)
  done (took 3.024888212 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07770497 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073915374 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098235831 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071899966 seconds)
  done (took 1.329681307 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076530464 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115297897 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089428655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076656868 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115782469 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110329746 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069218432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068729089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094764924 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077405368 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091517192 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097752373 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111153153 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076969047 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102963163 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066332708 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069043971 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111115999 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077600738 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101151437 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070521291 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079594615 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091924012 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090878492 seconds)
  done (took 3.146746906 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07735127 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127279962 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079386481 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114259962 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091972255 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089678625 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075633467 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114763282 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123889784 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089683571 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069996577 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066538835 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096103838 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065972272 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075977002 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131803416 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135450458 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068244724 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121265506 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065776105 seconds)
  done (took 2.89822908 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07483304 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070337764 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088887692 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068724148 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076607248 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095939032 seconds)
  done (took 1.493940775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068032923 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068386328 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090290655 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066650218 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072009471 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090336646 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06626008 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068003063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090913226 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067368627 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066204058 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089703026 seconds)
  done (took 1.918357115 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.430059928 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068889649 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092749314 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066380941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071377609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090631794 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081271879 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068765392 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114629911 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066945205 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091244672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069155306 seconds)
  done (took 2.329571072 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264958124 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07821228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328882583 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171330632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14501799 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159815579 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109632686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144096257 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204983521 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143287502 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205470428 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230509138 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137679271 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17027029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116802209 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134327749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190325545 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228529081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107792696 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230306799 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212930749 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159337889 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184556945 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131758273 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137645134 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155137157 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074090151 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109021376 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237007123 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165517715 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20649635 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142283368 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100389757 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237196069 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232288516 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200900083 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166829022 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087209413 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159938921 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166540217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260986515 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117571239 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199159526 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137864097 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108902811 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177340323 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149992903 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150176474 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14126068 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118580453 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179024473 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246331918 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170558803 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115325752 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139133279 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143974327 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146553116 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107467162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276560069 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199658276 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163855284 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099218785 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102029201 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217630633 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162930303 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147093367 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157977115 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122722218 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172273768 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219200338 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150858985 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177270062 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187439209 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091819193 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150961401 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199146006 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16011816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233806025 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158695385 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07551906 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153379714 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129945636 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107898571 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14732121 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103650729 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213514409 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128413708 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143275414 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144442358 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139905755 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139708311 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19922797 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20857581 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134400955 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069387914 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133127445 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152649837 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179543409 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117277714 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13874817 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152009529 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082492903 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195729105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077327476 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154689129 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104714271 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154959057 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166893974 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077811942 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182420523 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106749464 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132796048 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166687196 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225652184 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117301091 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082948448 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228043707 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155609163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133191049 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179414598 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220591776 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104981349 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131081625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20699601 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247418652 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092399587 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226120116 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135041371 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084542476 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114336815 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157058706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139316131 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150474508 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108067184 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155889209 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229318944 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077665255 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124998471 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170673741 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083015485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109467073 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143138675 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131758743 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095725802 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127287454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133144056 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169169547 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179307306 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109330516 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179884285 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102593017 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234227269 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118291792 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131303866 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104719734 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095569747 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168607731 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22399514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082847936 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233004246 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159130591 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136579308 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153494811 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08651905 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201975984 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082246301 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072804852 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204627403 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14301665 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141460059 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191445556 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135926153 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1602282 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157847018 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1682443 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192496002 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167196234 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136924428 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090041469 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142277625 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154138549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100362797 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121512848 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084134213 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133243517 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123661878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083788316 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20029173 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16023489 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130381683 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11753114 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127073574 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211925078 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080590776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164565741 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152516681 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12596662 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21878124 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193346216 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169743009 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130697122 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206549971 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074028455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074341859 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116795951 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158010136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113763675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085921954 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174811454 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185603725 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161231421 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17175089 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142214069 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15393553 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219711549 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073644323 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147290461 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18339093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157947641 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.160294619 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117570061 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103744387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207773623 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113212617 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280742488 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147387182 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157020432 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187245818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134889665 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082163298 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136449655 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199001004 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137214493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18589448 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131282567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118791717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114335296 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111612453 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135472971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160850363 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153527131 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195828378 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146785941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165837448 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07983212 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148384814 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18006935 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155041389 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067405109 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151440941 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227086645 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12470674 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155798558 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191624298 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108513089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.130321854 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241373405 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207357893 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113626423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11559194 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154327387 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187513667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151424851 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175923776 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143739559 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169349269 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143018392 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088118133 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118088796 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130104315 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137363776 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099416942 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143923807 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149396008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125207337 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164400754 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14326566 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143163372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151425578 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129148145 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094623077 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129082753 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241717937 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153892954 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240437383 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105335904 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210902873 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233416175 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078647583 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109045335 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08324161 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173365651 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115243565 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166283241 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.129867696 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136145002 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159592427 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177313703 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127476753 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071178819 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143166912 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168469398 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142967302 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129559109 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137822261 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229082159 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107210046 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109514518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157894402 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108811292 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133610307 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241702605 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089840828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101815038 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105088786 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084007966 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162842605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220261044 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111882167 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133210997 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149416018 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153321651 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163065355 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133195844 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131172226 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14599661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184694598 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188682035 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094215115 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144532526 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162289715 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220751542 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13807563 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12580148 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210961048 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219137122 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.228515668 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092936499 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146717004 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146953735 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140437481 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201807599 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086059747 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23254249 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112552918 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171687151 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136369173 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122997819 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164351626 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129123146 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092542441 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212983616 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153509628 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103963808 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111001433 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151558547 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155767243 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140201226 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077885019 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199799516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075188126 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198064372 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208389001 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112498435 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136246793 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100864209 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112372082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140664551 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134913627 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090225151 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147973483 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233441301 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094452445 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213245139 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175226069 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145397844 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199721067 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131900845 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66772028 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080966732 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216953849 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153984185 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24436408 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102104573 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178268648 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115702526 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156053626 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207550626 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137427237 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207441192 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16753539 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155477532 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082178844 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134278454 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142711301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122513067 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138741326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147500515 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149402604 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131189649 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15345868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160645309 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11151961 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099712383 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223972138 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150235599 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1781594 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175355329 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116577643 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153040616 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202051013 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083970727 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155592308 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220603439 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14031296 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129556935 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084933829 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138298141 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239260616 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076159945 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225679822 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156191381 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140629917 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146227771 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15122459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167181148 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139802779 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185299947 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100384344 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14353045 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14773964 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115046294 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107993085 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11099609 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144361496 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.132043523 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134085948 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.126604013 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214520473 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073916824 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128988687 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134654397 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180476445 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246587492 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120686589 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087114429 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152818685 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146819379 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149035434 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158140751 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111935697 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112585922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085695142 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.142798191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116297324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147321008 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135703297 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142902049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233534687 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087214631 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255118786 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127307748 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137772143 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07353243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1097485 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100638558 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130124994 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141662734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131406659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211693218 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128217455 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121607487 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123136587 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076079195 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085865816 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188791105 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142799876 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154027856 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102916098 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093861646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142481286 seconds)
  done (took 73.171198905 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131486371 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103689423 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117487623 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172636625 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145703525 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237886132 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180189241 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221972803 seconds)
  done (took 2.412978968 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069218011 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116400887 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102919085 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119425835 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088969677 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068683074 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300471367 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114683492 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066097434 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115629937 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119728919 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091163697 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.476374259 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067317436 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09782293 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085057446 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067449141 seconds)
  done (took 3.257958855 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.432570874 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.633105467 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.459133364 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075987457 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.940241188 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105702343 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.384709855 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16144831 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090110724 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430201682 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725411836 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.146965577 seconds)
  done (took 17.686573562 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074420006 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069044218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110516343 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085817858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101966211 seconds)
  done (took 1.54314937 seconds)
done (took 116.551588849 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078918466 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.349539742 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055312434 seconds)
  done (took 1.539497832 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083858732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086708746 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114565416 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086254736 seconds)
  done (took 1.480347721 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073970841 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075740174 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110938091 seconds)
  done (took 1.368294187 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.286317501 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169759073 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090570841 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082063821 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078122588 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104052155 seconds)
  done (took 1.373449065 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072324596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075024056 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099484211 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077352463 seconds)
  done (took 1.426698648 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075803163 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051840788 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055121875 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082531218 seconds)
  done (took 1.373601246 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088975463 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105576473 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081435041 seconds)
  done (took 1.381131138 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10685166 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112516963 seconds)
  done (took 1.329214351 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080824912 seconds)
  done (took 1.18502733 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094167972 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.13939076 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158256456 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14210789 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171620334 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.140976685 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117227072 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090086171 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107703037 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119398898 seconds)
  done (took 2.389933703 seconds)
done (took 16.571657184 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077593182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387913741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360093807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116255426 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668379529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355781693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00151641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118535442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120203789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094256119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082932378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675280682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.004903689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344863904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992039307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323392535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674209516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068306369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092936186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067816685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961229353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093594434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06743052 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068239009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67374329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370356158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094137635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315535133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067901798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09659412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354652047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094191605 seconds)
  done (took 15.983795283 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07099518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14413717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073576819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083073164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096501463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068913381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097782791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06902296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152600586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06766606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110356451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06726951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097667456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068559603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086344888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094052118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068226644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068663097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094352591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068824436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112731073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068366505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068124697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094863472 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067463318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106198041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068472611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067971178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094462657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070104441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09699123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068657131 seconds)
  done (took 3.841771037 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114810564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15269874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073718876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129113465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112621405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096663087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169550419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093190018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155316403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067984522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110548989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068170742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127111491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068373643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113664236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068490397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069023372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094703595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067915932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094737601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08700462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093474082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068729481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068525206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094529945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081095142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094333647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068548256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068222893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096372187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071491986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094052074 seconds)
  done (took 4.152793746 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071806991 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0743819 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109336151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083356708 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096051206 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071735416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072765212 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096159454 seconds)
  done (took 1.788509892 seconds)
done (took 26.870541117 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077599112 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06919768 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099242382 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080414168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099379517 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078219784 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067105756 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100748199 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076456026 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071908792 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102298294 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067678848 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097591704 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06748174 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074548934 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094079174 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078774509 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09809974 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078793945 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079070564 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096718556 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075939243 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101081198 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078714114 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105460394 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079557547 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082345271 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099753764 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069273764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096468551 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076451551 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083109239 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096271126 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079203097 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09465994 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068255919 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067648536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094149796 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079590742 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100276597 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07063095 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099942167 seconds)
  done (took 4.662955362 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087698713 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09065376 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112479168 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065252548 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097615429 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065188156 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114906775 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063405259 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059543629 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115315021 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055952963 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058952346 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089652266 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054826226 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059083045 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05626341 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088091101 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056489885 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05861479 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086008131 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05788117 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053926439 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087061921 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062862011 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056510158 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087630644 seconds)
  done (took 3.061873953 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074999345 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08387468 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113913974 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127366981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132889019 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077631161 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105229796 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08728303 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11344003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067392614 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07076746 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123154304 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087118383 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10082392 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067672684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11413156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0820139 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069163493 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100550149 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089686584 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111284796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077382923 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119551576 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080649724 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067190483 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097591456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071067253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108053404 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073148353 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076260034 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099316414 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072059168 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097719927 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080399221 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074592222 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.10035936 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09246139 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108518616 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080359089 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0705019 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102117443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069767061 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115963423 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113955657 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098077161 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077733055 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077982654 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106834042 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069827164 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116710943 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079568843 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069293931 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.101589765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069582226 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098035003 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084078443 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071915395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100561125 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078820101 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101742791 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082060385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073871019 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113398194 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069302441 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105422096 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069386222 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070212133 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.097142556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094315672 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097946365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.123680062 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098705188 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070537327 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078682901 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105891982 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075521546 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098674791 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085308457 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079811948 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102120045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078393644 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10172999 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073285602 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090243523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.100570683 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072059953 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070890478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10500407 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072784945 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099681942 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083975224 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069796654 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102142132 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088290085 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097742455 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071461766 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076586576 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102271531 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068762497 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110786873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074956553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09887389 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079914783 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069273514 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101280585 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078739379 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101700923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068131431 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0720228 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101108786 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068552449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068885046 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098048822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069324623 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10400669 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074459594 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071708372 seconds)
  done (took 11.5065195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194370396 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.190251913 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071701189 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179358252 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07616229 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107186777 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180131393 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095786692 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096166799 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068604324 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068530049 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129951557 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124234934 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106791444 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106217358 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067952806 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114068305 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106279343 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.185912399 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.179663551 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118262747 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078629241 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071242818 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097632753 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06983013 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077016748 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112544064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076428222 seconds)
  done (took 4.290481395 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080189381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128581297 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073556137 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088478225 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118145951 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068156219 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100647939 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069269239 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107540579 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079553147 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095357501 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074212654 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075100302 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10557569 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068810979 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105780312 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077535209 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06956657 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099242744 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072725095 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10632079 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082271791 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074159627 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.098510526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076449174 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098110207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066589416 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116586486 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06957993 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120682423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068119878 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075664889 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109614401 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068080803 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094660688 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071277121 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070441645 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098448505 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069736867 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066767097 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093678578 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057541299 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066597619 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106889765 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074447829 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087953437 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073945415 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072662188 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099655429 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065461235 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098392832 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070445413 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070264204 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103752056 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07291357 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072046162 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099535849 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065460087 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102732656 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071403009 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064172382 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094086853 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072795754 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0667065 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10316657 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072130464 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094032659 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070675802 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073043615 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101243185 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070800361 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070060448 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092736402 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06966823 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100241051 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072418302 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072022126 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094171361 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067397217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068082617 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082868953 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067941241 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053771371 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098113273 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066486145 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066321575 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098507757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073285793 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108787492 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068990039 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10305301 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071149284 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068603375 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101909337 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066455148 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073194608 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11479108 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114391246 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070354366 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06758627 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114329585 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074764964 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069041703 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085966139 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074987221 seconds)
  done (took 9.875213746 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095112718 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092457946 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097498263 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082694341 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124464323 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092808206 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103200795 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074014096 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069736133 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112927526 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067876649 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104509112 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068103897 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076115037 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12421898 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075616166 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09712535 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076245525 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072150987 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134869532 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08218097 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109159603 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080899806 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095503764 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073045561 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079125267 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123200348 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.0788645 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105604089 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085036377 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.07973975 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123303344 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085870587 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099261932 seconds)
  done (took 4.291635615 seconds)
done (took 38.802063891 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206401193 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408939096 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194932434 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.080217652 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245787427 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205740164 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209157771 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194148684 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.369630962 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19776174 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461130195 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.828060266 seconds)
done (took 58.743057268 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.192767045 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333884606 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463417161 seconds)
  done (took 3.936793697 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.541342791 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.094686813 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453070347 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195228605 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197558061 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49771936 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.799926432 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.036225731 seconds)
  done (took 27.41429073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.202095338 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.559385438 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.517052677 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.51569501 seconds)
  done (took 17.93774463 seconds)
done (took 59.164129988 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.225980538 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.223470756 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.199664086 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181755812 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304810328 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215767235 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.548835151 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.417216324 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208700175 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.18147317 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.202945264 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204167226 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.196996157 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.496101237 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20723127 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20057325 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.205514623 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.692412184 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.574019193 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205071929 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210732189 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.271698466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.204846515 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20447762 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.269482186 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.195331114 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197248689 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209005334 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.404174893 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200768609 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286803182 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.810949648 seconds)
  done (took 191.499114648 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196227403 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.2797158 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.371381617 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.249442385 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.837414258 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39478336 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333104656 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.891090865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.20959989 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208048602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.517296165 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195708572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.583552505 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177892041 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205837481 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.30387619 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.379437606 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.550658687 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211792395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467010976 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.195902761 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.524191434 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.464785783 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.441820881 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.197987732 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.242796775 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230886817 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.225027845 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.389565122 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.310583635 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217706858 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.213216717 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.767955266 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059840132 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201512924 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.235268542 seconds)
  done (took 150.625026562 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.456010697 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196928665 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196111031 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197006037 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225763822 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197491167 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.724496429 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.713290341 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693529164 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.293993553 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.258691221 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.429434613 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198804853 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288615056 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208417038 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197413179 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211763637 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.223905456 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20212743 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199179129 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.725606532 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212993656 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.411870069 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207335357 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197719236 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226811946 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590577124 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197383912 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227589981 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.513626193 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240981561 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197959595 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.489801642 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.622074979 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201561897 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197516112 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305295006 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200274766 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227636376 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198716409 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466094684 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198600385 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199665476 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202108218 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.772515543 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201349639 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.726622571 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202363318 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.07773322 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199272445 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198857097 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.045165944 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.703148024 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.201957964 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199184011 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201894899 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199772685 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199190832 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.22922196 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.907341074 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298564269 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201932741 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202480916 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229039935 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200438999 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.703503207 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203063593 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.722938762 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257929742 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305586495 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728155408 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203130744 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291104156 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317629473 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200157489 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199815507 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200521747 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199715067 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305407188 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199471232 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59241205 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205516659 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.201805824 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.258948723 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293050471 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200579734 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.492210661 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204690402 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200920193 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898189213 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291803001 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.200700688 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200708664 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200131157 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200574078 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20018394 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.59176432 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71637327 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.396680465 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205284815 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.79664845 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204356496 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.603550948 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710686192 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.822866945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206142191 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307953048 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205387946 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.202816689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201827343 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229709631 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.201890772 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261107186 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201448312 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598510725 seconds)
  done (took 346.410547662 seconds)
done (took 691.131900567 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.852488216 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.836200788 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.944467901 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.831634996 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812087776 seconds)
  done (took 10.424046355 seconds)
done (took 11.570545579 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378780776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378575271 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259452979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380073622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230126858 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.395447989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359256384 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.224365018 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30280902 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275619546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299518199 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249250665 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228182786 seconds)
  done (took 18.108786709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504442304 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508295986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266489143 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50456909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242681572 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499148391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398800541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404403774 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390181632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21935949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217734782 seconds)
  done (took 16.305090636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509547829 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.500337503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271057393 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50676287 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244626586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511007518 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394647011 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.402457736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389231421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219441641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217752336 seconds)
  done (took 16.315332117 seconds)
done (took 51.877557616 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214412475 seconds)
  done (took 2.362748938 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245916724 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407936211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231543768 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218672833 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215317417 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214308038 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217178233 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212893983 seconds)
  done (took 11.114261892 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209487172 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213590387 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210479901 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211442799 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213020119 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21141009 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213040749 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210548718 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212989031 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210130935 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210967027 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214420052 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212644131 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213175707 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210726028 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213490818 seconds)
  done (took 20.541644846 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212409966 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211234977 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211097972 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211496741 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212023772 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211766682 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212696932 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211370753 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211954837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21200529 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212591869 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212151207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21168774 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210995451 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211539185 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213229996 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212258028 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211411364 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216204053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212604482 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213037266 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212008559 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212571894 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21277372 seconds)
  done (took 30.246458719 seconds)
done (took 65.413684107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.264074517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.863793528 seconds)
  done (took 9.27894287 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214752234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21427943 seconds)
  done (took 3.58300231 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21545508 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214618227 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214829245 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21687549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217810624 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216282288 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215749004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214516629 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215092561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214803321 seconds)
  done (took 13.308208458 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.215383295 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215242957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.213351439 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214886441 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216022849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213540211 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215058722 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215861081 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215578381 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212933284 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215911955 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214404069 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216306038 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214602925 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.216149352 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21396205 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213431133 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21379411 seconds)
  done (took 23.019058523 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216288693 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216894615 seconds)
  done (took 3.58574063 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212925012 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213544316 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214393991 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213899898 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214042188 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214171412 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213859264 seconds)
  done (took 9.649869948 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216869263 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389699281 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.47441435 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.784100099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217814983 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22075753 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.075871554 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220352473 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222345173 seconds)
  done (took 13.975961014 seconds)
done (took 77.550828992 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.192067679 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208967305 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.057587116 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217841878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.245645795 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.508537801 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.232673601 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334804903 seconds)
done (took 37.151406985 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.223278631 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.930671556 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.937768012 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.214868094 seconds)
  done (took 11.238470634 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205072651 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.106023432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.198529711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.224013549 seconds)
  done (took 17.891394842 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.812184198 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543524701 seconds)
  done (took 4.51114294 seconds)
done (took 41.019010069 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218763442 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219276502 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218842642 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.21873255 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218884692 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218277008 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.216302898 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21659098 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220270484 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219401714 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.21953925 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219951966 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219833174 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217907459 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21740694 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217699275 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219782366 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220410015 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217696868 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217235193 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21857692 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220650973 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218686809 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218167478 seconds)
  done (took 30.405201106 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221647679 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219846094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223188695 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221276122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218064714 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220940196 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22014585 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218672067 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22055293 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220277817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217982645 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218195939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220319578 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21865226 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220704208 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219097693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221218738 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218523091 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220776623 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219980857 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222202379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2191884 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219403767 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221113179 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.219251875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218944985 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22236789 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220314435 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22185345 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21966416 seconds)
  done (took 37.761612073 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22676559 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228780695 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222496072 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223290574 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22263681 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22217422 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222259698 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223803373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222568063 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222213942 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.2226891 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223772858 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.223228421 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223520586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222598407 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223324361 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222716345 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223451802 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222828556 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222910625 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222689667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222850031 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222815113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222215929 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222963717 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223336794 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223425691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223204034 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223237402 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222864613 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223491795 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22378034 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222856372 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222681952 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223116153 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223046716 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228432419 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230738153 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223615741 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222905958 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.223024469 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223791776 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223618817 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224551945 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224463055 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223454829 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224501681 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223090915 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223780192 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224208957 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224154905 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224436699 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223591296 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224209827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2246153 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223905289 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223996441 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223891406 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224672348 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224779054 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225870785 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224802259 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224793884 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224785569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225789943 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224175684 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225211731 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225143297 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225360899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225574148 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225478758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228748151 seconds)
  done (took 89.289724442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226010726 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222962807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223964622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222671298 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222777275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225163899 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223273596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225932174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22270363 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225493998 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225505161 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224035665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224033732 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226048895 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226617636 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223228648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225524318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224198982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225833437 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227212816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22682818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223844439 seconds)
  done (took 28.10719756 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226152945 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225758545 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224019119 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22619606 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224669124 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227334355 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227006879 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226356921 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226281146 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223947784 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224659616 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226984621 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223877518 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224464402 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22456528 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224777618 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226757377 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225729062 seconds)
  done (took 23.222558632 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22509103 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22445631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227885625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224484733 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224735706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227465523 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224937619 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227932202 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227572543 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22534585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227647313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22838761 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228214693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225206811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228026233 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22510686 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228351731 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225155975 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228481158 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226436032 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225138511 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228361722 seconds)
  done (took 28.148793874 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228398297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229054776 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225981376 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225414969 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226141704 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228356193 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228599575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225768415 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22845765 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228248219 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225984556 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228656461 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225513002 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227693875 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226434858 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226764794 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229775946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228052979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22890979 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227476368 seconds)
  done (took 25.714365579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23060067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23212792 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230601356 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231606068 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231403647 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231292332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231162807 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231756479 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230621244 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230821522 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231372874 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232496236 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232012643 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231826558 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231545627 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230970281 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232129799 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231119653 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231526765 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231742961 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231873102 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232356799 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231775236 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232021103 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231185199 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23256868 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232065849 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232349545 seconds)
  done (took 35.652334691 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230730744 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230700971 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228568252 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229553555 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229364945 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229294574 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229602899 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22868522 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230937554 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228473932 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.23173572 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230678545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231477568 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23151783 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231693894 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23223528 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232960188 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231172585 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231875917 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230207605 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232523249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232951707 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232307739 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229750761 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229425428 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231555745 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229641438 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229596653 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232441706 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22977685 seconds)
  done (took 38.090435845 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249983136 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250894594 seconds)
  done (took 3.66845564 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.2290785 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232254091 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232599006 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229976548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230681456 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232003517 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232212601 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230728267 seconds)
  done (took 11.018159178 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232335562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232897863 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232368882 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233609031 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234394036 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234596487 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241990738 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.250427323 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234955663 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234130763 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23844096 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241207112 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238479113 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234891753 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234345354 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23615425 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234749871 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234374185 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235525726 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234718238 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235248553 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237781275 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236563826 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232601831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235217941 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248573391 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241243709 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234523218 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23689565 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24136071 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235110629 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231484086 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235521768 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235109516 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234708985 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235743816 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245995153 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251028737 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244212949 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23648249 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235893962 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233146296 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237175073 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238491768 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237878921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236557936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235604887 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233413023 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235104047 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237813124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240371245 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234818812 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232985591 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243144492 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237615204 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244513391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.252841473 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23769719 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.243793689 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24866877 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252267273 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243977535 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238516166 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237808143 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24600665 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.259646134 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246470923 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25078656 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234112644 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237263822 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247158603 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251482108 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24651944 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23819412 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237472193 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.237254661 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237564352 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237966295 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247236911 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258377719 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238018166 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238132184 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24709856 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258694603 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236590235 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.240052857 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240253249 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239410522 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238079446 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250268942 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.255397912 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238062513 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238439885 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237941231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241987987 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240035668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.236698355 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239099328 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.235775956 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239472421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23963952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242690578 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.248058545 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240412086 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239175946 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248614044 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.239864044 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238472409 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250306032 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240032822 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240212965 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240007647 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247678923 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23649995 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242255733 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247118163 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239299571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242360338 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241137927 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.240261434 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249391612 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266509574 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239574752 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239757577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245199688 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.250804405 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240440412 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245112628 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240045159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237841272 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237872653 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242028544 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241020698 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.241689836 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241417538 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24245653 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239032136 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241199188 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.241378823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241432318 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243312176 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.24279661 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242549829 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24472664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241930832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243493385 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249189004 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241404112 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242053482 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243006205 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238374756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241218712 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.243085265 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242416263 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24236713 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241973694 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240275954 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242397007 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241779336 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.242216216 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241282667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2415512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245038298 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242273631 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248179574 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.240648447 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240210314 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242545873 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.242952746 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242638065 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242148696 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.240638764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.2455054 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.249584168 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24276541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242990612 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247238247 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244473188 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24316107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242281636 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24528736 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250462207 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243473437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253648149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243915961 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243295381 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243849773 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244117155 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243702305 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244717269 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.245611268 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25070724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259207349 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252340571 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244402335 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24696772 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.244435643 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.24690306 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250629235 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244758407 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245051156 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245072314 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243118043 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244110077 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246692751 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.244298401 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243587631 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244192731 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.243611561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.244863462 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243628376 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.2452737 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24659353 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242626489 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24456634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244951292 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.2430708 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242044199 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243128282 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.243289915 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245286944 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.244760971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255790684 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242677034 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246137058 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246631303 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245272422 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244132962 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245193012 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247987646 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246011537 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25353597 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262360621 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247023686 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25406117 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261507732 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245405525 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249152253 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24660311 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.242742934 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247846012 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.253712788 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245953338 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249912447 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249011358 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247614942 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246556731 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255998265 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244464856 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24577274 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247795799 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249997693 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.244589103 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248200479 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249045823 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.246898852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249545062 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247594264 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24702143 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250224706 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248262299 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247730978 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246873642 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249324341 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255473782 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254314294 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249502973 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251219491 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248229063 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251379586 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248054879 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248398972 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247572922 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262997653 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256739161 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256793742 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25118726 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247956525 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255913129 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.249497404 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252700643 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247260128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249028939 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248087846 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246735032 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245943652 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249559932 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248709888 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249510235 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249667273 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251949646 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.249698422 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247442588 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248550086 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248907748 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.24887357 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.248709542 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250086853 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252504321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251473091 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248904716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248934795 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257977109 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265859607 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.250630876 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249437835 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.2494637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248959418 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.251037793 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250491416 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252533745 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257949614 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251967638 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.259998517 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250838869 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261133814 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250552801 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252962386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.258229572 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24744851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.249089401 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251434841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249971534 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259969287 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267753008 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250395516 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255307452 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250937914 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251033087 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250587911 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250999863 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251556894 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251078205 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261632925 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26847233 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.25532112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252655209 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24876788 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.252212401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251634602 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250822567 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258095205 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25146785 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.25285936 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25140561 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.252423941 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251566285 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25215768 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25290218 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249679417 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251993845 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260803865 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269712115 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25686728 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252704339 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26460871 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253268168 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260967292 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269634214 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253791512 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252821869 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252632212 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256001527 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251896694 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.254439037 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253944969 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253841698 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255756413 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252820468 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.256264564 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253823636 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253483535 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25291211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261789715 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277636608 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254088528 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257723784 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250507605 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25471862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257920275 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.254222499 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.251960244 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255037254 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262315753 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261404104 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.254102944 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254128862 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25544498 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255099809 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253826238 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254280651 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.254572965 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255342146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257137715 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253976209 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260090348 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.255008818 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255167882 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256874032 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255390189 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.266797483 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.255767812 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.256197953 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255653139 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254459029 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254619279 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255068371 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256302117 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256566784 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255423393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25616353 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26110702 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261651481 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258512653 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.254367961 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.257280793 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25609868 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257831367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256389576 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255756377 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25673525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25611279 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255781703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258985284 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254525617 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256110595 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257032575 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257358079 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259078074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.26285725 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256300797 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253249819 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.256437082 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256908733 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.25578504 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256601924 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269136555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260950396 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266522693 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264064755 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261265435 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.257455825 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259710712 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264222043 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.255437167 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257842247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257987353 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259048057 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257114689 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259772121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258047566 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.267163534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.257363342 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257055852 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26832826 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275071835 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25829264 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258142063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261673365 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257890863 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255230436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.258629215 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257209559 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267423219 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277024944 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258441149 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26071201 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.25668712 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258981313 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262315909 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259183419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259989109 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256474488 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.259212777 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259345311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25854934 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2563199 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.258789901 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258852256 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261095183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26530926 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256504786 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262208951 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259851659 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.260200949 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260155615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25971265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257267646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257074261 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258994233 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260225382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260139282 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262727381 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259622041 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.260194393 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260895856 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26053933 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263282811 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269453953 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267912491 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258561879 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260806484 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261301499 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263880034 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260233094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260641802 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260601854 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262302754 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26083038 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261534225 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260654071 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263634159 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279045237 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277520601 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261130953 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261181489 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266886826 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260730954 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257988415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260911154 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.264518985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264170402 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26776638 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261903734 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270051854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277332565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261926324 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264470332 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264952088 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268642568 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264836512 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261992911 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262464581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266711033 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.280821475 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261522718 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272985397 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293688998 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279134522 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262906127 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262654914 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26126746 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262334326 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264965754 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.263247291 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.262998147 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262317182 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262564262 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263415461 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268317213 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263599252 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261951494 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262516836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26224049 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265157375 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259628815 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263510011 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262917985 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263399593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262888355 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264188008 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263396348 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278170963 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.274837894 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263693846 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263713292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260396343 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268468006 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265935313 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273690914 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.270881711 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26414722 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264539648 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265407979 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264870682 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262040279 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.264050571 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264595874 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263066324 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261592465 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.279629908 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272496855 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271216951 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265119202 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264585776 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.264594746 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266235786 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265082782 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265304754 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267088038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265060931 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26844788 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264908529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265876968 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26787751 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274066366 seconds)
  done (took 747.325201295 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262271433 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263060131 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262308366 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263196132 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262724212 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262510312 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262590483 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261933673 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262659902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26308889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262344943 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262466751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262508527 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263160899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26349176 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263262423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263222727 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26381702 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263143642 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263392164 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262559232 seconds)
  done (took 27.720784878 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266114485 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263021217 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263285677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266087324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263214935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266167895 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263753934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266759961 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266239195 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263789058 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266434586 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266472271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263828645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.264076994 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263808641 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266300599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267590666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263837395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267029276 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264374747 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267114168 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264647157 seconds)
  done (took 29.035675815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267468681 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267545123 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265745492 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.264386782 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267648867 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.264484921 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268653387 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267541978 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268573477 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271071122 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.265682963 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.269770818 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274441901 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272649196 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272233458 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268579035 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412227411 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269456881 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.268880854 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269176083 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265284185 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275387705 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.26602567 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.266029986 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.266809748 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269204688 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.269337411 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.269324901 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268864627 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.269714815 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.272501662 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.268375106 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269347831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271552666 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.268970727 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270164256 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273429521 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269775128 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266465663 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.269268482 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279591 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.289271687 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270728291 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277430888 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.269530081 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269722859 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272316172 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277266569 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.267192155 seconds)
  done (took 63.579214416 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.269990655 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270307663 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267291983 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270259313 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268983735 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.270412595 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270767199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270509403 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267868798 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267218388 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270634461 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268180139 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268101165 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.27103833 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271563432 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267764981 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268041713 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26772612 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.267451184 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268555072 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.268496739 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.270955943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.271097978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268518131 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270881362 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268446849 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26833904 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.270873828 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268567516 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.268463476 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272152306 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27120854 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.271707736 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.26973823 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268873687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.271789583 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.271747788 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.268807117 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271528233 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.269407 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.271822527 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272953317 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.272186456 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.272491384 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269993316 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270212379 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270260235 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.269291805 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270713169 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.272547187 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.272522284 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.269202821 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.272562928 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271406778 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27233643 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273642637 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271130855 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271641313 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.272418244 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27230934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.27035985 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273469664 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.271064286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.273066435 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.272775516 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271449025 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.270460842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272237227 seconds)
  done (took 87.597652335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272776226 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273947802 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273436497 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273933745 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273594687 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273909838 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274002723 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273427575 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275101544 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275451674 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274743098 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274059316 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274356719 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273981205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274237622 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274785877 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274314598 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274832481 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27475921 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2737397 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.273457427 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273909028 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274622891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274906643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273861848 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274433703 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274719063 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274841719 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275488379 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275404631 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274677251 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275195098 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275798756 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275150061 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276288801 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275714783 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275013455 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275572805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.27523928 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275622337 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275766102 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276174418 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275473054 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276102964 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275650561 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275368953 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275956402 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277087943 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275112574 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275457673 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.27615382 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275583795 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275942962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275898264 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276450539 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.275771712 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276057818 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275595109 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276117298 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276733672 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276164231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277552926 seconds)
  done (took 80.265164754 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276856923 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276348135 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.273817104 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.274033172 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275754019 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27447669 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276192857 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276724901 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277170845 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.277161533 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276560316 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273267963 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274857667 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276970855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275016307 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273928998 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274524251 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274045763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277969788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27575638 seconds)
  done (took 26.723054423 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275099015 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277917161 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.274798406 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275377455 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.277303731 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275664467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277879806 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276883098 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275599704 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277566499 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278434135 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278951504 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276197303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275905606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278329373 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.276209129 seconds)
  done (took 21.640576288 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274609831 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27910407 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.278854504 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278384227 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.276024856 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276255893 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.279165681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276447312 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276353229 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278402736 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278650021 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278809541 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279248302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279547671 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.276565141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279717067 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277001605 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276450602 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279584795 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.279926781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277368754 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276744803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.280356251 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.279782193 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.278323449 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278378521 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277576601 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278060644 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278443779 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280560838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.277380653 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.27744129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278127472 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277961566 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.280498881 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277591812 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280853735 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.280473651 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280483766 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281505893 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280824929 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.278268538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280617911 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.28090007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278857578 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281413623 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279067997 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278663477 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278224621 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.278652955 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281466856 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282156312 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280053444 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28073594 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281457293 seconds)
  done (took 71.553016248 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281290202 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280660916 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278539035 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281211131 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280944732 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279124921 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281519501 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279287829 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279043843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281594878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279418863 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281441574 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279601288 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282202418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280208237 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281727091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278261075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279369614 seconds)
  done (took 24.260665266 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279931054 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28006168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282308348 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278890462 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.279942218 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282194566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280452129 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282457734 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282402225 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280320013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280256422 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282542639 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282903524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283034925 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281129251 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280728111 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283196373 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281841946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28023668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279969703 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283725986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283223919 seconds)
  done (took 29.408563624 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.281677786 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.281636042 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.3001494 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.328555822 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.314035905 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.282087221 seconds)
  done (took 9.00526056 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282285345 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284171808 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281971593 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284613762 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284443581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282007346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282904887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28172981 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284646161 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281965574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28277212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284138211 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284082422 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282087872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283586169 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285418274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28259306 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281732003 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282527092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28411333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282455354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286386004 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282535558 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28362772 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282660057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28271123 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285055488 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282540964 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282051995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286079888 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285050098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282678225 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285538764 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282475126 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285538098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285520576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283025333 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285305061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285351371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283334237 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285418103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285907698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285304594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282317387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285034558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284338116 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28369711 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283229842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282533856 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286832104 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286074495 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283707117 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286879173 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285605098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28550392 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286852839 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284648487 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283836969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286231049 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284561691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284305856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286584609 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283608801 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285369412 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288149698 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284875491 seconds)
  done (took 85.975471112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28606951 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286308751 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287042685 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286890528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284677273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284665871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284778514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285789339 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285580419 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285015701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288464855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284690897 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285083377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284734328 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285015344 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284853116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286086974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285423472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286687857 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288597306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285340406 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285935885 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286336032 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286243392 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287782671 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288318014 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286683849 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286104409 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285892054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287335373 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286687612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28622312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286585079 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287222947 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286541061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286509374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286049803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285807962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286265169 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288636785 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286663036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289654658 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286097595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286265084 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287628161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28743085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287681699 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286220913 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287817507 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287296901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287548769 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288152769 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287438942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286242747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287895563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287409058 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287150015 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286652142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289028046 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289810052 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288526313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287886639 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290468521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287956282 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287119622 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288156511 seconds)
  done (took 86.152718126 seconds)
done (took 1742.477988323 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.311536149 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.389224982 seconds)
  done (took 13.924093193 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.454389412 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40369436 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288253625 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.320618853 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288808109 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.29098656 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.301248385 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288972659 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289633262 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.288461965 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289199377 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.475051154 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287541053 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288996667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.288728161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384628764 seconds)
  done (took 42.460953843 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.317656475 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29758469 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.406662104 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314854579 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316041244 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.477485542 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348760027 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.293847828 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.464584563 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337247339 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.83228726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316444768 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294643642 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.384374165 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310572609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.473891886 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540425086 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.837007191 seconds)
  done (took 29.790523123 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.738220898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.330935392 seconds)
  done (took 9.295580113 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.328042561 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.306231671 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.335960619 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.299271296 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.297252341 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.308432161 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.348583624 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.350259207 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.33300782 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.337856162 seconds)
  done (took 64.477582399 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31268696 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294834111 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294757755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293565335 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.284209203 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.286093145 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292808744 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.29259915 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.88471597 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.422072701 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.313325475 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.30052376 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.294918382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29606048 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292059894 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330357198 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444016999 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292301067 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29157691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300595701 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295070726 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41641586 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.335873463 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.293003826 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.419975654 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.903984506 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.300068393 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301140308 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.416748404 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292873013 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.29368361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296412917 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.296807781 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.877011436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.786907126 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.305728397 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.319496997 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303857037 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293633998 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.443498326 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296134172 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302287467 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.287836582 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.761387952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.449256729 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.408790981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.556469434 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29914388 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297293845 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358442089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296451365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297219915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324632696 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.052831448 seconds)
  done (took 109.225517332 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.343031084 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.778592045 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45992052 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306927745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932386601 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982409407 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.292465563 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.578397765 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.306741174 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29088539 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.569161431 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794238318 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293814722 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.366322732 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.320101596 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374941742 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292196113 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.064002 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.291754758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.29708327 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.708289372 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310906594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290245209 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.553938407 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.329328932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750050069 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.80797678 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.757771025 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296409391 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.290366934 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750452154 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.295143243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.352166855 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.292739585 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570394242 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.649023485 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.620773892 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.300358052 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339572731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292366499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.319109193 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761623808 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.647650323 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294625189 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.295699946 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764105617 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.2943356 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294203298 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.298280255 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492275118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.213013949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292599502 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.829214369 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.29491293 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.55947832 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.361034323 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363329136 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790082047 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296942425 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.362123427 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338937718 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292295388 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295821941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293438646 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294774793 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650736142 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.638590569 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297161987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.652764356 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755513264 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.296796302 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829422701 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.224389232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296595051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.34323295 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293165782 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.886103157 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800820034 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298758984 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293484379 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639235142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300228109 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.572209562 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307235061 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307437769 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720576302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320025462 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335415546 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.293421657 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303786859 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.927244368 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295279697 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.561265224 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.334399323 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294732923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.29413006 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.301909898 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294666338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294061163 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.295064038 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.817479751 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.300649079 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.43099066 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317606765 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300271674 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294871204 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.294697316 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.294595629 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511828396 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.796669001 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.296690378 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294281462 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.296406716 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.29494967 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.531393044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.297676085 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611069191 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301101627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295246731 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322459707 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028329803 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.332500407 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29462274 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315916773 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.151147029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.505431995 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317716695 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.295651111 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296428743 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313803184 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.727684078 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298010526 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.331012706 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298840844 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002471508 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339450592 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.299009304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875190303 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.298408513 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296095035 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304773094 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295805358 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603880023 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.570754579 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.52277052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.2996705 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.296772827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987795701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321438899 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445824347 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316409384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284686127 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494409348 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.55212178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297377276 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.877259093 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.297761993 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508548001 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.296748516 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61753703 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790086029 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.300905188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302986849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001291985 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956103079 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.112274443 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.30071253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.574115518 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.312138213 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.751559595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.29816119 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29775569 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.738974173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.300135181 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.305796449 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.298706839 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.299266305 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444181126 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473500777 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.479514753 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304852038 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772434843 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301316556 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29909753 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302616531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300866959 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653614207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36181171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.300531972 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336888468 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.299245272 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.298073017 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782300723 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.278181366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.301443072 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453919076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92956454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.301328152 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300134659 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.962766667 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.554299684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859533805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340228034 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.619682909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.305508004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340321755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885830929 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362811036 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786491423 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30514185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.300071446 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906679524 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.302659243 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.409129794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.300661187 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299651523 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.832310202 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303473814 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.30176324 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.668163863 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299894728 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54630556 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.300704297 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.318575515 seconds)
  done (took 1102.963304527 seconds)
done (took 1373.361414961 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.300912318 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303604207 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.289951953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304589119 seconds)
  done (took 26.440937907 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.310119502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306872587 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.309066931 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.306834283 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.310122699 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306953589 seconds)
  done (took 9.092857426 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.414924381 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304676361 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304507117 seconds)
  done (took 19.267037708 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53325886 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.552762958 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.679089543 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.4674673 seconds)
  done (took 10.476675982 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.310105732 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.310060882 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.309908534 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311384686 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.310957239 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312496244 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.311945373 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311834478 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312812694 seconds)
  done (took 13.043779149 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.246712949 seconds)
done (took 84.809246083 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.385562871 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.587484935 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.440577824 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.303087792 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.97224561 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.309266948 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558940645 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359237478 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.328038073 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.766731327 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.326580381 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.329659857 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.331541934 seconds)
    (14/309) benchmarking ("sort", Float64, false)...
    done (took 5.621272621 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.056946644 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.303233304 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.716168742 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.76994929 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.308175496 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.289281824 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355715115 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.695726982 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.159393547 seconds)
    (24/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.350303025 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.304579826 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.111686281 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.37000852 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.332854722 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.407268429 seconds)
    (30/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.516573373 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.708662829 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138105163 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.321041487 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.313968011 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.310290186 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.606435531 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.332102418 seconds)
    (38/309) benchmarking ("sort", Float32, false)...
    done (took 5.335277441 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.68983029 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.952564549 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.585146666 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.165924995 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.467780448 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.881353272 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.434660701 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.390509008 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.120919768 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.601272601 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.297002171 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.395220964 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.6217018 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.905877184 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.77785856 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.687340091 seconds)
    (55/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.70492743 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.30925623 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.926607659 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394061608 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.362449428 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334033473 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.40634875 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.982858117 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.150576709 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.708396895 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.787005229 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.028881551 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.856710657 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.430358295 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.503843599 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.356999191 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.895971307 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.341981188 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397712814 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.811596473 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.33728002 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.359082695 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.554537049 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.626748736 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.406008448 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.893264344 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.394545476 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.494551735 seconds)
    (83/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.5524313 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073863795 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.307049215 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.142523113 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 4.379364981 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.572809745 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.311495249 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.99180864 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.323945107 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.987562728 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.372054901 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.711815761 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.307803279 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.830450444 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.159382008 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.335614285 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.378332909 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.295430369 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.401003688 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.500229565 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.168875407 seconds)
    (104/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.980449868 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.295727894 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.526691563 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.415091644 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.327812966 seconds)
    (109/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.409616654 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.653667512 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.068134225 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.315203868 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.312131049 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.240174156 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.417395128 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.297981445 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.312492879 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.158454915 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.738172515 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.103631153 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.21314871 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.433810612 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.409318773 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.339006415 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.810267294 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.333612266 seconds)
    (127/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.602953645 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.881795208 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.733493678 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.335960242 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.562854761 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.310404214 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.100187382 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.339851674 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.569668272 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.413143352 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.730251528 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.920024139 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.362299259 seconds)
    (140/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.149843106 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.385981458 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.309781195 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.603480979 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.413290073 seconds)
    (145/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.685939875 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.917871443 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.385377736 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.3548682 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.213926196 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.423709292 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.97289198 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.311984794 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.418412151 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119506758 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341822741 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.903549739 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.78415037 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.952490026 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.392727856 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.366044744 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360829093 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.746985236 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340608725 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.24305954 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395968783 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.310784676 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.625779756 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.935043034 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.314041562 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.431927148 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.75064036 seconds)
    (172/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.021282327 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.663736927 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.723978101 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.582796269 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.705878892 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.33376913 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.441023055 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.480178099 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.003765023 seconds)
    (181/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.119861317 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.389188206 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.312679564 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.921726925 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.401667685 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.322047241 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.91274183 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.808493464 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342706999 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.297761615 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.442352906 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.29765718 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.673767468 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.396573561 seconds)
    (195/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.501238752 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355502963 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.936705906 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.628379388 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.513461662 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.390809128 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.313183461 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.682995105 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.414849863 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.83843824 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313517126 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.453641253 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.375021114 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192729076 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.727630964 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.449918401 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.468379604 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.300645855 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.264155556 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.314203755 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.195002186 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328708403 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.333206811 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.869593234 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531538829 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.288454287 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.470761077 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.877417995 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.95716108 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.378919671 seconds)
    (225/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.340654033 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422830022 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.215513161 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.32032707 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.315443826 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.551427204 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.35673576 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.337228322 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.758335932 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.436788015 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.302322306 seconds)
    (236/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.055466392 seconds)
    (237/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.361104955 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325206016 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.356191819 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.365722766 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.73653421 seconds)
    (242/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.84906824 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.336889594 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.305083977 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.755908412 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.401955541 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.698350617 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.317965244 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.335600183 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.729836542 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.669728073 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.304784947 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.876641326 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.318606 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.303395506 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.34444184 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.913052007 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.684245744 seconds)
    (259/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.860735389 seconds)
    (260/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.318101346 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.77917302 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.319050786 seconds)
    (263/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.71966871 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429298762 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530102123 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.298074533 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.315707184 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.632504687 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.318298045 seconds)
    (270/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.306044646 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.381624367 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.745785321 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424649324 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.315178054 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.211261388 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.486103332 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.097302384 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.315761288 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.463746677 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.927189969 seconds)
    (281/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.724527284 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.342778912 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.860832575 seconds)
    (284/309) benchmarking ("sort", BigInt, false)...
    done (took 6.321166536 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.943370176 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.732399301 seconds)
    (287/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.175819349 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345796766 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.687962836 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.409798974 seconds)
    (291/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302228601 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.766999772 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.402946282 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.194331588 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.433788972 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.509486239 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.480185871 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.322690515 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.555312748 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.329784096 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.361101873 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.317162671 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.661284572 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247727393 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.344577992 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.340798374 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.81161271 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.873761476 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.638904425 seconds)
  done (took 923.279548195 seconds)
done (took 924.524422391 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.349917818 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343660045 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326852215 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.349060657 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.439054959 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.357520515 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.337982523 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.329421305 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.375188132 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.377109091 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.32563259 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.355132761 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328219758 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.327545994 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.327140461 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341413476 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.384848815 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.331806486 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.345700744 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.337591855 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.344812029 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.326381071 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.3772876 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.357087751 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.332417718 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330911976 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330970929 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347573224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439671695 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331291191 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332031583 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.339861867 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.385407652 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.330168841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.324400062 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.348033341 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.341485189 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.33830325 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.333053026 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.360424262 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.750821229 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328506677 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.33066676 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.330671914 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.331178716 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33502513 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.330927286 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.337512452 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342387122 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343503798 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.742482677 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.344349033 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.332740964 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331462319 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.341095274 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330557505 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333997038 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346787695 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.349865057 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347096376 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.380624532 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.338146158 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332232031 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347107775 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.338061312 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.782539003 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.327182862 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.33515709 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.793660128 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.339596715 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.787424711 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.339195874 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.33247127 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.344777659 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.363051036 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.390801725 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.329531458 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.331071543 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338755567 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329971435 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.341798509 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344319598 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.337138172 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333094115 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34539649 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.361159994 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.342777075 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332600077 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.342075621 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.351335208 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33842601 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.34340424 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.335522981 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.328111466 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.342268397 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.337019959 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.335117761 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334952191 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.338183927 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343746349 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.761593674 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348666006 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.32987752 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329791073 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.332956384 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346445569 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.764920923 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.33348377 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.354966148 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381502286 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334258998 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.385981553 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.338627296 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349288839 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.344051692 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336798941 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.330307931 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361532211 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.759235756 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34894729 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.335226128 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.331832142 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349560625 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335856071 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.331641574 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.35496331 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.337041956 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34710048 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.454744331 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.345475651 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.365977468 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.33282025 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.338487396 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363863076 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351261233 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.366223317 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.337140091 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350255239 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350188704 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.331914869 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345488887 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.346028674 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336773894 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.341217691 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330805619 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.364069258 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346920012 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347449197 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356739275 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.455672194 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.333137358 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.345471384 seconds)
done (took 225.215008874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.395349866 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328699479 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.418403667 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.333420726 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432784107 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431255721 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331137284 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331154944 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331398912 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.708555747 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3311199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331871954 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.324734583 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.332457486 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.415464889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334208576 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331672337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.673053654 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334950659 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405113962 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.329868397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.33179869 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.335288711 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.715083816 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.329430537 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.329988283 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.405404813 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334471362 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.681245177 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.334321621 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.331254601 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.680500736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42482858 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.352435908 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344881616 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341850353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.434568311 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352509938 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416283446 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.41568853 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.419156536 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.374156964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.328197438 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.328164924 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.337699566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3367672 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332185664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362250454 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.331647078 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333685304 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.675139021 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345296418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334757061 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.333427895 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334475595 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.365129794 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334158021 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336408525 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.425335493 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.337543372 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.398571771 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.716560789 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.712484204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.337631307 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.329328331 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334980731 seconds)
  done (took 148.4820957 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.403152916 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409531714 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.451142855 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337695349 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.388158751 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.453876283 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.33758767 seconds)
  done (took 11.051673206 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342466819 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338208327 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387427706 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387292335 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338351838 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.484461408 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337978107 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348781905 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.334920469 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389893515 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33877566 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33877592 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344940429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.331627719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386176862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.349093645 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452352188 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33798877 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338056038 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493602061 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335843807 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345506112 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389509731 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349331015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.338973083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343475513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902510841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339016206 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336291099 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338531927 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336919962 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.376472064 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339024359 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.333676751 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336194015 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454342235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339710934 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336505048 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.340467993 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.334248945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339454778 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.33992925 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340595056 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.337642063 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339418203 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362913549 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34043652 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340711838 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.340465605 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340687699 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390695737 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341839843 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337559438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.33842537 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396624888 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34692248 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341508884 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.337901322 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341266843 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339467696 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497037953 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388021342 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342125342 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387708431 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341332157 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341195177 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340577955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.341409686 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396001462 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340596989 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389381055 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338508781 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.494638723 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.36444723 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341732566 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.343742851 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.343218288 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342178904 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.334375501 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.347464928 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339431028 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341333985 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.346831719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339114552 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339909932 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444042423 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44946035 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.33948124 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.35391747 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348112622 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.339112365 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.395322714 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.341922409 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.33974952 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394706217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.45661385 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395112825 seconds)
  done (took 153.8158789 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346539674 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.348998197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.343238277 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356853737 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.342695448 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.342078126 seconds)
  done (took 9.35549911 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.345765978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344205075 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.343096046 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342653 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.343376794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.344097264 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.34344879 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344819168 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.347289584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.344112379 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345066185 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.345988569 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345408843 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.344626243 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.345304126 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.344636207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.345045153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341336046 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.343956058 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34442836 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.439022971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.344419107 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344388996 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.345314457 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348559761 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.34462729 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352011281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.344797031 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.344778948 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.351166864 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.347582982 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.345970029 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.345811461 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350619843 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.349664171 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346108217 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350191524 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.345904053 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342231939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.345783174 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.346837015 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34599558 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.344544183 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.346704145 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346659977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.349940343 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350366131 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352352381 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.346493922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.346728261 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.347664972 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.346501626 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.347036737 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.346920651 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350792431 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350264818 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.351400715 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346956524 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.347863099 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347273396 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.348328715 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.346781313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348444804 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.351595456 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353905964 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.34802858 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347710338 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350772579 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347670121 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.345851192 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.348649083 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.344534313 seconds)
  done (took 99.337166644 seconds)
done (took 423.307550543 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.738662459 seconds)
  done (took 8.018505494 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.446034066 seconds)
  done (took 7.727616206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.139068368 seconds)
  done (took 22.424765215 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.424271757 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.44404216 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.364234944 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.351115481 seconds)
  done (took 26.865724997 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.827226094 seconds)
  done (took 8.107516646 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.354010377 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.34316582 seconds)
  done (took 13.979468117 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.413721584 seconds)
  done (took 7.693767606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.828599977 seconds)
  done (took 8.114657463 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.35547602 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.355749743 seconds)
  done (took 14.261532628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.325605553 seconds)
  done (took 7.606114274 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.779007722 seconds)
  done (took 9.06135545 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.345166755 seconds)
  done (took 7.628690242 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.382058807 seconds)
  done (took 7.663309023 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.455709322 seconds)
  done (took 9.736860089 seconds)
done (took 160.169086646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.340754653 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.343151309 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.342998005 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.345252348 seconds)
  done (took 26.653017667 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.38218649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.38253656 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.383940706 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393262689 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385584193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.381950024 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374003835 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374013961 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.393877757 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.385770083 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.384361347 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.384480137 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.382664988 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374253268 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.385115283 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.384520223 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393323321 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.383774779 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.37476127 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.386271337 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.349774787 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393737664 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.385475498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349840177 seconds)
  done (took 34.432453899 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.549666413 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.420327766 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503121946 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.401613337 seconds)
  done (took 7.157382392 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401060984 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.404002737 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.415650051 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454401703 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482278716 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414052597 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377156404 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371963367 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358102056 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.403647419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479149736 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.41991543 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.486720923 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.350512184 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53556474 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350701541 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350289449 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403429323 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.454469981 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.467795702 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.350724899 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.402145812 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.406727883 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420068355 seconds)
  done (took 35.243899909 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.35004535 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.358457518 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.355830408 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.350670356 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.350494635 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.35051839 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.356377666 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.351748041 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.370531608 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.35153779 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.349725149 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.350958883 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.350000078 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.35108955 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.350029972 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.363520889 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.364248086 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.350998099 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.354299713 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.357128029 seconds)
  done (took 28.372385781 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.344127948 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.199334289 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.695924625 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.600042589 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.343736493 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.344611428 seconds)
  done (took 27.812708415 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.424711849 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.557773429 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.354805135 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730593482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.813805092 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.355867617 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.352871356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.592115343 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.920026053 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921604618 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.412249189 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419578036 seconds)
  done (took 20.143018496 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.358923083 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.348854191 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.348986976 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.365049939 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.408220293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.355954612 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359038237 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.345035327 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40916028 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.413412629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.357316159 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.409806185 seconds)
  done (took 37.767171409 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435192867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396850573 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.4079057 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179443631 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73437318 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559441674 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.225873732 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792512887 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.355759607 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62192935 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349605474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441554233 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604566855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35916873 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352342258 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.425658583 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579306891 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855699386 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35120521 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.402486635 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377077691 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362963525 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.53888561 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38040196 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561474692 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.482685657 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609859654 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348900453 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639913926 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363955465 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359716061 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349880353 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622828812 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047342115 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445594515 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359561629 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210041635 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069894964 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.343318433 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.436958434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362673654 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354476186 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360290298 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350383321 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284829904 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350274212 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804012456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.360254165 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.061586152 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349564518 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361744576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445445957 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.354130579 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.168249726 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436223365 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35229384 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.349286829 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356444645 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92071769 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.977223091 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363864463 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.288628639 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515549548 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427201589 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980852166 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.454186875 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.354336732 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354655053 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28641576 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.494398473 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37222484 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489834366 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.372617638 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014322702 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076100162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358400834 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286071106 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936096671 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372523513 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.28919968 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580248258 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353235925 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293817579 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302912736 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.286294299 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10542228 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364890503 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.806100342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362945614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795658927 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368584425 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36957328 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376236597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577203841 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.236929748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353185379 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.352376695 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510527171 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374665337 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796466881 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292515051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357426555 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609209454 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.564868258 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35907038 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.421630354 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566426296 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359076838 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.373230156 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364539339 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.367161722 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.95424842 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36945957 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984451342 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37523077 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354114054 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150360932 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360697998 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.457223729 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362455651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608249877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.18648966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359619707 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436645171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357687639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354937815 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.540947099 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877975542 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354318517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.356759491 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356921614 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368266721 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.355339872 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323416701 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.363281405 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354590835 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.357517453 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5801116 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357672821 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633165827 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289849605 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493115442 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457105334 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.579836282 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.572274454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.35505362 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615669052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362106658 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361018641 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369773387 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374298519 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453770609 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3777842 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.368138359 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615413458 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.358990191 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359684517 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.009546159 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360271578 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361708736 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.362156333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252443723 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956571475 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334342517 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365927752 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250450343 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371096001 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420509027 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362138823 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.367695178 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.25673081 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316705752 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.364889769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.354384163 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595666155 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368236872 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.520156683 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441203801 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.56189367 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964055749 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374565399 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.291103837 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.068412144 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.051077122 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357499192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29227701 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356793648 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366078069 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368519608 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.677609582 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959343463 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363548628 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.450792983 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.36732548 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370098486 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364204922 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358272648 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.240410055 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00761033 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366299365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.372438237 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502455704 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371502746 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294108514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.363340761 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363603616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358618365 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358601948 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391646132 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.460887868 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851843915 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619259871 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.225919523 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374793461 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.637043159 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.394252534 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361600426 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367452649 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366828052 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.379240522 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372092507 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.369725208 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.509670271 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032410863 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927017453 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129347439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915707482 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384171491 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.376511059 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362643024 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809666435 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299032534 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91948529 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554619275 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823751541 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320556779 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571816132 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.604952622 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149044331 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371137334 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589896969 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367905737 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.37667389 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373407313 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57244078 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395535185 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359650671 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292226771 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.884941803 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605996463 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3674279 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439599794 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808641021 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376235986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363167692 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.360396466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.800616434 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546361446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.078534474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54086928 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365098508 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37355111 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899925102 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374380103 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592696884 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995702379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364705729 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.573248151 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306482182 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374127199 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.373729994 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363616493 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.724138864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.36468952 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.619512275 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373181661 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296878905 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374788034 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919126742 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.223618807 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.368127298 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362049801 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160166712 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367250081 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661032118 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.373401824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.232026629 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373350402 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29664139 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298070205 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.057033097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364608079 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335763689 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883847892 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.476672303 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.430994287 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385854209 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21433867 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620334815 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.379098828 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971057529 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593838966 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.294478229 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389968994 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.464554204 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363517548 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.35421687 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36472583 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600311203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252556657 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590228197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.455977099 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.278444983 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363060869 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580977075 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365089812 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364922186 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622319637 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.080071688 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.3747701 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128953539 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393978576 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365480286 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289001046 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529786434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372358542 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44500044 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376649938 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.376460524 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375769642 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545911578 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380236464 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371705035 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.380188882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459526676 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040424885 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.254416304 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.372083915 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983452838 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121460543 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.979691369 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382437165 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366755116 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367098816 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30150085 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515538552 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.596638512 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641154266 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485622193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.581237207 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38901556 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377288323 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375633538 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582161927 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642498147 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267388884 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371742529 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384592377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.36690442 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378239996 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.579072733 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896529676 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944007818 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515222432 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380989777 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.817043039 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645136762 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368006704 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368065051 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961399234 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.386881994 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.814683247 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376705784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383116983 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519356814 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378896198 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072929553 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382125573 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.525003962 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.142822638 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.501849503 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628710985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.905811358 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.383817968 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979914037 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109355297 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637846652 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436527029 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380312151 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490094967 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516164585 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.36704401 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37218486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368930374 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218463265 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.080443317 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.3795115 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985106291 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637705543 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.368162488 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.368784216 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396207192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.379971139 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594544706 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14166729 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599079554 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380622586 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371950021 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190476687 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982924388 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384686998 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30559667 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374779109 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618959878 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606921006 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391505002 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.823814092 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.083100133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945568822 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.34663111 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393366684 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370721243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126693659 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987319837 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.26620911 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892344491 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939776334 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386733635 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647574523 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376498047 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376690512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649556761 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376177 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371552016 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386719039 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.982021548 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186654478 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.393824256 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.509886164 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.311248432 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718736584 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065488895 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311625598 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383336158 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.566892639 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377522132 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49095985 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384158603 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.373426912 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379217684 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.132055821 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655765506 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.378102078 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.366775933 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.372514191 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380392457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380984165 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613135882 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381351735 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.048988113 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.725770492 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62882771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382110205 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.360062129 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.377631442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373583541 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371628807 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.579170514 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.694676831 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948289202 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.383755246 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.387422907 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378536405 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591087417 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586018472 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373823511 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402587749 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38443672 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392319603 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.286787278 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.881975938 seconds)
  done (took 1613.617695106 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414878927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.395158057 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.418398496 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.471901116 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39077433 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.497916961 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.410693925 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386749643 seconds)
  done (took 52.699189633 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.372689316 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.592636651 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.407157877 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.387076821 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.388088461 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.386889944 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.83086436 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.375366414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.384386948 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.384680411 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.375483501 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.384358453 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.019268173 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.385976265 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.379936057 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.364903217 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.384727482 seconds)
  done (took 66.125446036 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.375371578 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.607024763 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.484240502 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.378884791 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.688568452 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.374489029 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.590782355 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.396728621 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.377532299 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.524505142 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.050725768 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.406232336 seconds)
  done (took 80.570432585 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382118629 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.381726749 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.382203365 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.3832965 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382244251 seconds)
  done (took 8.226636539 seconds)
done (took 2040.103626397 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.627281417 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.114383402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.083375246 seconds)
  done (took 5.512781874 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.525732044 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.580220618 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.716342783 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.728222822 seconds)
  done (took 7.867282721 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.654618131 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.748773601 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.566947262 seconds)
  done (took 6.287316908 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.85615205 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.404507794 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.455127075 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.37648653 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.3806286 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.379667933 seconds)
  done (took 20.454686832 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383558461 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.385607327 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.383648667 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385823132 seconds)
  done (took 6.857605048 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.363601791 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.152998979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.368948459 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.382158783 seconds)
  done (took 18.585298702 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.130309543 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.151489483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.126222169 seconds)
  done (took 7.725537905 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.393624616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.226698584 seconds)
  done (took 9.938144223 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.703041738 seconds)
  done (took 3.021073457 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.514370621 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.647858318 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.455134903 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.380347274 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.469470101 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.456753699 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.129601338 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.682084016 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.394801418 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.69994224 seconds)
  done (took 29.149484534 seconds)
done (took 129.056809441 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.328528485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405214622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.577812167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.307071936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.61567619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.579828626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.659325776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.271358327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.988452942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.803238895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.305994219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.616660068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.833568667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.40153722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834717946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.39584477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.613620323 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.377566221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.990522891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.224620014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.659240817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.937635704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.131655776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.115398884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.619813557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.536101126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.532126078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397438722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.165010523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.558351832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.535871067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.380937688 seconds)
  done (took 194.020483392 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.38097846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399957709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.381826562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.38111358 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.386173364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.382033761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.383954439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.389359203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.38121777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.381323014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381056606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38079552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.383826128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.396092912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.382485443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381442234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.381806805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.387866708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.382340689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.380552178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383651936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.38370883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.38248678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.383953693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.382335456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39244561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.386889672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395823587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.382189408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.40993526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396704467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381208514 seconds)
  done (took 205.668943857 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.381993212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383187969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.38320223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.382989499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.399659172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.382505487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38212738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387231531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393663579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390012086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382924416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.3835064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38447916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.383891693 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.385763382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38368809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406695722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.382890447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.383108572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.384463658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.410399479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383322063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.383396134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.387963816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.387177696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.382551971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.3841886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411648203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.383717876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.398473805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.384575866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388693419 seconds)
  done (took 205.73708422 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646923543 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.391978638 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.393203536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341523108 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.393552983 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.391742838 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.386315115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.58375745 seconds)
  done (took 14.852698409 seconds)
done (took 621.598069027 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.74724128 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.46197454 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.593282612 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.413858116 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.179733029 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.413676329 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.413339152 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.584510971 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.331289411 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.589315582 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.673920368 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.410297677 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.819510381 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.410845123 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.666298497 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.509985464 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.299393812 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.425715858 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.738925956 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.937833041 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.675485379 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.891769993 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.58562767 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.325863685 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.869587276 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.927680514 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.171190679 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.315262009 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414852571 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.737452765 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.102679371 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.43851389 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476886787 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.453779223 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.509793556 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.491355243 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.37959276 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.452989251 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.598724387 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.649540424 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.954596619 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.146339559 seconds)
  done (took 94.516646049 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382720577 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.383055973 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.381640196 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.382033191 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.383510298 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.382561853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.382057718 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.382310386 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.382980386 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.382470984 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.38217874 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.383613304 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.382387352 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.38434886 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.382255933 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.381659313 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.384403224 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.384634832 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.383142401 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.382953382 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.384212628 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.383046363 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.383254363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.381748419 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.383032872 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.383621495 seconds)
  done (took 37.282703986 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.395939164 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.633468278 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.816072726 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.401864792 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396361831 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.400575263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.477018848 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.398136707 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.399004835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399470977 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.553860312 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400230776 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433582668 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.824021696 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.399175286 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.397994373 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.396794435 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.396671985 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.641102099 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406688831 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.478762218 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398143188 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.477499496 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.407088112 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.400473173 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398303179 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.401935223 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.904366214 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.399216008 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.555606085 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.222360234 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.477972456 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.85266626 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.832271656 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.21639657 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.402875714 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398792842 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.560399329 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.399161452 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.398865054 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.477409981 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.399701657 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.850580693 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.029719541 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.415562012 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.398288273 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.918891543 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.55832531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656792819 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406323102 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855857545 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404198887 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399563426 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400636961 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.658148198 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.408633827 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.397693613 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.96319663 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407288309 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.478958044 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.398838831 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.399210581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.655131907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.39882135 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.637626053 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.400790094 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.407212322 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398998718 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.830155896 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.401680806 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.053714889 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.41632737 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.399331826 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.556542408 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.638756831 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.951544332 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.402510491 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.660647213 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861773061 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.478055792 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.403898386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.886494473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.481524508 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.403685878 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.401933034 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402389 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.399934237 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.444526508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.477566082 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.974871154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.040898877 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.960215414 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.481977897 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.413066374 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40028365 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.950040062 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.418410844 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400479413 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.823163805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046282548 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.416581734 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.409361324 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.031672372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.419232898 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.481590072 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.406741961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.836263944 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.401414817 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44567636 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.402897013 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.408980641 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.405447268 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.48196632 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.404962891 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.403503465 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.023788629 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.580442994 seconds)
  done (took 183.48855259 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.409320041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.394362289 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411526924 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.394864325 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.394612425 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.400700701 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.394145453 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.394128155 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.400362759 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.395404862 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.395259137 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.394727291 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.396165518 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.399151952 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405569546 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.402443289 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.010075901 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.396218618 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.396685061 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.394848943 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.207525672 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.400140085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.395456212 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.396270613 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.395218301 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.398070783 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.400377869 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.397746621 seconds)
  done (took 153.905677585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.403579724 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.987198036 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.404576161 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.539179038 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.425053843 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.400628374 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.539453441 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.464644818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.405393306 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.401068984 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.401490286 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.729602722 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.407438194 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.93730963 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.602511254 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.544066451 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.937847458 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.406223055 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.402539462 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.40288192 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.543049806 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.415594967 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.717668459 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.990320712 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.406822188 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.015087403 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.396789469 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.405714363 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.404059834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016665262 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.406366569 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.721837704 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.484267092 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.466921705 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.013510635 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941687774 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.941465128 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.56000338 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.406165421 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.402933945 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.402491098 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.393661955 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.022429582 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409678751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.405503911 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01491115 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425253437 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.405925065 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413949438 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.403075653 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.466655875 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.467728445 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.738080464 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029663923 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.488942872 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.427015821 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.545606732 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.762871479 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.408850818 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.938523425 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.393558753 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.025657289 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.412486956 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394867638 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40648241 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.41372134 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.563753842 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.548208237 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.950210635 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.408133211 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.941774525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.563749901 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.407241754 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.405573126 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.407411657 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.025867356 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.944410912 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.564613527 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.550346013 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.611959882 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.395613724 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.405913332 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.39605356 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.485584069 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.405547201 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.023834182 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.944380674 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.408631349 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.408417207 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.40903102 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.408815763 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.590987458 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.001012398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.4870281 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.937041453 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.740086976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.725226748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.409593172 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.469091825 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.408058224 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.726873845 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.408566969 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.467289296 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.821346686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.72570061 seconds)
  done (took 167.860316906 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.65716041 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.686647048 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.50310935 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.525214525 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.942875652 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.992651269 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.546004254 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.533982368 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.51840022 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.650467599 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.658541264 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.504158668 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.598504808 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.48473197 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.095455372 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.477093947 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.500984013 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.530819606 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.522130548 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.485064114 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.053019362 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.695307857 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.584807966 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.558602215 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.506996431 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.217188348 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.963490918 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.926683665 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.579001227 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.754830173 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.935030981 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.560044116 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.421783343 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.121196846 seconds)
  done (took 67.633117892 seconds)
done (took 706.010083544 seconds)
SAVING RESULT...
DONE!
