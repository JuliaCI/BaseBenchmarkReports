cset: moving following pidspec: 25410
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.311896805 seconds)
loading group "string"... done (took 0.592269295 seconds)
loading group "linalg"... done (took 7.234665494 seconds)
loading group "parallel"... done (took 0.168699385 seconds)
loading group "find"... done (took 1.146117261 seconds)
loading group "tuple"... done (took 2.030913572 seconds)
loading group "dates"... done (took 1.291200866 seconds)
loading group "micro"... done (took 0.240293876 seconds)
loading group "io"... done (took 0.967948919 seconds)
loading group "scalar"... done (took 39.758491863 seconds)
loading group "sparse"... done (took 12.866609744 seconds)
loading group "broadcast"... done (took 1.016513545 seconds)
loading group "union"... done (took 13.57765083 seconds)
loading group "simd"... done (took 4.403134768 seconds)
loading group "random"... done (took 8.92787096 seconds)
loading group "problem"... done (took 1.935076553 seconds)
loading group "array"... done (took 21.07311567 seconds)
loading group "misc"... done (took 1.918276559 seconds)
loading group "sort"... done (took 3.196866457 seconds)
loading group "collection"... done (took 18.763631871 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530572005 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139613897 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116753389 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13818628 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182671313 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131579388 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143821017 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083887982 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.019154153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159101815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138427713 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475243754 seconds)
done (took 5.02537249 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205641525 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085828127 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097502355 seconds)
  done (took 0.885808257 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067007933 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127624034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080077536 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06684084 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065849349 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079862449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066361166 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06516986 seconds)
  done (took 1.269747455 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075422971 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069299238 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086194615 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068444142 seconds)
  done (took 1.016366703 seconds)
done (took 4.173164883 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.90091795 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240471348 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188665268 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457644202 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150841677 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189047793 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665242279 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321951596 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212899282 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100068799 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106107151 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376569037 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106757245 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.660146204 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074402009 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104663741 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158686505 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421001506 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08002338 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082613888 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104436333 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143575706 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101681653 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079554194 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170974281 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069371666 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145946546 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095617815 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067390663 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241818361 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189443073 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680201149 seconds)
  done (took 10.444701792 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102712642 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118626082 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070654542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142044755 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102189451 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088069686 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071777326 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084560193 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093196468 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158876463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11311393 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104910422 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080717108 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069526992 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101099306 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21133603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105313519 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083869604 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085771856 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075183647 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12064777 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081568173 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093877457 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078132296 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151154359 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196602415 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114263623 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112911409 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070334519 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081596263 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133158485 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144686933 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068046789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082799644 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141966935 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112062062 seconds)
  done (took 4.574744006 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.025987126 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161479949 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091404674 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151118619 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102623195 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066888886 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125997422 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080554134 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099443356 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231625867 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.092873676 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111055202 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.456978063 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13032085 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103468732 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067732687 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082760992 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067513511 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506109359 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14688754 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104707534 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104263888 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075250576 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088279408 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364240696 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069200768 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067535106 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086174391 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060725811 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065159881 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148187975 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086507529 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.189961662 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109899048 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070525866 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121255456 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185465296 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096790738 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125518789 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08327323 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06768729 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170023592 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072961926 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082649513 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087874344 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121788414 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122227168 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069939954 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084524915 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184030008 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068681467 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102062591 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.867292485 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164916587 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078767454 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066393491 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285524434 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083345018 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082762879 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063062588 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249254896 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150666929 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066346826 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082408518 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070196042 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066999093 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380651607 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067226602 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.793982646 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068572086 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074928024 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084774317 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066073771 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087935486 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07136288 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100054266 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06643344 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067292318 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08208245 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065507085 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082549145 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08362918 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200807175 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082410181 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066683766 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064321584 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101541632 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109822408 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069855463 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066034567 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116662296 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064142975 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082887259 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066764241 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117302556 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066727758 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099761198 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083486014 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113433741 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083901353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.118569128 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067399326 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113811232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071179338 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116989737 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092454484 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067721689 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151859111 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063400382 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080934359 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06782272 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065257793 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086106922 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069022932 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099361649 seconds)
  done (took 20.89825605 seconds)
done (took 37.661971115 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.298438685 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093278109 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092114618 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074983791 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090801533 seconds)
  done (took 1.443052087 seconds)
done (took 2.207287292 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121599116 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118328466 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064320863 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113490529 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063479577 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116577693 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112443098 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080659892 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113907451 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066264598 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110356944 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063967558 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063194736 seconds)
  done (took 2.002188805 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084195421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085426468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086462638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082384694 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079481363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083575262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080335045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106031902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081025564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089382211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064434795 seconds)
  done (took 1.682961827 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08322697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085018765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08626217 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082029253 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079977937 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082832716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080885003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103768179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081182252 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090038584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064521981 seconds)
  done (took 1.681790348 seconds)
done (took 6.120710641 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079468717 seconds)
  done (took 0.835826843 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695941498 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.619055272 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083041311 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133490551 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221636411 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153588731 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.438241202 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107537125 seconds)
  done (took 10.382768433 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090494213 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100434658 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073054028 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087861933 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072687895 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088942162 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069368362 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070402019 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08743956 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073325894 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086276613 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072464801 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084456152 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070533391 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070567689 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087506714 seconds)
  done (took 2.112830831 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094510741 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09298692 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092131442 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077227044 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091006515 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072952789 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093364934 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075280566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08778622 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073497251 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092748413 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075439991 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089302544 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067021626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091938526 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077473968 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088303732 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077070274 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093300987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076278947 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092948924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066066466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088995448 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076922151 seconds)
  done (took 2.873581528 seconds)
done (took 16.966392238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13266755 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077194568 seconds)
  done (took 0.974294517 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083135558 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099073134 seconds)
  done (took 0.954281398 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083756663 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082336062 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09032119 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094820068 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067906785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083550562 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104566621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066903995 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082050251 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068354487 seconds)
  done (took 1.595867589 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069687005 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094310849 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072160382 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098498082 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075768376 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081485185 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074361676 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085557369 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079781418 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080013789 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072420326 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100721264 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072434775 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101904695 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074148702 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086321361 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088615263 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069182867 seconds)
  done (took 2.249317449 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067524054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069045645 seconds)
  done (took 0.908885583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069018331 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064949463 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084303968 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067767687 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081171702 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063923357 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080377487 seconds)
  done (took 1.283512356 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409281541 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108523155 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.247643274 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089761632 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105513048 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263337562 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08429059 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071676329 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090418303 seconds)
  done (took 2.281260506 seconds)
done (took 11.018343122 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080707411 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087289947 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112448335 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418448803 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105527998 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066088687 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132463244 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.22203501 seconds)
done (took 2.000474612 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126102788 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.607299053 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.399855346 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216669604 seconds)
  done (took 2.001735647 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374782648 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092699993 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07459409 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068395647 seconds)
  done (took 1.392642619 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06804825 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069971446 seconds)
  done (took 0.917625554 seconds)
done (took 5.215962414 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068289796 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067312424 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.102239002 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06460026 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085102993 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065218646 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064691464 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082918013 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067418796 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067338883 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08474852 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070054184 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082684897 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06490389 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06494921 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083232651 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067596399 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064601839 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080772102 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064707751 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066615349 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08100134 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066028443 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06658337 seconds)
  done (took 2.560851551 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088030338 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084125758 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073448668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089240751 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072275501 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089655316 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073503129 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067893474 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089671165 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070988221 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087691375 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071878245 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085076173 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072301328 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085766677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071925272 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089557802 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067800215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073408798 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087908135 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07319783 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084317736 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071662202 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089306806 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071565454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087845871 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070336208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083758193 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073251625 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087718748 seconds)
  done (took 3.169464554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072231901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064267316 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081713364 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071536237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064827915 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083028473 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06482821 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081377262 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06586445 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064204312 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082533262 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064429729 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064644894 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083107525 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065847457 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084400945 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081988949 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065066323 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081547837 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065383351 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067662749 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08127563 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064727817 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081019872 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065030396 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064544989 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081408702 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064375503 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066313754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081906944 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067832365 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067916125 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081499406 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07210781 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085440746 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064458295 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068400096 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081264931 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065610898 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064175205 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080952794 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064900717 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064365219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087745009 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065146676 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083117007 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065314254 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066129941 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083017084 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06828415 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08091508 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065347774 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066949127 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082965874 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069364457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064784448 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082361149 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064420731 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081385791 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06493678 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063884485 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080764342 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068283804 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065320102 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096391907 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07202087 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080868819 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067141318 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065766899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083358219 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066517423 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078473756 seconds)
  done (took 6.0173601 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119629481 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092409617 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084347393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067375685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080268911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065361972 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069356542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081833737 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066811464 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088502121 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066020944 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066193636 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083432718 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078314869 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082445189 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066963281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087460071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063668394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065384164 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085545804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065912695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085351688 seconds)
  done (took 2.50363605 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187160519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088888803 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110564935 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092165665 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069031961 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091756293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070750975 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088425941 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071713988 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086774091 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069233555 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088361906 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069056118 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086294166 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069684901 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086292207 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072056574 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085759246 seconds)
  done (took 2.373896382 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079442025 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066976952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107676615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067767519 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085243918 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070251198 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089514479 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0763302 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08738613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06770272 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092519894 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070616503 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086737183 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06761898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069671819 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084639317 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070672769 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084516715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07697668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089334121 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073035211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092382473 seconds)
  done (took 2.550466469 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082789942 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068807457 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103442595 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086777661 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063583457 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066146157 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090902761 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067941113 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090315998 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069787005 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067246254 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083331218 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072262707 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084808579 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072419101 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084360811 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068785708 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067227238 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086395931 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063791126 seconds)
  done (took 2.333618951 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08813147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085611547 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069027993 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093651315 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069236162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084973531 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076966169 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08548202 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068500638 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110472818 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068882906 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084963025 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076849637 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090662395 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068943585 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094110701 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076688563 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093393704 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068763531 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086081367 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110131606 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180560923 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093051925 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069012937 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084595206 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068818099 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069329652 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09043066 seconds)
  done (took 3.202923552 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067623287 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06677216 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08197765 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065392437 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064589096 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08192892 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066040023 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064935894 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084817606 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065409453 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066490196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083927898 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067622822 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083351427 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067551446 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067414447 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083932308 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065423868 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06485102 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082211831 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067639013 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06707395 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084971048 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065524059 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064192455 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085061316 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065659047 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081771162 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068429336 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064931786 seconds)
  done (took 2.953198327 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077373607 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091620256 seconds)
  done (took 0.967508755 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065626558 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082637703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082704539 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071833529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089377024 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068640445 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092932651 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072112577 seconds)
  done (took 1.423041089 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084420638 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079398958 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086821301 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079213789 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096496081 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084343187 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155344052 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085826322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075049701 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083475269 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0825547 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067358432 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092151251 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068264976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091465671 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074620982 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065389866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091398113 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071199292 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084149181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070021054 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093183063 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070527264 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064307801 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08741098 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077002148 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09733195 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068362423 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088875167 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075463184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072685303 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080015528 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067825289 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085719437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066209441 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094602905 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08330946 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087119949 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077135892 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069390917 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09528458 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063392937 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090650842 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074294795 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094698942 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068584978 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067960002 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080361559 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06623004 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087050036 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063795767 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068072299 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080232129 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074993792 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087888267 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07875423 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069094146 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087521339 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071315809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089204885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074606107 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086336918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071060378 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06819359 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095342969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07266179 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094105233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063542527 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062063338 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083692231 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077951574 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108042023 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074542753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08611061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069236211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082017326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071261193 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069853023 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091348291 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074716831 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086186199 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074088143 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092559187 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068906744 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070311501 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09390778 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066639219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087598896 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065655558 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102061005 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066948524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065084716 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083986643 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078698294 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088449861 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067723472 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064950169 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093139181 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06202616 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086021354 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068849002 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084880203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079110012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089899994 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073782369 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093535267 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076718487 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067818598 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08909278 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064781599 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085807695 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067555441 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074402565 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079448757 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07047726 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0861046 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068659653 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076073909 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083599478 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068400707 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092246956 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073779748 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083120433 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065212964 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070638616 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085781858 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071029089 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09285679 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066715298 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062293216 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080565493 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07075508 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084959616 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072011865 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089037502 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070810958 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062906353 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083056712 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072574926 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094405129 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068748398 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068665912 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090734186 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069153877 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085036152 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074718804 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086838228 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067891468 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073969517 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086607354 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063305011 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088303813 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070487282 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066573159 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088965567 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071006746 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087681897 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069301764 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066239261 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090993877 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068572712 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084779482 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067858369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065992282 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09626783 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068997016 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080704996 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064735195 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092628233 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066044216 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066886743 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084579381 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070176821 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086009904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066151883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067187669 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087703818 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07881893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090050398 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068814014 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091415039 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078823066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083158231 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069912601 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067021427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08611638 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068891219 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093489239 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071282805 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087204385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068884081 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0643229 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091388752 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074516179 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084011152 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064714826 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065771764 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088019386 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072375194 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087342148 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067545161 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082373721 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068070736 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071126297 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088591435 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067094667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084822712 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072511558 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066469684 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092592587 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069474217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095552286 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071031865 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08130925 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072030586 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083175096 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074516333 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063735308 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083093183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067446679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068729317 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085954894 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071526404 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079693205 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074978316 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092372633 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06837786 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067330196 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085762432 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07507073 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08581774 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071540288 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071054665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089986798 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077204769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082876661 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070621292 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092763971 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065823208 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060329511 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088497034 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064483524 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08226632 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065546019 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065095569 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086222575 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073687033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089464524 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060851024 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068066795 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082345626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065850607 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078923723 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071326357 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068484234 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084408401 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072793299 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084904425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067826075 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0868012 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068002763 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068049616 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086817125 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071607879 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085980664 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071498826 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067210013 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088793908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066668916 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083864959 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069645223 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067726544 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08637696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073030978 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08552134 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068901331 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070086289 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087062959 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069153868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086355877 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06776187 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070418722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086711384 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068774592 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087488004 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064000761 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07417669 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085596863 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075703617 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086080716 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065156601 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072494203 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088640875 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073352818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087148994 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068807884 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086865164 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067775152 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070311745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092682303 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066175153 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096748241 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07609426 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086012283 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072002858 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06799159 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087718368 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06780023 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086648813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069701575 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068108634 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085944589 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073587644 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08839969 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068841451 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069457946 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086799115 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068694723 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086843386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063190417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066684259 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085587914 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068163394 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096018171 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069739063 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067366931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08546279 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069581288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085568611 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064873632 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093095574 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077340547 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085801032 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07553929 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067506847 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08783457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078638944 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080637729 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066410836 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065383073 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084098817 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075452103 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085858548 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077824199 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067615843 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08553734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065730296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08596557 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068186991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06209879 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084398464 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072359085 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084758623 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067372255 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068262972 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089567573 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069632618 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095729296 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067939577 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085348624 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069333877 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065771688 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085164662 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067655734 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06986147 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087644544 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066192197 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083061776 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068633624 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068193342 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087327323 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06803011 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086574004 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074782202 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06769616 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089121926 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070222311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08361822 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07050741 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0660257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084352246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066131431 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087917528 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06994586 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084698711 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075482121 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065383033 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084701343 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067210364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081137556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066292915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065685381 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083801075 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065820195 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084677395 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074712568 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063985303 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086335523 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066830088 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083384628 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072980825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066273254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087559327 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072772108 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084178984 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068200755 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091083772 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069993867 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086467668 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067625246 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067926847 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089819995 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065872393 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089843927 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067406713 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066753743 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085913508 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064159678 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084985877 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068481584 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067509001 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09262081 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069016302 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085958063 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068336549 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065278103 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087453523 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071292304 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09474163 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071900275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071220826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082814912 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065663508 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08728289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066967238 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069455501 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090432297 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074519948 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089337089 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068899128 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066402707 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094798514 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074522649 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088967261 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064988924 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087026707 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067748955 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068398737 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085518127 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067684128 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085211531 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070442675 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067480025 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083569545 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073482544 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086923626 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067600602 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084408054 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068287725 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066988908 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079414081 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067705555 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068195969 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088946726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068243841 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083826355 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077222444 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081904114 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067102097 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068648605 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083779043 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070862008 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07957435 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068016364 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067152839 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085651109 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061690194 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083416042 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064806567 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068059123 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083187554 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061890333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093722351 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075496724 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086733404 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066146385 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065442984 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079832283 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062515046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065558914 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085519966 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068823292 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094180995 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06579464 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08250337 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062617315 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067117381 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087638799 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070149346 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081592326 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063006807 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066053208 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087698918 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071854496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065279659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085393043 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069942768 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086503972 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064994925 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087180523 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063938502 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071354483 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098195269 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066724909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085615702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073341384 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091347853 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067675058 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06192004 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084846643 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069510242 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084446179 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067796977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066820988 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09872195 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068229811 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083230355 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065520924 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087034289 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066697155 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073561137 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086141397 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067294243 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088216474 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068574988 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091862225 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069732305 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091211729 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069394736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068905015 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084065875 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066897215 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083321318 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067780651 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069298167 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087678782 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072709373 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095008692 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067354995 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097404301 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077150361 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085643023 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064020495 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06585148 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085733244 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063165541 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068112911 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084476371 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066919815 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084340397 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067873368 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069436567 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092419827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069637685 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087260482 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068124974 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062258819 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088763004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071056124 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086820916 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065346537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068136504 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087439653 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.0719494 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089569335 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066043528 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069600558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088485304 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069217552 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080409181 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074403104 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064928492 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086426392 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066286955 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066155798 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085869548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069926256 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089547067 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067746598 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086053357 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075046562 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085969959 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064889889 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063673081 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089794597 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065371914 seconds)
  done (took 46.638141428 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109616692 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084258781 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063319329 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08242297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076263026 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084227894 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063971712 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064133854 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083551435 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067047617 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081811165 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063770278 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091010678 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087384349 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094536732 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067665408 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083093652 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064631736 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081790414 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064593858 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091306386 seconds)
  done (took 2.495513339 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076812437 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091697145 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074981612 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096612538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069579282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092273314 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074706999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091787779 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095904545 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069686537 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096171944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072663211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087108189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068941564 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087240105 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072889525 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096541741 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069439532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090683304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074632921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090752583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074561274 seconds)
  done (took 2.657364596 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068641559 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067470056 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087535583 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063344155 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066659212 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082171873 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071776688 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083755572 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071710779 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06611473 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085389185 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06679904 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095604446 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064058723 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068238929 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084169145 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133354708 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07148805 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06648345 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088629079 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063021126 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08860381 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064113689 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063092246 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085743234 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071501089 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086835661 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066428175 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066414285 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085963089 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067992821 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083120345 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069243773 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068036571 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085422027 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067263772 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066793644 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086256638 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063416583 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083272864 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068313337 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063466174 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086865459 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06900983 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066005108 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084670368 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069568937 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085454337 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063048801 seconds)
  done (took 4.539540772 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086635808 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131672156 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089711318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091202552 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104058567 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093991401 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069620518 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112332357 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065195589 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087234007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083972955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105769526 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087110917 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073007995 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070859482 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087624752 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068450844 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086382314 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070920184 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086415943 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072099838 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094691113 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101975048 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082307178 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090369925 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067782561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085432562 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072794805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099901269 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073017024 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091360146 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072802429 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102789817 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073683524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086853789 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070146929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103469453 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067183376 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089419162 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065138178 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089507779 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072387921 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093728487 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083670231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086675655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072691632 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086580937 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064151443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098690223 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068443949 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09378687 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100143754 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071325624 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083652402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071509225 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098926317 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066354619 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082514621 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068892523 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09710824 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064363822 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086975503 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079948168 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085439037 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0733987 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098474566 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071803226 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088056826 seconds)
  done (took 6.687890596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077263665 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091461092 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080886029 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099497932 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091484555 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073321014 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09034985 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072839511 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090560914 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077260496 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091175662 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112659243 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068428601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093705206 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072634474 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091537119 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072391566 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09169599 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090005593 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073461875 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090876925 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081122706 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09171772 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099105032 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103542421 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085944798 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072308744 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091752744 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09838882 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073722924 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102182387 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072459171 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090942736 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099133761 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084607328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090610349 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065809282 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091011927 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072264914 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091393537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067820485 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099152661 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090511937 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069062871 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09036485 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073502323 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09861565 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083883623 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094173697 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095285955 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072805612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099585584 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071700394 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091381669 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09837061 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105633381 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099919646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098779042 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072368672 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099396947 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098329035 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106029309 seconds)
  done (took 6.28110857 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089608485 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095043697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096006894 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062479214 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064225985 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089386331 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064376824 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082355544 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075191498 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092853514 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076752191 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088565537 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073078706 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095644438 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087239906 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073343705 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087982297 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070914219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092785908 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069986839 seconds)
  done (took 2.483260335 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077215013 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10393092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068087953 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071597235 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088721668 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071635322 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087110559 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069215349 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085114345 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069498579 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094604494 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077263903 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085175839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072681204 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094639307 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071784375 seconds)
  done (took 2.148231413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079076036 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095257435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080996715 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085428977 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06495132 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081467105 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06653262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061935726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081923072 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080901459 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085314775 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069502231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085337275 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065362207 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0624873 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08817951 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063318447 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082975133 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066293632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099364733 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077078688 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083624236 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067393189 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066832956 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085709914 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070996289 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085381172 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063761746 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083038877 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066945472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085230713 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073725515 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081461821 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065631672 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064260134 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082346512 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066334616 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084916925 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069628356 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065283712 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083564242 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066160953 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084951798 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067307158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080977249 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067505536 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062216396 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091585569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06429707 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084857768 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066230836 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086136802 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068109087 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076078911 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089211653 seconds)
  done (took 5.036939003 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082319028 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070596647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083597988 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064587081 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088404351 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068318578 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069010223 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087187534 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067441087 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083232292 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067768146 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087008881 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068454124 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069850409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08672771 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070256332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081333414 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068666602 seconds)
  done (took 2.229268934 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075053844 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068242265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094843723 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068304675 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087007385 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070147528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062899191 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085800707 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065605997 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084423209 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066895871 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068463067 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083921133 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069521228 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085110766 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06762525 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068181515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084537532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066394888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080569223 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070290665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064185287 seconds)
  done (took 2.503404724 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073995156 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093853863 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162568416 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106451782 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082538299 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098802405 seconds)
  done (took 1.484479671 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092953986 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100885373 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069628796 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108641231 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076943485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089035693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070827817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088625105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079245337 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102878228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069757338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096909732 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095272705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077169725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092370692 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074016607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087600384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068440071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086410152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104666683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068981488 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09496312 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069068901 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086408969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068854287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094705012 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076047795 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100830073 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086551403 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077166583 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091852305 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068260215 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096092007 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100704813 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070441316 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095353268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068376064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105736365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07379628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096011665 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068908323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093796927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095155528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073580762 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095525892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068780042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092092056 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067979027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088180366 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112042401 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073978036 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095063277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092192669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077182483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096006772 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111683447 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081404409 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096080184 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092429074 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082670784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095321741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073397787 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09546379 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100503701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073691379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096190793 seconds)
  done (took 6.580165123 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087129423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108242574 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071243961 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103889022 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097815306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071534319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089579242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071747922 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089587221 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071264345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129762574 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070966876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097756108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095825296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069208352 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087438998 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069306785 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095535319 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068713197 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112261468 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087259453 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076800669 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095919067 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094577712 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082215034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093922087 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068711022 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087340113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068277347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087554053 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073624113 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088167776 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095421763 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068484252 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095644907 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068871654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087524929 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073860005 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087736245 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074733158 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095831415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105041888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069294596 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087511557 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082321502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087725779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067602913 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087335506 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068453415 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087593752 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081719323 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101389633 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100853404 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095350654 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069342745 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087859762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069222332 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088008514 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069670033 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093165137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077069205 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08710468 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112076688 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069507742 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087904644 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076973105 seconds)
  done (took 6.49413382 seconds)
done (took 129.097486109 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203812065 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184115077 seconds)
  done (took 1.25653338 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071575718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097752405 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101324798 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130308084 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086470811 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100079893 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117621422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079111672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066032831 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086968831 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066712976 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087401956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131403822 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066813908 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085555069 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068669527 seconds)
  done (took 2.318552421 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105527126 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200346455 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110596124 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066864916 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100870284 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079199055 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086351397 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079553386 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096722654 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068206974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079305716 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097673386 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066211117 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097196286 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076883929 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099418291 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065116294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097657892 seconds)
  done (took 2.553836914 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106421332 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14280281 seconds)
  done (took 1.124428953 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201717355 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122074614 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201100782 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41428333 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203544194 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276732407 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172215591 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171664031 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.155496386 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168083519 seconds)
  done (took 2.956058811 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101461938 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171350277 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310108227 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139415365 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08664989 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116368468 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137413423 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089196114 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100883118 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099974186 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080486718 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097494562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097030767 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094818473 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075320911 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097853488 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121944259 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07595218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078173311 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098748276 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119907449 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069144467 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07649829 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09517076 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077765706 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097179103 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066348072 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085599823 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075926027 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094218601 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078239008 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112061428 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096612722 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129868119 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081700161 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130262721 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097860334 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071974072 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093290087 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072554835 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096504651 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076103086 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102960701 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076062276 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085470004 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076919852 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084947329 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066126935 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098403722 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076182632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097978839 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078198292 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12863335 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096096842 seconds)
  done (took 6.208991261 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.744518903 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113520434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094763031 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.807232483 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090599245 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106639483 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.714063607 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120739384 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211293037 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76604321 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091071485 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100910487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181839822 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214336569 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938722109 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287947118 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635651243 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105848428 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111251758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132607806 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139284543 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174854376 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149196475 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435584315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074724101 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091023369 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136153812 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073890951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.13742822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104844036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071711148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174269334 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227083486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157077838 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096260104 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069766905 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090585652 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148166415 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219787847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190023187 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157066094 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067950023 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069259429 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.159640277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130112403 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06946538 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138449174 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151521855 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.146000715 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094364154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074310716 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.160104274 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137586571 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142538053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100662215 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.273872983 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282351252 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06923354 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119892435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102386947 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215805947 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103859875 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.177541401 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138288275 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189261947 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068905908 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75358093 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146068661 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090403281 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074556255 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119135842 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073583683 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159588292 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124656072 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369424408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139775681 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094233048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06971202 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229256757 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083673232 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089382639 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139014484 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075595102 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121491296 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141879962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138791494 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165388405 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21180541 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141515994 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137500672 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093315901 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122811212 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07622475 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189348906 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190723408 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140660571 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184309329 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137053398 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139029556 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165394759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077029381 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150098131 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117826973 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099348741 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139595004 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168709146 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121814274 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103009839 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073032266 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138758446 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124369026 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105799567 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138819749 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147185259 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481403152 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150632231 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071109484 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110554598 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138912466 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139728645 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073990515 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234272164 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122106007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.147069512 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121402142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06661674 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119919327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138287896 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098665541 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122154005 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138091673 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074941207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2337719 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169594677 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096510828 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19412991 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16091684 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073480179 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148244281 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121557504 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148059827 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101741016 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141240096 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098532198 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.736867167 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142141916 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120358442 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093397016 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174313133 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071225256 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080208398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10300208 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067079745 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753139574 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104965251 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08109117 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103081435 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074221919 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122052953 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133715819 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098613054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138311204 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200393805 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075314008 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117919995 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101411844 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137960297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075457161 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102561744 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081925727 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104746357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121072407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072176392 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104886102 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145557147 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139889666 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190327971 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540254262 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089801305 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082408665 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198747154 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069637139 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261647047 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135001315 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196629224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140921155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079508271 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.279303369 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141330414 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177079867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105327135 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151397247 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06782939 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13486829 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14106529 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091163447 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073852369 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138614682 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162905357 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14150363 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930281396 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070474589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203042764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067155081 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172006318 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078261257 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099108168 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247869647 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090778699 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144533404 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.140995304 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092546064 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083025142 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.730706537 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104526012 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13737922 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093712293 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171173172 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139986465 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156080577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136917307 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073941289 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137235838 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185523108 seconds)
  done (took 40.292325884 seconds)
done (took 57.586866113 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256985827 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177097112 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.24021067 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142755993 seconds)
  done (took 1.790585391 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145450086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104937951 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116917304 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08476789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101923672 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086178351 seconds)
  done (took 1.538325749 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.403228912 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262688446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228625913 seconds)
  done (took 1.794252477 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281154 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212291372 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44623976 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29567654 seconds)
  done (took 2.24292103 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175546043 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111840702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067070849 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104879604 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15763627 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24932503 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125274156 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184259647 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078066907 seconds)
  done (took 2.202580759 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195119159 seconds)
done (took 10.667648067 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.205434754 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124073882 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.213417784 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194993842 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078425419 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.218570815 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.145815203 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.212681992 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105782867 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.175676332 seconds)
    (11/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164119898 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079411221 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100557916 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131521449 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095500407 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.206027314 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.137269162 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.245665781 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096267665 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071693875 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.206572427 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.176172847 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.175930909 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207266136 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148148308 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216802721 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096056868 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07811239 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073198136 seconds)
    (30/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.144645742 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099091005 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074374908 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120357183 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.101967551 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.084175492 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093578323 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113903583 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0931342 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094997177 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104224497 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.192781578 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133570007 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.216384444 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095063986 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.205928642 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09609664 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102812081 seconds)
    (48/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.099674809 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092414583 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0975709 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066461457 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.146046779 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105588466 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091796102 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09566075 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194741556 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065239672 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173035152 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074905244 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144295683 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.191777602 seconds)
    (62/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075038254 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164838077 seconds)
    (64/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110453554 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090354189 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.143972579 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159813402 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078648784 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.168951512 seconds)
    (70/309) benchmarking ("sort", Float64, false)...
    done (took 0.147145805 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07271344 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.186996573 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.16663637 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.067056401 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080378351 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199948894 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.121340936 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.075267949 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123085339 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147829531 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096267365 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092774113 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103741765 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.175026131 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075144845 seconds)
    (86/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.145015894 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099738975 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088774677 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088785612 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055594014 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120996533 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173376368 seconds)
    (93/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115217092 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103889512 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102441533 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.171650135 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077916987 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102995522 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185001987 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16869598 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077027265 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115098546 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05390171 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116603382 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08942343 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073306365 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052762345 seconds)
    (108/309) benchmarking ("sort", Bool, false)...
    done (took 0.159937115 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098047468 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082457821 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194589123 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159442695 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075084556 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063619943 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104298276 seconds)
    (116/309) benchmarking ("sort", Int8, false)...
    done (took 0.166704139 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072959261 seconds)
    (118/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074393343 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100023215 seconds)
    (120/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05295395 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171183234 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076356789 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091662408 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093071787 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052806179 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099701652 seconds)
    (127/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07558724 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090211514 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171515356 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088632728 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053892246 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.141047931 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115790046 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.160329021 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.181703454 seconds)
    (136/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.158432216 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090339354 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068253569 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074777097 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098512324 seconds)
    (141/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149953159 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093380189 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073996063 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089481155 seconds)
    (145/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102015879 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114672296 seconds)
    (147/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076735327 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119083065 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070530819 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054442434 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100234859 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180219298 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075865422 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074937849 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073863572 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075861084 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.140150426 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089880994 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069273897 seconds)
    (160/309) benchmarking ("sort", Float32, false)...
    done (took 0.152739705 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08981388 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095382437 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053950728 seconds)
    (164/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062772191 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054084364 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095834347 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055269618 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139229303 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091214147 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054574018 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089760608 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071810141 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053001343 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07625965 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067250353 seconds)
    (176/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092372405 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100846847 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069479316 seconds)
    (179/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162512897 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054456648 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052343516 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077508885 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099505514 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124405307 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067546935 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068570758 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0912832 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074861524 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114907147 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08022593 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153073803 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055804101 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09553568 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076753049 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078039296 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128929151 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05370411 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115229337 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054312878 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052527616 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089292848 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078451597 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200620357 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052322659 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.299659963 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075414805 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154491503 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065250759 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064764802 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18294495 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053205835 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116506524 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073677417 seconds)
    (214/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122873574 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05346686 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075540296 seconds)
    (217/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094204834 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064402374 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074475976 seconds)
    (220/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07574535 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064297988 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075958933 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099320854 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069248796 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052771749 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121656269 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053305816 seconds)
    (228/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067751709 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09084189 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114813865 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096306597 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070662018 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066597312 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09095913 seconds)
    (235/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060892156 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065121543 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089114785 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13258024 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102973761 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.159569277 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066508582 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050988106 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087730295 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060988269 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052827837 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191242052 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151914388 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07800837 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070913242 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114571669 seconds)
    (251/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061574767 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051860899 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075041585 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074827362 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105033432 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067516968 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05441433 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117816853 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053893044 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0731589 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089772286 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053232974 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0665213 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090712229 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053066635 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072937572 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139341202 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096986879 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090667105 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054591388 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192234104 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101218483 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067851639 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068071957 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140236852 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068428476 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113769239 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067380035 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.075861413 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054516204 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089036793 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091094026 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068066425 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092467749 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053599047 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085414176 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097823925 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053770581 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066613221 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11079244 seconds)
    (291/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207686038 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064642191 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073405391 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051468235 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074971383 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091996867 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075121332 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162840901 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073138917 seconds)
    (300/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074601951 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091708369 seconds)
    (302/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064703237 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062341707 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09116971 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07303519 seconds)
    (306/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070045909 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093014312 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053138505 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073349778 seconds)
  done (took 33.402224736 seconds)
done (took 34.313157879 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08509083 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117027546 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077413173 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118817336 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082250607 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104656774 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075622724 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104368127 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082495895 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105876805 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081617244 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055821653 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099450452 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077471735 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099605812 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094716435 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103540024 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074654801 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097096808 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067533646 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075351778 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090038048 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068675462 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057022702 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102614924 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074495841 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096561641 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077434221 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067109809 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090713142 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070513743 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074010832 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090962539 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080895273 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095319624 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07594794 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099104186 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078045079 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068907 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089713756 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075556604 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0667975 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097016727 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07519929 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094673808 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072856579 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075543665 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104069209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094058878 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093212293 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07571011 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101567253 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078411406 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073750323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093976183 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075157454 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094108324 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094713726 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098452519 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071183604 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07514559 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099085915 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072822445 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09780657 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07549598 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077661306 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101199831 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072675006 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100484866 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072840494 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067086815 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098925435 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071036124 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089423577 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078307386 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077779556 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089166792 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072932482 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07379114 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09683782 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066923549 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092414933 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069128568 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073695655 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092489164 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056767746 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071955016 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095429167 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066342683 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076049422 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096057149 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074576749 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090580562 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078453368 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066807439 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094757077 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067953463 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067022146 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091764199 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071506074 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088555944 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070285323 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076961706 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091085418 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073719028 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081450545 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09064697 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074215101 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088405813 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067354559 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082783639 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100282469 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067651638 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09286335 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066599254 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07465982 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088870193 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065114055 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065464197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088465022 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071595 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06567542 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09007666 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072999458 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101555901 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066213767 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070059654 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092167699 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066089416 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070478769 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087409943 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066390205 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08897685 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06327031 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068194163 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089052192 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074367911 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070221472 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09670636 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068133851 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096491203 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0699866 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072398081 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092500478 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06515834 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059061011 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090101758 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067795471 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066938038 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087142079 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067632541 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065554552 seconds)
done (took 13.362017544 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068446405 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169221684 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124428924 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095065667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109411441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066488749 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098784091 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102252291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089957679 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125315563 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086889503 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106342245 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114121435 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087215568 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066229291 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070020785 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090280357 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088545036 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124032686 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085576923 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138918686 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087104023 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118374604 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089596616 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111004426 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093928581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088284657 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070173867 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068845709 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124027579 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107560077 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069599562 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066027328 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121202569 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115355401 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084694211 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087517944 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083984063 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087670711 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065840597 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112558925 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100201802 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103122236 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081665616 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093891703 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06852887 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08864234 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086036628 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113324304 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080148217 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110525505 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132017104 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069067702 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105594836 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065107811 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110073498 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081672596 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090219192 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067424698 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092157296 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068399209 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071485347 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113624764 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11691104 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073226853 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106785933 seconds)
  done (took 7.206252524 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086430484 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118285822 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086152662 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109406879 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067541411 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068381358 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091593273 seconds)
  done (took 1.595407645 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069523871 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090869026 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114852113 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092029973 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111563891 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089262313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101824957 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06953211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109273182 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070234573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089350049 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131390719 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069411381 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.100277563 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092662545 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09212596 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09281621 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091271385 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071875799 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116091535 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071319514 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088487048 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095312849 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068880464 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106821889 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068838472 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141524922 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073520087 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069205499 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096327609 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067119119 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141507092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105325673 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078469155 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067870953 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106079607 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083624686 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089645066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085162792 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097865803 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084118857 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06912252 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092851275 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067350169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073058789 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103840381 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070914839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092679208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071430009 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089819444 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093459648 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083458358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092244932 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073146828 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069916377 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098233427 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07898818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092050103 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089060096 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070244226 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110393419 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086233547 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107021423 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086505011 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09502483 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084523092 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106797569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07162648 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070573686 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096050643 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086591069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090362338 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071921042 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079504443 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094782389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092747824 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117035905 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070688841 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102550439 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068940877 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069309173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092289251 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093471122 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095260607 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069182612 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07304815 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096110016 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067073694 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068344172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096902352 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067164737 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070153776 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096050993 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069623114 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09447324 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08690129 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069182343 seconds)
  done (took 9.459439609 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070225371 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07045992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0945831 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070037458 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070539723 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093734556 seconds)
  done (took 1.452264092 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100356288 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094999628 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084671413 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098190618 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108884435 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108111101 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085480664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108789392 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087670842 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105286038 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08438795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109315332 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090119816 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099358113 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083770095 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098003296 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085187339 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102546517 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081751469 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099902122 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09135919 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097981363 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075934203 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085852175 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096697565 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074812363 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103555886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081613612 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104944143 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084756495 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097957038 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073129522 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097549376 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085243119 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107582174 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073949501 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09931908 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073840176 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101843014 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073117984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107676554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075547899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080420034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097417355 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085016511 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.097816175 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073652723 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103220321 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083643006 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098007663 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074005681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098355492 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073666264 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096451185 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074812812 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108424811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074176209 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107954002 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075846977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074175103 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096605501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073237895 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107810019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072506343 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106240344 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073905934 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097265534 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07606416 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099937401 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07489515 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073976678 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096171494 seconds)
  done (took 7.485431352 seconds)
done (took 28.163132305 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648504943 seconds)
  done (took 1.622960693 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.766701913 seconds)
  done (took 1.743768544 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.348117522 seconds)
  done (took 15.331083392 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.605210007 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.747453967 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.803366442 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133415243 seconds)
  done (took 3.266916067 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887093018 seconds)
  done (took 1.894454385 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23723787 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228166525 seconds)
  done (took 1.450433056 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733517879 seconds)
  done (took 1.725854089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.293873116 seconds)
  done (took 2.280443914 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321465944 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178866202 seconds)
  done (took 1.492353214 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53064004 seconds)
  done (took 1.522546342 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.459855877 seconds)
  done (took 7.458173926 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232803795 seconds)
  done (took 1.240737678 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271033452 seconds)
  done (took 1.266574932 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.068849705 seconds)
  done (took 4.06557651 seconds)
done (took 47.345529502 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080515586 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08441806 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107441223 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080931771 seconds)
  done (took 1.344248421 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080351013 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075345207 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102636921 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074827744 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103497081 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075583663 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101807738 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079486939 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07435291 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099665138 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075417729 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098333015 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078368916 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099879178 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073237993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077384923 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101492877 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075303088 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102005586 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075598029 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073117794 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100282394 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078531425 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097604193 seconds)
  done (took 3.077756857 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080044377 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074963809 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10005392 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073807538 seconds)
  done (took 1.328633095 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079748554 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117196845 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090823258 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07906505 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1191562 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112628101 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071493898 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071197742 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097536241 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079434828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093126972 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101085007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113899052 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07827725 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104778548 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067628732 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071099497 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113412684 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079822108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103201715 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073238885 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081805249 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094030008 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093007838 seconds)
  done (took 3.193550753 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079032169 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105932299 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104988294 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091409034 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118977525 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068021669 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102860448 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094053396 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150012879 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066743816 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096509233 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067833328 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098005422 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066478246 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078745267 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134197538 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114202031 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.095058068 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100278174 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09167441 seconds)
  done (took 2.933803845 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076269184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071765715 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091084973 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070811544 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078118247 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09874673 seconds)
  done (took 1.492622747 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070242034 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069264666 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092920066 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06819917 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073339399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093102841 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068002908 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068303044 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092699514 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068614887 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068250919 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090999931 seconds)
  done (took 1.928378714 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.390870044 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094079602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068074314 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087188811 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072972675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091799561 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082344668 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070030622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11761845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069212657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092457695 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070265938 seconds)
  done (took 2.315700201 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262663502 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078937775 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330807854 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172066944 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143598801 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156746048 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107099118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143085768 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20084347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140548664 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20490572 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229487312 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137472519 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171435173 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117991245 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.110994506 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215553385 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22544948 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107792009 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226261885 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209087802 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158429032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18439916 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130728512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136944448 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153470368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073489204 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107781488 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234922663 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163318315 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204852803 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140084761 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100140004 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235027865 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228364889 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200379972 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163916521 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086572563 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159977931 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167705435 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258026641 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116700144 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195860599 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13661084 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107909882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176658152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148326201 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14965192 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140094112 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11669702 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176320289 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244512371 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167710397 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114616146 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140120235 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14369773 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145279785 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10517719 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245510225 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220168113 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161274165 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097750769 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099437401 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21437448 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162685254 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144940992 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156265866 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122604772 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171725646 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215582005 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149016584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17751656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183793031 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091159892 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14965503 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196388273 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157879536 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205618201 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156517308 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09991817 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155652508 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133540413 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083873701 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171316764 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077512917 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236993635 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128491291 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142726615 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141553976 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113500888 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138026847 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225033117 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205106563 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107440375 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09356654 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132398459 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151248782 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179136262 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116090019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111397635 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174938708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081781452 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169720381 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102717175 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156287739 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081692504 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154199279 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190834003 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079300578 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158098944 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131845361 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131820922 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166685588 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225446279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093343679 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111361504 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204523429 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181842541 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110400767 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203418802 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192809174 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130640579 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134265846 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182922723 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24465723 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117699255 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22633708 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137762438 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086913547 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11632661 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157267618 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143113953 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151872878 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085110469 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156230838 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229638289 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102868475 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098587548 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192627136 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084808228 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110027073 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143079266 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10487667 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098157811 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130120239 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136405586 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17436661 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156743208 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13656288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156256571 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127799011 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231135304 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117318349 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107687379 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132928451 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096975353 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166460518 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194922577 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108332923 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228430128 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158137848 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134366399 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149464451 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085948586 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172427559 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107818856 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073283476 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203577266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115592565 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138744801 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.213854215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132863283 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157210304 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15449925 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166745258 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162826609 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16455114 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134291629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115993248 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142524142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158660986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076281135 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122887573 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111082064 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132750278 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099631534 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112055945 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17454326 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184662806 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101141199 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142944726 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126276837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184103023 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104727354 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162814893 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.151320254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123580336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189436039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216237694 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168772821 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128977247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17871187 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098600019 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076336402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119707404 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159231526 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085868757 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112924558 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149466743 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206631788 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159184699 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171981388 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140243363 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152331147 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190758953 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09953256 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119202039 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209228023 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156963374 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.137876387 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114199571 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128135956 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179596334 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139816297 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250206425 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146484007 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154749395 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212572793 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132241819 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082976502 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135305217 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17077519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136638679 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211841004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10256364 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116327411 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140559295 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109517965 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133090861 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159608257 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151355514 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166913923 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147472947 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163276107 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105598282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148287873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15500545 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155554452 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066309202 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17543216 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197081266 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124595827 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149238581 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216100496 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082677608 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156409444 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242300007 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178258529 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113840896 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141431657 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157197335 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160432477 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149932346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172783665 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141745619 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166233818 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140575962 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114375203 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090462264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127347607 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137075391 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124460641 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143388503 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148131983 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123501065 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163416755 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142124602 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141737115 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149624719 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101944881 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120615564 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100163442 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23818773 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153667894 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23738455 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130932672 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183491327 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230941974 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104485214 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081947638 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109695954 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174964098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087149013 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193692881 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100269798 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13568889 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158596737 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20412535 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099422005 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097075006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113986262 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19390489 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141545963 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102016791 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136171762 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225540591 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133389885 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083232679 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1575619 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135786281 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132367615 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238837356 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064875734 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125346603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081498772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084451454 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187097152 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191566011 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112049901 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.134075742 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146297423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177014185 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163046117 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132738896 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100855075 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143931898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210387792 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160747586 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093012928 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143743794 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187339192 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192269972 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137910661 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125328191 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236021608 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191044451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227533818 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092770802 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14664666 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145871604 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140720313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200687747 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087011657 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230101915 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111968102 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171090581 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136675812 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122795588 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163041371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126930227 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091390599 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210302784 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152865733 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102367263 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108988556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151135275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155555519 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138983031 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078382991 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199243629 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076437563 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197041229 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206180554 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110801597 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1367641 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099276725 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111820513 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139625497 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134336411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090299768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.146804148 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233362188 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094077856 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212577373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175484424 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145151343 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197580566 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130380113 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666942969 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08195745 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21817712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151848084 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243206483 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128382327 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150435089 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11441566 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155447336 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204568832 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136440508 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206535378 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166499074 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153497356 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082121058 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13369945 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141371233 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121301393 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137695222 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146821386 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148327642 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130629426 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151929049 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159625562 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111042675 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099477164 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221554528 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147848858 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176813335 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174031703 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115571322 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151420696 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199508952 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083325045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154503884 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218657298 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139646941 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128851238 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085190198 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137880978 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237714887 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075696392 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225409965 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156630615 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142414759 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145399551 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151483052 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189808631 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113247817 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181790175 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099302187 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142293422 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146598801 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113862744 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106393429 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110311031 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142833828 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130130666 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133085879 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124052676 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211426261 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073339545 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127964204 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133573975 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17866639 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243525936 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118519591 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08574312 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151641844 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144945155 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14763278 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157192343 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11010173 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111347493 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085396561 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140141579 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116163512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14512176 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134075175 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142011172 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231518406 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08686916 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256169611 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125921527 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135901948 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073206633 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108280428 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09978107 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129447565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140371303 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12757985 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210875803 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127630153 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119415497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096843706 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101969938 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086595715 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162036509 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140469726 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1521635 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127529552 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.092102284 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140769193 seconds)
  done (took 72.678022151 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166550456 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.121412365 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124759754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171753492 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144802642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236128115 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179739826 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222026553 seconds)
  done (took 2.454275125 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071216757 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117114378 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104966319 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11989001 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0902601 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070298444 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295726259 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110443823 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066640155 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.112580292 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118197963 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091107478 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.469233217 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066859824 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09747135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087665777 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06737002 seconds)
  done (took 3.232749978 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.431925633 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620407162 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.447995075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075377965 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.869469669 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105254066 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.335377135 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.159490604 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090490535 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.42176396 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727076849 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152115307 seconds)
  done (took 17.523891644 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077652937 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071134033 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112519804 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08579204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.10038194 seconds)
  done (took 1.536928049 seconds)
done (took 116.03217494 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08180233 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345851479 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055048857 seconds)
  done (took 1.525087601 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085647613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086888286 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114046176 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085228977 seconds)
  done (took 1.468455586 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076848213 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078280743 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113486951 seconds)
  done (took 1.363978589 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.27791513 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163995408 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088794753 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084995448 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079742234 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107235656 seconds)
  done (took 1.369992229 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07547987 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077405213 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099406693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076375982 seconds)
  done (took 1.418202252 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078175295 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054007156 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056835454 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082802502 seconds)
  done (took 1.368298254 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091865105 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107977929 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082752939 seconds)
  done (took 1.375173101 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110011872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112168454 seconds)
  done (took 1.317666677 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083975044 seconds)
  done (took 1.173991174 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09421512 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140676607 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15466423 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135487562 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.163783467 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135051723 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085481259 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113495024 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102623546 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088055354 seconds)
  done (took 2.311250093 seconds)
done (took 16.392107968 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079901915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.390326525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363520727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119671779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669763551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359037022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.010701248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121254433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122115718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094102101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082977812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674391798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003287812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3450518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994699302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325317518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674056175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06760241 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06707511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093233118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96372012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092549468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067705934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067650149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.672992547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371202803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092824999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323550908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067265806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094930665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355563575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09366143 seconds)
  done (took 16.00614844 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072152668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14662715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075529334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086588016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100359834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071477365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10041238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071009711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156270102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069882055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114748104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069984225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100524673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071685049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089876447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097644678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070975514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07110005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09776321 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070000479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115447211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069795417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070330759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097801446 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069977864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108898531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071179621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070007296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096852328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071607713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099360105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070850681 seconds)
  done (took 3.911889612 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116992929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155520921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076073052 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132657558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116636598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099488699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173770086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09592434 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158637825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070168676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113426812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070154625 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129737469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07121385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117604964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070572239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071228935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096473106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068396545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094409958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086401369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067671073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093453462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068158819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093571163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080761794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093726646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069086302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068128079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095306393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071180314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068767382 seconds)
  done (took 4.159609275 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074091751 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076709825 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111356306 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085853738 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097859821 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073792094 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074815247 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098660756 seconds)
  done (took 1.798582935 seconds)
done (took 26.975879715 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080614989 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071298673 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101948319 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08270209 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101282837 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081375053 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069470591 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103802418 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078105062 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074744968 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104174604 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069265247 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097759042 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070386495 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075362448 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093973427 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07950125 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097853234 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079178159 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080697372 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095994514 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07647323 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099736331 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079091294 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106391483 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080530255 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084701331 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100699185 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068982158 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095323636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076259335 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08413682 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.094066968 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079161166 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094942795 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068101439 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0674415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093323823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078889516 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099495424 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070273441 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099509171 seconds)
  done (took 4.681235841 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091269476 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094069026 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11347473 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067849392 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098886862 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06480246 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114125891 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065257583 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060815614 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113958132 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055551046 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058842719 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088153328 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053916938 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059151449 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05592113 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08726171 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055615795 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058883971 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085768306 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057628272 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05351492 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085898338 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06250398 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055545751 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061263911 seconds)
  done (took 3.025211693 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076753797 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085504759 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115472302 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130790054 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134711395 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078757715 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10664759 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088636966 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113726841 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069335646 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072946657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124904947 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090375993 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102889045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069923602 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129035579 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084442549 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070818223 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103751326 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091915627 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112710815 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080165137 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121345245 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08272679 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069154668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098420323 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073237407 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110711687 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075125768 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078242279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101308704 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073936139 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098062203 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081049042 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100112223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070928819 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093780647 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106378399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078904857 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097486221 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073443774 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070305033 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116913875 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112984718 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097302635 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076505157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104823568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079448246 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069943103 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114856619 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078971678 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096195697 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073782485 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068773147 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096803639 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084160532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071127225 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098937916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077483844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097605369 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079713175 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071512865 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109859671 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067734336 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101708451 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067265692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067959203 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092640813 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090702958 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094532876 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10767426 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095913561 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068812005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07719559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101044451 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07324552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093963006 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082878638 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077067469 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097390539 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075975055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096090501 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070648512 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08700883 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096303062 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068579716 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068618923 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100613172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069570768 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094631505 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080276975 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067794732 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096678035 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085362674 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096169109 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071276101 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075483314 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10084299 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068354552 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107246796 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074559989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094818243 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077517393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067440878 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096865127 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077484446 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.0979943 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066436252 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072267622 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099451842 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068591444 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06882937 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095888546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06912382 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103194594 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074075754 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071875673 seconds)
  done (took 11.394961772 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193493206 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188475316 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072472045 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17959482 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07684448 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108426806 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177358917 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096071241 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096787015 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068126138 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070928694 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132222936 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.097430958 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.135231092 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10436878 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067758487 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11202427 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105196492 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179354533 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.173900306 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113511598 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076581618 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070218477 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098975865 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071791718 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07944085 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113791014 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076016244 seconds)
  done (took 4.257457186 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083776063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131006794 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075406637 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090336667 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120461459 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068603206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102083651 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069161629 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107106284 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079045132 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093994759 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073504746 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073574672 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103798722 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068490768 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104730864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077344036 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069911736 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098196925 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072582323 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10729046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08276278 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07403594 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069618103 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075819778 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097826214 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0673709 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115406038 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069672549 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120232172 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.0682678 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075563655 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111645471 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069978793 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096905824 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073691637 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072080012 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101651752 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071701383 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068211977 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0963382 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058861108 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06893513 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110443865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075495664 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087546748 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073438425 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073070831 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099613053 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065546302 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096984836 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070597293 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070685449 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103364843 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072498475 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072147016 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099137748 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065377923 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101851103 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071559991 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064308943 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095445173 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073711806 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068605937 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105341007 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073693427 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096563265 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072230754 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072933129 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101451518 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072243655 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06995049 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092069161 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069288779 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099470482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072132151 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072081874 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093606159 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067874509 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067607902 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082488833 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068006184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053275171 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098206392 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06586647 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066255676 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097802222 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073553161 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108117256 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068950284 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100568217 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068655228 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066429259 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100054275 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064296319 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07032363 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110092425 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109682798 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068846786 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065902926 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109375871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073276597 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066735279 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083759612 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07476575 seconds)
  done (took 9.860776307 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098470587 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094319257 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097317065 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082817366 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122638512 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092381269 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103363023 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075018773 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07036456 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114824199 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068381507 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10407877 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068647917 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077909821 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127283707 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076460487 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097840927 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076738516 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07260432 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13446203 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081761454 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108273641 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079409966 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09604703 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07262853 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079681805 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.122760363 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079112573 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105058518 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084227152 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079515901 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.121785407 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085346293 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101084724 seconds)
  done (took 4.287566921 seconds)
done (took 38.607758581 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.192080363 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.386655243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.176355038 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.026531683 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.198159429 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.194401923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191208299 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185293644 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.810539531 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.180205588 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421030543 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.752995347 seconds)
done (took 59.842080377 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.261151168 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.322320834 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477323522 seconds)
  done (took 3.922256936 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.522740978 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.040718343 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.436188517 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179144275 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191881974 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.4817659 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.707889006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.964633315 seconds)
  done (took 27.124399758 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.18043212 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.516960251 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.310589842 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.29549053 seconds)
  done (took 17.426924484 seconds)
done (took 58.38210282 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.175499437 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.222946808 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.187389632 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.163948135 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.276551419 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.201278169 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.56810487 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.210273241 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.174736666 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.170804636 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.175399077 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.173831929 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.193883779 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.488512953 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.17663828 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.176703469 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.174522989 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.738405907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.535438828 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.178355132 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.18667895 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.211635828 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.185117755 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.17643877 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.247250527 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.174186058 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.172153434 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.171835127 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.036984424 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.177227819 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.242740247 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.740073992 seconds)
  done (took 189.207914463 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.175476924 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.182477259 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.298151894 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.217144646 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.649933023 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.373114443 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.314144046 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.706463279 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.187446585 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198513851 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.517953372 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.171978877 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.51099222 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.136181202 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.182712183 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.24810877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.462930401 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.49901753 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.186566617 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.434627596 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.181846961 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.387031231 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.301843995 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.433320484 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.199634208 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.246436582 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.187234101 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.18464405 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.35156661 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.420660584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218883626 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.218350194 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.661094938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.031406281 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.193763006 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.194291734 seconds)
  done (took 149.186840713 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.414173344 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.171276905 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.172681805 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174312691 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.170557024 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.197664452 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.172752554 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.617113286 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.618434308 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.663498206 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.355929631 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.173068917 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.227131911 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.326676209 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.17234008 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258927224 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.183199838 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.170857543 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.187085416 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.197390369 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.173368125 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.171974845 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.616971293 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.184627258 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.341876385 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.175091844 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.172620791 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.196412976 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.561150971 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.170230467 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.172104083 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.198013409 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.474811254 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.208387357 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.169921711 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.383822025 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.417419064 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274503182 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.172887429 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197664828 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.173097739 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.433243586 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.172116533 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.173170759 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.175778384 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.667828292 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.172966712 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.617843994 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173095156 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.991907104 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.172732645 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173801903 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.373667448 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.472381798 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.17381995 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.173581711 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.176124009 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.173872864 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.173462896 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.200037406 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.396162544 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.26581399 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.175010869 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.175296156 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200461333 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.173506359 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.319677267 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.174343383 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.351950796 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.230690767 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.278235475 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.620881951 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.172474928 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260605025 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286724281 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.172701915 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.173705691 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174258304 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.174842422 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.275753562 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.170548825 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.514658254 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178983848 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.175507771 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.230736518 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.262087159 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.171867008 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.375631514 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.175293498 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.174386956 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786369233 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.170278957 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261127788 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.172259824 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.174687187 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.175887693 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.516025308 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.619303229 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.255845821 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.176542348 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.378569036 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.17613687 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.528592743 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.609545217 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678521136 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.176957841 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2779584 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177881272 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.176622433 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.174893367 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205522007 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.176228011 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.235054487 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.173182713 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.568303653 seconds)
  done (took 339.287060743 seconds)
done (took 680.21942938 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.841351008 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.821131467 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.928803063 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.822267894 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.799664423 seconds)
  done (took 10.333539845 seconds)
done (took 11.452532887 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.339114855 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.335544023 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.223328379 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.33745483 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.198938911 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.350030909 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.313282431 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.196619237 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.269285418 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.23882168 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.265183883 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216672015 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.199792441 seconds)
  done (took 17.60322018 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468398729 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.460488157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238625412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.474898723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21716558 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477001105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365796126 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.373955359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358014975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.193479201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191377725 seconds)
  done (took 15.940962272 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473304472 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.460452551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24240601 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.480347746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216609207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508822682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361794133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.375831876 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363911723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.192709294 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19121407 seconds)
  done (took 15.989551822 seconds)
done (took 50.653233977 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.187627958 seconds)
  done (took 2.308890061 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.218573449 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.375194621 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.200779738 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.190890596 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.18825301 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.192457044 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.191885022 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.190496391 seconds)
  done (took 10.872178555 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.184146316 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.186373915 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.187510337 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.184458292 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.187154815 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.192462493 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.18438304 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.186276954 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.187315984 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.186771977 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.184110231 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188937829 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.184818634 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186400857 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.184600335 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.188044903 seconds)
  done (took 20.106862669 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.186731367 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.185567676 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.185243243 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.186893904 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.186236635 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.185424881 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.186697726 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.187018936 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.18519393 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.186791293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.18658602 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.184842516 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.186261098 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.185949025 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.185026815 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.187467742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.185710985 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.185907859 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.190673873 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.187071966 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.186395685 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.18598021 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.187476549 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.187619167 seconds)
  done (took 29.600236098 seconds)
done (took 64.009649739 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.932417002 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.587236589 seconds)
  done (took 8.643236206 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.187922209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.188403432 seconds)
  done (took 3.500835101 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.188100795 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.189742106 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.189548104 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188243392 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189819233 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.188760383 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.189954667 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.188522622 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.190482661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.188577387 seconds)
  done (took 13.015697137 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.189565367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188696204 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.187995189 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.190459629 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.188376717 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.186440826 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.189882255 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.189878004 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.189287354 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.187658398 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.190524803 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.190524063 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.188169682 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.187245941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.190398067 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187570812 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.18837222 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.188127002 seconds)
  done (took 22.523758038 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.190365474 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.191460067 seconds)
  done (took 3.507694087 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.18827947 seconds)
    (2/7) benchmarking "second"...
    done (took 1.187944264 seconds)
    (3/7) benchmarking "month"...
    done (took 1.188645918 seconds)
    (4/7) benchmarking "year"...
    done (took 1.187894877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.18821311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.188885499 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.188524491 seconds)
  done (took 9.444495743 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.191732411 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.359316174 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.433673801 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.749481301 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.192745826 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.195604678 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054390383 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.195176571 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.196750299 seconds)
  done (took 13.696111654 seconds)
done (took 75.457149793 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.15414639 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.181050948 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.935027014 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.190449696 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.199793721 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.527106131 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.184570309 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.299173046 seconds)
done (took 36.798702015 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.199043118 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.863972696 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.865872771 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.181699565 seconds)
  done (took 11.039270849 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.175423737 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.000127768 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.173434308 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.102134075 seconds)
  done (took 17.578811279 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.73194034 seconds)
    (2/2) benchmarking "read"...
    done (took 1.513915174 seconds)
  done (took 4.373327437 seconds)
done (took 40.317478904 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192412347 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.192359314 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.188952962 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.189508624 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.192762609 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.190852638 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.189896561 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.190153292 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194002518 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.193124106 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.193646389 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.192887085 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192996687 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191204473 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18975659 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191462236 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.192682703 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.190863052 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189103502 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190658456 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193360833 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.191398677 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.192046414 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.191912945 seconds)
  done (took 29.726939978 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.192797993 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190928975 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.194086032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.194146433 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.191117203 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.194917172 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193903045 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190447065 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.194307517 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195968225 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191591604 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.191191546 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.195165209 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.19115496 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194202803 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.191423314 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.195467621 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191472712 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195114117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.192072659 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.19514766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191754907 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.192791912 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194159808 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.191461225 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19192568 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.194887483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.193228769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196206619 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.192482382 seconds)
  done (took 36.92687834 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.197928263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.202108511 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.196103645 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.193607519 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.194308695 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.195359246 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.193804082 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.194160417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.194591652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.195178407 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.194633156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.194846215 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194975878 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.195210235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.195749506 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.19504454 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194731194 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.194951641 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.195392454 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.194820211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.194725932 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.195654055 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.19588152 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.196208816 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.195441336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.196833853 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.194969651 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.196243971 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.195342922 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.196116775 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.197206759 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.196207352 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.195628949 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.195821237 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.196441293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.196734108 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.200406094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203697179 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.196747032 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.197810931 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.196633547 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.196394437 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.196179415 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197010495 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.196454994 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.198344195 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.196899962 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.1970468 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.198595869 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.197367701 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.197505688 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.196635329 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.196952389 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.196680366 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.196273795 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.196510314 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.196620148 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.197430892 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.198584347 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.198274619 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.196602904 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.198699432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.197657086 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.197735038 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.197696499 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.196645878 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.197795776 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.197499335 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19861886 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.196531587 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.197391896 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199078787 seconds)
  done (took 87.288242386 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.196468606 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197096814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194512463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196375472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19546138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.198717154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.196506968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198751975 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194667535 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197195281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197523966 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195444214 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196931523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19759211 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198421472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.195685012 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197002126 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195964683 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.197083082 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198254751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197097019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.196479464 seconds)
  done (took 27.462807255 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199700789 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198822912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.197414452 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.19901943 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199308548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.199031299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200056272 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199862049 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200126278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197813908 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198170938 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200234428 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197815119 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198635669 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1977752 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.198465148 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200566524 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.19866717 seconds)
  done (took 22.715747687 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.198907538 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.197963345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.200227432 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197327141 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.197611079 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.199823032 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198670645 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.200323283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.201476602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.199027649 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.199790186 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200744843 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.201273162 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198784292 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200089809 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.197909345 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.200089809 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198280806 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201579348 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196905037 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197534025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201409153 seconds)
  done (took 27.521979895 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201125487 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200537938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.197914582 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.197800652 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.198136986 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201069651 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.199502835 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.198099275 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.201098507 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.201680351 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199033868 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202088056 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.199685503 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199919409 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.198958019 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199898029 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201705096 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.199536083 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201765807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198029315 seconds)
  done (took 25.134971821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203358382 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203984532 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204206013 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202772975 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202890321 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.203655175 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203731505 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204867 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204331138 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205127417 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204691664 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203390701 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20244775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20370733 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204075574 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204475163 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204450021 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204680999 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203912115 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203975487 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205313663 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204401416 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204641643 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204432829 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.204746379 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203582874 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20565708 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204851601 seconds)
  done (took 34.853864668 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202349726 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203417987 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.201008763 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200573634 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.19906097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.20211487 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.20135705 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.201398012 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202023986 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201002465 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.205280077 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.204375306 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203888131 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.204580444 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204069364 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.205377819 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204765224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201656154 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201947476 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203016784 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203888952 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206201839 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.203733002 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202132167 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202874275 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204683718 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201540941 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203184607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204874922 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.20304334 seconds)
  done (took 37.22870474 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.222614296 seconds)
    (2/2) benchmarking "in"...
    done (took 1.223110478 seconds)
  done (took 3.585620419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.202522186 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205423696 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.204017107 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203634584 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.203435152 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205353099 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.207042498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20317017 seconds)
  done (took 10.776264087 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.205547912 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.205200925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.20545869 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.205654277 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.205941864 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.205446824 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212146289 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.219952369 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.206440427 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.205833301 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.210335961 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.211337496 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.208227699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206420459 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.205685619 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209012618 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.206764929 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.207337157 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.207871849 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.207552431 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206972642 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209903713 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209575887 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2040558 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.206935401 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217642545 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.212659027 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.206704369 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206082744 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.212000765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.206134731 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.203588401 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.207307008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.208463884 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206630012 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208796616 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216852893 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22227613 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.214904325 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210106906 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20798775 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.204135154 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21007097 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208989139 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21126965 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.208393989 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.208446554 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.207038737 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.207183223 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210765442 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213587827 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207073838 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206105563 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213290567 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.210545969 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214939552 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.223218062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.211232868 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.215689648 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.219280238 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.220578067 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.216870858 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211276618 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.209719101 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218227071 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.231193751 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216155757 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.220968171 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.206762518 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.210298773 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.21690535 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220659024 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.219475903 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.210735351 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210351962 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.209909225 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.209745054 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210087757 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21852584 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.227663116 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.21116368 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210468156 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21732197 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230662054 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.208822849 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.210191729 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.209609201 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.209061715 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.210501435 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220747638 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.2252886 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.210753807 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.20875045 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210767444 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.212493219 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.211079287 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.209469569 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211835322 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.209289906 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.215709003 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20555198 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.207437477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.213459943 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206160583 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206765805 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.212862118 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.204991875 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.205002543 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.210012599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.198784516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.197058583 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.199096812 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.203381751 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.193955754 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197930675 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.204534226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.196736066 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.191260802 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.189806836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.189574771 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198548742 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.213242512 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.189774851 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.189529261 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.198183443 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.191322745 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180646801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.183799708 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.181603098 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.179029558 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.179177438 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.18350139 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.183698966 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.184129517 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178702682 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.17860852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.176790748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.178998844 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.178321453 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.179644715 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.180625631 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.182184375 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.177931207 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.179439564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.177308033 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.179421002 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.183286488 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.179212849 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.179582177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.181080878 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.181598969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184693609 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.184825706 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.184395107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.185131638 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184463213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.183054565 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.184888196 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186269387 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.183020678 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183597486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.183690343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184883199 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.183621337 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.186243588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.183593646 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.182385261 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.185783207 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.183933123 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184616724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.182920992 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.18338402 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.186993294 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.192143214 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.185109814 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.185163503 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.187271434 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184266131 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185045807 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185027598 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.187221558 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.192181297 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.184933111 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.19208012 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.186190666 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182927661 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.183058954 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.184165416 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.183630451 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18300813 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.184810189 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.190885391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19540405 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189998372 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.181216581 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.184739448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.183115821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.185318092 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.186805519 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.182387903 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.183054511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179596633 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179630965 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179905508 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.180705946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.181275409 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.1799537 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.18089171 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.181578807 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.181662423 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179094814 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.179721434 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179589473 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.177381863 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179685882 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180526876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.178252369 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.176490939 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.178424341 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.179591153 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.179047928 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.179307301 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.186797268 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.177410529 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181334858 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182504149 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.182194985 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.181380651 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.17784651 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181942235 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.17868305 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185523636 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.194304755 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.178821206 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187585089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.189966746 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.174481109 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.180378346 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.177412973 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.174070593 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.178368757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.183099859 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.178229212 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.177601155 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.175370404 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173942604 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174969192 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.18012265 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.173449241 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.172850467 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.175814785 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.176423698 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.170448057 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.174127055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.173054053 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.174461887 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174901681 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174105719 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.173711835 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173861325 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.174603638 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.172347301 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.172271221 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174545309 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.180843055 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176728271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.173939652 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.173504689 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.175116245 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.176984646 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.172559604 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.173064714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.172322244 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184458625 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.180819745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17994954 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.175162837 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.173664951 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179560205 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.174148163 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.176581002 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173009153 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.174277778 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.174229951 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.172952228 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.170768423 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174957942 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.174423772 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175593919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.175186242 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.177854551 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.175085683 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.173297351 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.174670565 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.174497889 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.174163674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.17446202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.174932733 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.177055158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177181793 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.17400231 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.175005582 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18158717 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189305161 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.176262173 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.174288614 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.175395738 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.175201603 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.175303505 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.176414571 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.176465135 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.182726102 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.178308088 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.183991954 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.175700681 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184650561 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.176372611 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.177449959 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.183577244 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.175684093 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.175298035 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175899635 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.176058398 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182085295 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.189481088 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.176956447 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.179645024 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176019489 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.177491239 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.176486002 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.176066065 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17638813 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.176048144 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184520295 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.19144609 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.178538132 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177611754 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.173718446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.176672954 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.176329876 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.174812639 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181291881 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.176401989 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.176414608 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.176434018 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177649922 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.176584353 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.17765719 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.176226731 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.17294688 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.177438236 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184138754 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.191485965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181327709 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.178208534 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.186124095 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176080018 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184752305 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.191026402 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.177913228 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.177674875 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.177944335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.179239177 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.177345389 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.178318215 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.178152291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.178346271 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.180016509 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.177962199 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.17982324 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.179725192 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.178396278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.178467059 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186853965 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20003952 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.179046665 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182342742 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175442617 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.178621161 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.182305503 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178889947 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.178215936 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.181837089 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187013076 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185976787 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.179439018 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.178165409 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180252509 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179146718 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.180918773 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.180813275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.178912098 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.179146909 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.180324127 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.179140431 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183037885 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.180379933 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.180526263 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180451496 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.17973483 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.189730911 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.179466569 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.180526202 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179853239 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.179701225 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.180128846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.179793693 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17927208 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180940346 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180024654 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.181411739 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184945924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.184989671 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.182653261 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.17816177 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.179594481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.180596824 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.180378637 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180365189 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.179995653 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180947359 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.182191056 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.180857894 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.181823498 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.179694672 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.180739073 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.180672738 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181171281 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183466449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.185769939 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182307567 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.178028055 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.180125738 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183565775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180061377 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.180674851 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.189764845 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183884834 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.19205642 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.186203039 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.181865936 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.177977448 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180102015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.186429007 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.178201675 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.178571976 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.181259605 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.17509927 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.176411187 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.178131531 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175790234 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.181952318 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.177523777 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.175002936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184853843 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.190060828 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175909012 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.176663878 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.179330082 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.175176585 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.173405377 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.175802031 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.175458645 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181621909 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.191636776 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176829072 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178208373 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.175606161 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.176610691 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181439756 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174834132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.177182165 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.174703178 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.176525147 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174640563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.176766734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.173850401 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.174696266 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.176017104 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.1782732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.183561676 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.173785957 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.179353626 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.175771653 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.177651176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176204186 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176232295 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.175389305 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.175448735 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.178068649 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177658524 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.175964972 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.179056922 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.175801745 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.178460941 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.177500191 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177359243 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180259107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.186154977 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.185693791 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.175080554 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.175825217 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.176749036 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.181662649 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.176732912 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.177603125 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.177888517 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.179246422 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.178295219 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178486263 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.177894549 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.179275507 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194291618 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.193286159 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177663268 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.178623796 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181870486 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.178894172 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.175259778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.178127131 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.182086317 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.181471007 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.18543731 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.179351603 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186687737 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192773523 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.178224637 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.182275828 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.180951191 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.186867871 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.181910345 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181812578 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.186928222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.183748697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.194622834 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180463643 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188417181 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206869784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.194119735 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.180782088 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.18082916 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178461632 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.179083217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.18107718 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.181414974 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.179816795 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179457085 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.179932647 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.180605108 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183880908 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.182326304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.179374846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.180883747 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.180395376 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.181600325 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.178375575 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.179304364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.179681841 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.181304323 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.182226528 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.179737939 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.181587127 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192386227 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.190330401 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.181431454 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.181437953 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.178485064 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.184300512 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.183139932 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189682284 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.187387028 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.182799688 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.180613336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.18197418 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181098851 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.180233976 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.181265892 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.182217689 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.181023392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.178294185 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.193838469 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19280546 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.187638401 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.182571063 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.181967412 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.182875078 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183771176 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181303717 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181174088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.181721099 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.18311813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184571047 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.181400878 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.182431271 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.18609298 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.187598607 seconds)
  done (took 708.334009887 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180123441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180048232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.179324345 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.180620672 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181559784 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179875592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179461957 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.179878404 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.181072856 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179924645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.180825585 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180713634 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.181727248 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.180477695 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180858458 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.180288651 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181832877 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.18072653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.180777328 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181646601 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.182397542 seconds)
  done (took 25.91356259 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.182953036 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.181392182 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179572611 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.184077338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.181388456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.182882978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.1827038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182630162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183714115 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18080455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.184397156 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184290343 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.181706023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.180713682 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181128151 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18277997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.183055799 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181536921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.185265794 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181510239 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183669273 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.182207052 seconds)
  done (took 27.134807589 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.185074353 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.184510257 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.183266302 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.18256289 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.184989925 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.183589854 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.184881926 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.186057676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.184547356 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.184791826 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.184880019 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.187398081 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.190734862 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.190249951 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.185656122 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.186784813 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.329480329 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.184827012 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.189608205 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.18524166 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.184532433 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.191078302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.1847706 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.183221664 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.184394316 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.185596188 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.186185264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.187136046 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.186110915 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.187719323 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.188682957 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.185238464 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.185464904 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.187316221 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.185448222 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.18720299 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.188695792 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.187554 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.184919047 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.186524543 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.195087621 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.203503995 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.187416079 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.193477025 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.185810874 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.187018305 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.188324296 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.193123661 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.184412612 seconds)
  done (took 59.428010232 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.18781944 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.187858729 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.185336977 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.187623946 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.186455876 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.187273908 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.187460527 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.18729279 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.185471923 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.185545253 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.187806424 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.185658294 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.185194981 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.187268734 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.187389404 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.18505882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.185184998 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.185376552 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.186086128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.189907574 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.185513247 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.187883654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.188084211 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.185333814 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.189056282 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.186337035 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.185631509 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.1876218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.185089208 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.187571573 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.188903765 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.188769484 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.188615105 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.186464754 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.185317487 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.188370139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.190335774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.186494471 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.189156081 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.186976768 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.188365692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.189528958 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.189750732 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.189458534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.187914527 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.187739647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.186753998 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.187888945 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.186497567 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.190113031 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.189811213 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.187427098 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.189344131 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.187766238 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.190469689 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.190779277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.187474778 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.188754488 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.191319768 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.188232546 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.187150205 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.190571634 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.189143233 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.190679879 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.191450574 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.187081654 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.18929 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.191170903 seconds)
  done (took 81.899161071 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194980844 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.191130188 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18974903 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190328862 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190661634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.191141422 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190405661 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.190229814 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.189485099 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.189647672 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.190447252 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.190536641 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.190585061 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.191394621 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190512759 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.190442809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.190493171 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191161657 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191995058 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191857438 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.190701338 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.191412667 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.191230106 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19026678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.192557958 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194777338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.192616689 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.191680116 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.1920108 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193477638 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.192327055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.192908602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.192683297 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190926068 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.191969461 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.192307401 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.192068448 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193023371 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.192902679 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.19284889 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.193466693 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191773685 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192479364 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.192269698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.192200792 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.191806662 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.192996882 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.19357243 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.194136609 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.192707643 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.19389858 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.194257591 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192768835 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.191961179 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.193434809 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.194738244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194428946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193633909 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193432302 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192495243 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.193115768 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.193988767 seconds)
  done (took 75.03936204 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194064594 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.193538565 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.192487826 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.190297159 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.194728222 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19246786 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.194802186 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.195293317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.194072131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.193721239 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194680264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192264505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190710133 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196678182 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.191927674 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193255467 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192152218 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.193243634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194687846 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.193281806 seconds)
  done (took 24.99714797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.191625222 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.194986464 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.192293244 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.193718053 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.195413538 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.193645327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.195663191 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194637476 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190953083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194138566 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.195447995 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.194937969 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191546282 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191725231 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.194320086 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.193556683 seconds)
  done (took 20.228921042 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.192735709 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.195062321 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.194992147 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.194816962 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.193569841 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.192205041 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.196974861 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.192764981 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.194360196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.19670694 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.195954423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.196789493 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.195674913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.195767586 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.194085911 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.195067407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.194649572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.19388235 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.194579722 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.196677939 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.194932895 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.194730697 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.197465379 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.196167067 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.193680937 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.195293497 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.193983963 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.195441382 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.193198757 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.196252469 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.195241469 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.194813741 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.196103132 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.193932635 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.197279858 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.19445046 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.196699282 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.197241424 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.196586493 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.197456014 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.197802797 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.194661118 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.198237854 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.198661812 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.195058427 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.198975199 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.195527422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.195693758 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.1970342 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.195550434 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.199238714 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.196841318 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.19898668 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.198902088 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.199430282 seconds)
  done (took 66.901556976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196520795 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197610478 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.19529725 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.198390559 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.198139175 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.196588551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.198856398 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195354662 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196999314 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.197183258 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196345447 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.197564115 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196310152 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.199126022 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197056634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198999927 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.195784815 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.196481882 seconds)
  done (took 22.681658974 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196195488 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.1966752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.199014552 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19600527 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.196440155 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.198267078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19566971 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.198738676 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19889459 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196751867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196205293 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.200611438 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199220644 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.199594056 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.1976136 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196806517 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.199976378 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199955916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.1973272 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197164875 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.199542583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199103995 seconds)
  done (took 27.489444288 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.197791108 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.198202301 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.214175074 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.23716307 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.225243658 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.198896884 seconds)
  done (took 8.405777442 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197550489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198780259 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198596305 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201236827 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200156851 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198429831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198817112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19829362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20100098 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199304992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200000819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200883857 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200598463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198395603 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20140264 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201553186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198231644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198059309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199400026 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202056722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199526705 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201312904 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200351188 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198771293 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199753748 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198628242 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201015849 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200710829 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198645632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201605749 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201257783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199257733 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202129243 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200159953 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202658766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20244419 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200107725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202544788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201621622 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200258909 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201675794 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202420302 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203148993 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199002931 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201935742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199403538 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199906476 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199453062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199696408 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202446396 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203043956 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200452483 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202924302 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20195032 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204088283 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203410235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200394403 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201277627 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202323161 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202221536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201666793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206728665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202121772 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204131633 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204632472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203763287 seconds)
  done (took 80.396719528 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202286975 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202539712 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20111095 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20455354 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20347113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203319113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202322272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202505304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202535956 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202175947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20596596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202246188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203613195 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202064051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20325432 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203324666 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202626184 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203904525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20337044 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206205177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202300175 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202956408 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203664145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204256249 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203752883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20615246 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204200639 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203168666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203557433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204602406 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204615234 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202655204 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20304327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203332368 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203071131 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204306243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20380177 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203821366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205650557 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206589461 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20445219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207211912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204347297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204081871 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205344233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203973344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204652678 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20421442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204430134 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204570085 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205839478 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205964059 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205263564 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205606674 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20651923 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20486826 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205011151 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205811742 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205063444 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207451086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205140857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205397705 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208298101 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204921316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204477709 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205306839 seconds)
  done (took 80.622021295 seconds)
done (took 1653.822413442 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.266194389 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.280071672 seconds)
  done (took 13.688435051 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.367934588 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.322247039 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.205274182 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.212281083 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.202653581 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.202825247 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.198870331 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.20272061 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.206774211 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.207237193 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.206952921 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.396094917 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.262182149 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.204116848 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.205793059 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.298564736 seconds)
  done (took 41.045203866 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.230211964 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.214519703 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.31146273 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.229684822 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.236892302 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.371923201 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.262259188 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.215778188 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.359054356 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.251449933 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.556348571 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.233914135 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.215325267 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.169311445 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.227412729 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.373633221 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.42781517 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.555414144 seconds)
  done (took 27.584797983 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.589967553 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.221998919 seconds)
  done (took 8.957297716 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.220267616 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.205697883 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.230474367 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.208373413 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.236765474 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.278416482 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.264636171 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.266674307 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.241739301 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.226911849 seconds)
  done (took 63.526999305 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.232632111 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.215405698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.217358084 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.215422383 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.211083248 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.207564195 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.216094258 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.208994279 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.271455375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.322818374 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.229966131 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.222385138 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.21677834 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.217919937 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.214595555 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.250923109 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.347462644 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.216179284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.21318226 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.223164564 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.218531856 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.315481821 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.250136574 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.216299871 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.324797212 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.282986197 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.220184093 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.222915048 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.338986189 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.217680435 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.21584063 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.21611688 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.217515148 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.763648443 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.626605658 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.221051869 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235678114 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.225087766 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.218138496 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.330126562 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.216833042 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.224651089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.209479334 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.615806547 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.368515145 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.312502193 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.303463249 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.215214433 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.218626529 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.276163029 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.218071703 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.217738622 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243524058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.929553275 seconds)
  done (took 103.269648065 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.252365678 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697925734 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376907672 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.224656298 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027840208 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.889451671 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.209731588 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.4540316 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.245547875 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21064332 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.479711029 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.673147219 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211416521 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.214764068 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.629490638 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.238188311 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210753429 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.035192348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211814017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.209514598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613136286 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225936407 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.20842892 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.258283635 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.246091542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.634050313 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.457479678 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.58372226 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.214593465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.208314881 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.638246179 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.211577954 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.219253748 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.210650448 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.465794001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.528194429 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.499920281 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.213614749 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.230743835 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.214140832 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.23806176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.633325953 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.516950581 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.213371186 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.20953591 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.631318595 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.209074478 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.215479723 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.214154566 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.414570531 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.977935278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.213010438 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.458228385 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.211092909 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.558379773 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.290268073 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.238042278 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.66250837 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.209003272 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.30829778 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.213160206 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.211937458 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214647138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.213982133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.212493262 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.516303639 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506011566 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.221046618 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.526047364 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.631198489 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.213760489 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.695063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.11331822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.236758356 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.272173371 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212332438 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.809701236 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.665781337 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.263461626 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.210626145 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.506329172 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.212039467 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.472159505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.224325717 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.210526218 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617691264 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.227506663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.2300352 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.215046693 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.211265359 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.98702899 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.216964036 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.461589381 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.259845763 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.215003943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.213605319 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.234183995 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21219579 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.227141767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.222367233 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.694016599 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.223583263 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.323814298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.230981535 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215299345 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212451014 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.217319123 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.215729591 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.435781328 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.755366553 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.215412479 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217127883 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.213492141 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.219120013 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.230648945 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.21953697 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.479416238 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.214704316 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.214433723 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.216164055 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.919717254 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.249484404 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211263359 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.211276857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052017243 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.421498812 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.231636586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.216537196 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.216147223 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.229860718 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.422426487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.212317286 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.267008137 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.221207115 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87919669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.222268742 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.240516916 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.62165779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.224636039 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.034611068 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.233743789 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.218597789 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514738757 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.472981852 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499992264 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.214439709 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.230415572 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864784603 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.218199314 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.361870761 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.232146343 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.220201012 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412068385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.487646468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.217970775 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.758299276 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.217707448 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430650029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.217897411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.535591098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.672228985 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.217095257 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.220348772 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889294688 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858680593 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.014614199 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.222019965 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.473585058 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.189333157 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.676155285 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.217021624 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.21828106 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.792374002 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.221159302 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.220843951 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.21782403 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.219582476 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.279057816 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.390452391 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.422845834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.215932547 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.638363695 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.252396842 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216225624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.22180895 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.215551028 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.571807199 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.248681727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.22244483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.219279784 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.220079437 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.225235268 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.647756717 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.145486112 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.219438103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373012125 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.811650732 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.216875783 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.221148996 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.850076492 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.523677509 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.725585947 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.275806433 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.487732894 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.218154511 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.258094906 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.96964506 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289763438 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.647041514 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.216833142 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.22143172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.778426511 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.216825459 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.328496442 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.217093523 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.223809035 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715893174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.217243597 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.219456812 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.429503786 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21712005 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482354933 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.220639053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.269273671 seconds)
  done (took 1081.888411802 seconds)
done (took 1341.101934114 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.222483485 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.218179334 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.207462508 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.221828933 seconds)
  done (took 26.031547163 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.231523668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.226923044 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.228262014 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.225739604 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.230272819 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.227757777 seconds)
  done (took 8.531992885 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.258828753 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.221721736 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.221557756 seconds)
  done (took 18.863581214 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.419434493 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.364630386 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.548944466 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.152304692 seconds)
  done (took 9.647664775 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.228406379 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.228165747 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.22862317 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.230981307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.23102346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.231874989 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.230682416 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.230805908 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.232875981 seconds)
  done (took 12.235344148 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.70079096 seconds)
done (took 81.172750973 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.96228035 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.231487625 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.226845764 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.720214364 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.348306109 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.528122375 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.272055975 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.221839731 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.458639075 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.897636559 seconds)
    (11/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.221161806 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.263892559 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.247912889 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.0010495 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.614240298 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.747000369 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.446105561 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.215580008 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.289244375 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.28733343 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.211743417 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.246385545 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.195425182 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.235094599 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.322989919 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.511878691 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.232210998 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.250374816 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.708890563 seconds)
    (30/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.922420856 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.246961094 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353288778 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.27304409 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.567149321 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.493926724 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.314009972 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.232181931 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.242843814 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.626038181 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.366074315 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.334504169 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.238244913 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.2103868 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.695877009 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.7536656 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.335950564 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.224693065 seconds)
    (48/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.275706569 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.480457594 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.283685947 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.223549223 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.219082148 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.549825787 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.282112096 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.270356365 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.426388209 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.21823603 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.194499039 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.245557868 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.343546847 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.422983356 seconds)
    (62/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.344697535 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.214780302 seconds)
    (64/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.372951389 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.252767086 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.354546208 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.223219349 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.333671003 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.513152396 seconds)
    (70/309) benchmarking ("sort", Float64, false)...
    done (took 5.424011974 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.961487752 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.274527331 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.237567315 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.316369426 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.308095982 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.226598951 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.401785151 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.404912689 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.212405123 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.376638208 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.89807481 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.167657577 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.35934722 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.512459964 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.631310541 seconds)
    (86/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.760443706 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.60972317 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.584146266 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.63888801 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.239101432 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.00413149 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.67341537 seconds)
    (93/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.428144274 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.215193904 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.299799834 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.024178741 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.209846605 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.563049738 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.981811619 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.224191896 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.263904486 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.913238456 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.426676247 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.312463496 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.893201566 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.347719391 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.447753691 seconds)
    (108/309) benchmarking ("sort", Bool, false)...
    done (took 1.730036205 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.249436229 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.199652185 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.979995829 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.346934544 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.484980615 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.347771957 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.913097135 seconds)
    (116/309) benchmarking ("sort", Int8, false)...
    done (took 4.245774253 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.89578005 seconds)
    (118/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.50550854 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.765380421 seconds)
    (120/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.35588115 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.229402851 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.320408682 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.33551916 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.25421215 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.2257045 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.257709623 seconds)
    (127/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.332690805 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.265034618 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.216386941 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.453523498 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.43801979 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.344685349 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.232373877 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.232568842 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.637111439 seconds)
    (136/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.660000047 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.896893276 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.062701909 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253414907 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.255979568 seconds)
    (141/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.73401502 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.293341324 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.422621583 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.838743075 seconds)
    (145/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.763748585 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.247446577 seconds)
    (147/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.347825024 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.330193673 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.2254728 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.263630213 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.273474334 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.231477827 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.427040321 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.988632902 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.311704491 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.606083044 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.508274913 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.060907659 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.226438675 seconds)
    (160/309) benchmarking ("sort", Float32, false)...
    done (took 5.204422933 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.428271645 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.244588754 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.811830815 seconds)
    (164/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.557039192 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.808217005 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.257769021 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.219771787 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.304834355 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.941922462 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.511997635 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.627411065 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.773560545 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.610264842 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.038922113 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.309070299 seconds)
    (176/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.261157183 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.232813543 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.243430762 seconds)
    (179/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.360655615 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.07343862 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.537743132 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.666458506 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.408250408 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.664003668 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.568371676 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.776130806 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.728396668 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.2542233 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.083071726 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.244265797 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.272607194 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.217010053 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.470303361 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.269583017 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.316322995 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.217500575 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.654371572 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.350666021 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.215641872 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.75636999 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.058104658 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.228595644 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.2757091 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.527983291 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.222825511 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.358103693 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.38129458 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.330182373 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.289705428 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.436214929 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.684157901 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.051462425 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.269115419 seconds)
    (214/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.436446521 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.989722632 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.433444618 seconds)
    (217/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.316496858 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.948814616 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.25548037 seconds)
    (220/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.729147559 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.368455354 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.247523116 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.860222439 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.353074766 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.945736279 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.023232188 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.3286002 seconds)
    (228/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.23225617 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.464111345 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.321043109 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.278771877 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.254178655 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.072423033 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.375947461 seconds)
    (235/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.565504343 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.273799146 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.280812826 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.245331252 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.906308952 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.248645526 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.241345895 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.630154584 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.747579039 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.579940713 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.821728914 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.235336592 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.329211777 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.231311421 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.316981733 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.598364358 seconds)
    (251/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.529740534 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.584796021 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.569164582 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.258364854 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.478867549 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.666085156 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.229280971 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.867203766 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.769434146 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.261176418 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.428076048 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.926639819 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.569848836 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.245531561 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.771040463 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.257379112 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.246303456 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.613342282 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.483369263 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.762865561 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.243343508 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.258742296 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.483155734 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.280607837 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.876324993 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.342816989 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.317950292 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.901107024 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.792018185 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.246998505 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.252357145 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.82808333 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.235674126 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.333267776 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.834994949 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.387468754 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.327508112 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.385289826 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.31493074 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.498317461 seconds)
    (291/309) benchmarking ("sort", BigInt, false)...
    done (took 6.235471017 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.361452993 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.643739251 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.450399113 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.968809405 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.296167312 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.261669462 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.236193552 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.278602842 seconds)
    (300/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.245348744 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.321674768 seconds)
    (302/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.222329501 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.596983726 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.970110199 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.257896674 seconds)
    (306/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.32027465 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.294330839 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.497199567 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.273831336 seconds)
  done (took 874.06468175 seconds)
done (took 875.228900349 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.271718788 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264474444 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.24926774 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.269160812 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.359689078 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.278917148 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.259406607 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.250846727 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.296111505 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.29804276 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.246828066 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.276347113 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.249860745 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.249365232 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.249224027 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26319104 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.143891239 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.245837267 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.266511359 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.258233395 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.266483647 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.247942935 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.299039425 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.277075956 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.254076216 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.254443857 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.25351571 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.269228427 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.361295544 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.251899828 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.252659456 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.262000256 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.155790645 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.24825225 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.245591673 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.269660721 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.260952743 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.259414695 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.253896212 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.283002147 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.506939654 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.250239198 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.252428952 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.251681461 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.251045664 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.256550118 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.251414649 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.257430832 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263803579 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26488485 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.516551205 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.26588534 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.255495505 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.252793863 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.262012702 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.251484611 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.254970776 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267546566 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.272487231 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267090371 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134836355 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.253020093 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.254836497 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.268523125 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.260263305 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.564795203 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.247985945 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.255591796 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.516867863 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.258209331 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.564702436 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.261699696 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.255323576 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.267271053 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.28399593 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.146966483 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.246144243 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.252510393 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.261959642 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.251390481 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.261746815 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.2657413 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.257993303 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.254011991 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266877751 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.281472082 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.262648062 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.253971923 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.26147043 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.272221552 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.261165575 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.263404409 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.256366906 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.250220156 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.262586161 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.257496101 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.256694919 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.256983838 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.258424289 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.264840169 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.515720591 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269320998 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.251319586 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.251562937 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.253823094 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.266544394 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.514640219 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.25612262 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.276566941 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.3015236 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.25537009 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.141460142 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.254061794 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271048122 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.262877661 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.256851438 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.250898643 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.141956863 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.522114468 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.269463211 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.256189749 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.253497924 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271207353 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.257758844 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.252095749 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.154419777 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.253610942 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268459269 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.377845612 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.266134241 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.287959188 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.254674242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.259938249 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.287489162 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271367937 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.286751201 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.259293194 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271937726 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.271792479 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.254315447 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.267588318 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.267513723 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.257965408 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.263206137 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.2517446 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.285758192 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267266319 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269560711 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.27863162 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.377850443 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.255127882 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.145570005 seconds)
done (took 210.651751282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.315482242 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.247019088 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.34346529 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.253056768 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.349936011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.347793931 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.25126757 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.252361348 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.25201851 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.663390571 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.252617091 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.252375912 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.252888525 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.252084955 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.336338758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.254229794 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.252572241 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.593399449 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.255662598 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.324812405 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.251314679 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.252326902 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.253764646 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.635003111 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.25070381 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.248313371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.325767084 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.255916322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.629885808 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.247659146 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.254975573 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.598290732 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.344334224 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.272360264 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.265530984 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.262292416 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.352751588 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.266550208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.333897608 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.337074 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.345751695 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.29388022 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.249685539 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.250896531 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.25890145 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.256440958 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.252022669 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.281984584 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.251268051 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.253707731 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.624932318 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.265570355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.263472425 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.25298962 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.254846644 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.275808129 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.253689175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.257460536 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.344744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.256233207 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.316914184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.671208376 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.632671936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.255868691 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.252116742 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.254816011 seconds)
  done (took 143.256207738 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.321398346 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.327966324 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.361706013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.255558134 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.304706567 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.36650622 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.253952091 seconds)
  done (took 10.379930472 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.262537482 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.257379217 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306968891 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.305421167 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.257005972 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.404334308 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.25830069 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.268780765 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.254944447 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.310448116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.259129136 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.258696513 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.265287072 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.253152569 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.30658863 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.268745728 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371541032 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.259523161 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.25817929 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.40895963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257148032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.2649442 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.310976474 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.269649028 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.2595097 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.265071524 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823850005 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.257565415 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.25649879 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.259630994 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256658154 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.297265325 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.260228764 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.259023369 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.255964252 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375455212 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.258931017 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257705213 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.260755274 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.257967571 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.259918908 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.259841275 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.260103007 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.256768229 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.260108894 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.282899863 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.259583609 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.260034217 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.260201491 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.26066817 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.310135648 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.259457496 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.257793651 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.258231038 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.314680123 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.266752461 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.261701155 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.257982923 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.261363061 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.257650196 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411033247 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.307911935 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.259582854 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.30685674 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.261380125 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.262261982 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.260386103 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.259898875 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.314328398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.261125998 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.309102777 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.25846942 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.414544833 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.283632281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.262892374 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.263409937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.264060776 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.261940739 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.259108496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.266191588 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.260102978 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.260766047 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.267369365 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.258969088 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259352782 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363088949 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370238719 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.260565991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.275813766 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.269201943 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.259073586 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.315552095 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.262366875 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.260958238 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.314320066 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376358792 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.314940087 seconds)
  done (took 145.977015119 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.267547352 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.270201626 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.263414045 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.277791032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.262617663 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.262245665 seconds)
  done (took 8.797347669 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.264077374 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.264820007 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.262712904 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.262472793 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.263644593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.266241847 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.262655251 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26386995 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.267116486 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.26293516 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.263718502 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.263697295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.26444702 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.263699525 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.263850777 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.264497061 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.264560364 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.260832161 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.264275862 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263871588 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367783242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.264589963 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26311169 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.263738411 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.269260002 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.26457433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.271202993 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.262682997 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.264000835 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.271528146 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.26698075 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.264828008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.265821351 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.269359753 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.268980145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.265607899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.268085098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.266523184 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.263703104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.265390783 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.26593824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.265624989 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.265763995 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.266805285 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.267257461 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.269792321 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.269418485 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.274338477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.265705228 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.267179166 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.267674612 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.266187418 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.266138427 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.26853983 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.268548814 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269191316 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.271680431 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.26653375 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.266574133 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.267331557 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.267717103 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.267238576 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.266263905 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.269617705 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.264063579 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.268946055 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.266624822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.27000022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265482583 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.267092765 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.266820521 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.26447848 seconds)
  done (took 93.463222327 seconds)
done (took 403.059077005 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.420310954 seconds)
  done (took 7.618479729 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.470653365 seconds)
  done (took 7.672338514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.934162001 seconds)
  done (took 19.133912648 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.335159561 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.330053141 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.264200267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.258296257 seconds)
  done (took 26.386462552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.424928719 seconds)
  done (took 7.624077979 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.266730583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.259404636 seconds)
  done (took 13.728449793 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.549321443 seconds)
  done (took 7.749060249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.374823813 seconds)
  done (took 7.578839674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.272488782 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.281801782 seconds)
  done (took 14.011224966 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.251241284 seconds)
  done (took 7.452927922 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.832906942 seconds)
  done (took 8.033778616 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.266388509 seconds)
  done (took 7.467451134 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.305880873 seconds)
  done (took 7.506641059 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.399328111 seconds)
  done (took 8.600186574 seconds)
done (took 151.76368874 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.261864783 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.258299602 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.262379077 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.258433471 seconds)
  done (took 26.240532996 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.303792673 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.301622368 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.303978221 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.312488734 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.306043803 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.302553205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.294632735 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.296186478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.313717946 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.305418123 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.304258578 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.305577666 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.301388794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.295644282 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.306877702 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.305199617 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.314210757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.307648993 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.298837074 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.307191579 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.269929586 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.31379178 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.305267921 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.271434317 seconds)
  done (took 32.450359371 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.465466608 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.339975819 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.423198827 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.320989809 seconds)
  done (took 6.751302792 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.321976845 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.323262809 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.336086306 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.373593471 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.400493935 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.332718312 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.298143888 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.291489726 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.278136895 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.323308024 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.40054643 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.339126362 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.408635508 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.271501013 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.456413427 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.271733454 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271700849 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.323249834 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.375270667 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.393567325 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.272577754 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.323439892 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.326349847 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.340667744 seconds)
  done (took 33.256099422 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.270869696 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.278348535 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.27591753 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.271490283 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.27180246 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.270995437 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.276453181 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.272364712 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.291889968 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.273510272 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.270692116 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.270951314 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.270014717 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.269854675 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.270934002 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.284434717 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.28519772 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.271710576 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.274333938 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.278260274 seconds)
  done (took 26.702944053 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.265728308 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.120052761 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.618428427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.522092745 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.267383331 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.266786739 seconds)
  done (took 27.265156561 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.332920417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.447480233 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.270835992 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.587021454 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.664435466 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.274196655 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.272762548 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.481453214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.743953154 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.747749602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.320264209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.332553605 seconds)
  done (took 18.682256988 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.275127883 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.26557919 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.274224367 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.281539475 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.322202569 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.274063408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.279021588 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.267227679 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.321479853 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.32477347 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.274325579 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.322729783 seconds)
  done (took 36.689268201 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356168752 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313313544 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.146058146 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994069258 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.641133942 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476656799 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.024506693 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674752736 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.27025894 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541774433 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918907315 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370873403 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523441059 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269168137 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269982783 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.209056524 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495329555 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723995947 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2697751 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926250591 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294831721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26872807 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.022015197 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.295175364 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480918806 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404043037 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.531907724 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270755329 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522480256 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281025353 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279567043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269839229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542798604 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90028999 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360499669 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281151324 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.957941032 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.981502487 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.260516841 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.014496216 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.698534314 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272832679 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283201428 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271135522 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20534213 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27168948 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686054033 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.273449635 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.981323157 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269627903 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28149122 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365763396 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.273522924 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089457764 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261097774 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269692563 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.267998068 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279211237 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841532187 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.396735675 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2844879 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.204893235 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62709766 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022284329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847707627 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.37373029 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.274850678 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276021939 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206838127 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.001593563 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288861703 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419409357 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.290199692 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920366075 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907317038 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.940208004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214062245 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787456575 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277843709 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.205981091 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498996998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272152901 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20749623 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.217165278 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207567431 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935118904 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281499268 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.615242951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280431749 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.681568339 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281542038 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289574707 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295600323 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496783799 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.157344935 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273494677 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.695407475 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415896141 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291378176 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684273064 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20586451 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.273525834 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530301855 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.484453619 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284327479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.210003968 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458324465 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276475529 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.288827248 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276041987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.283737286 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.799277938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286730852 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.416560111 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290522261 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274577681 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975685583 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284846703 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374703119 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.951864574 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513913054 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.005955274 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276735627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357217354 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278231598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276205582 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.066296253 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790363019 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27484319 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.277110786 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278604379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.285618392 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.27459222 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220583519 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.270060998 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997620452 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.277530687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.500077438 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287508283 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549789933 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210035465 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422604793 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364805609 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.494822642 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.389749467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.273882626 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53171188 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274831935 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275730996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286181975 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294474811 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375663792 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297268114 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.284363043 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.530340224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.279110504 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.280236904 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.055520128 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278509997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.694128379 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.282961661 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.090709113 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799462283 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255879938 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.283893505 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166727981 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.291534861 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34200135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282183226 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.287628161 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.915208851 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064460956 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.279840274 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.28076503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496918387 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286394219 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.960840576 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353865399 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.457527247 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803192542 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290845516 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.211869559 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.988544257 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.969989613 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278764982 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.213567854 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277933844 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285525393 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289441673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.754766038 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808176408 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278387632 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.965364226 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.284585833 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289351667 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.283284186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27828857 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.89251854 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.426254385 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289114479 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.289567944 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421930607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.292398883 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.213382078 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.281967977 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.28237447 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279295148 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278374182 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311042478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.96728439 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740836964 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534362025 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.935155182 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.2917153 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.061456821 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.309087738 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.276358907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.747162243 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293758016 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.296648123 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287621663 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.288890362 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.986522566 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950894996 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84465997 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940676131 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756856503 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16942769 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.283353871 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279849627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696695063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212680243 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.845521807 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449789744 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696243277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224381773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459252872 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.394142592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977135165 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288837618 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508236288 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164425619 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.747911582 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304620568 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491852663 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315411217 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.283681193 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208660528 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.568650151 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495027656 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763796145 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359306799 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694410943 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.746787645 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29296725 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.279302315 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.566390467 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438221492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000635945 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.454375311 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.289154254 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.985065848 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762919485 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288606601 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507670788 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860818034 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291861646 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.463292222 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220728714 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.291994138 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292042694 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.282446251 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.418919955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.266820238 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.545581643 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294714492 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215958455 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285727495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766313289 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.137376071 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.287128409 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282710484 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981359745 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29533456 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538781111 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.284266547 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.882453024 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285324207 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.218295685 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216799651 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.976288736 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290037163 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260367503 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735174318 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.632958473 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256951917 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301528242 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127626699 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538255078 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297072227 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816750735 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50636349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.046030641 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30603638 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.3851354 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.80850563 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.283291185 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284687308 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520288067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09613735 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505297991 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.194300701 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.190647024 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.282414261 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497508297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28377906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.015315596 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519463166 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.995502321 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.292112311 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939450671 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306991267 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.010321269 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213907239 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648812909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.28868548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365305327 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295209249 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.294943642 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.295409633 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442306507 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016778207 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299503547 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.29897412 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378250185 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.461134111 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.892555683 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.287540798 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827391596 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960107125 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822946965 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294016605 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285603027 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284723864 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21955055 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432487542 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.511901157 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559421683 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41742164 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.743957902 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307888353 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.806048303 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301106431 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498902373 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562175572 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.182133575 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290528497 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298249915 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.286978805 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296863641 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.497222171 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748422711 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815711452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405198765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296343403 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.700174602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558271715 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287690259 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28598504 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814209696 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.300754709 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.577330623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.29004847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036662125 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436100165 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297893969 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919889605 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294977243 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.444671661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.06074478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.008898104 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.542208308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693730318 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294194724 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826322395 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930941554 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547777479 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356802184 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297202658 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.402457316 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436211158 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.285549118 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297659867 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289171275 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133791899 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.998701128 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.297967855 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831176253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549442481 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.285864407 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.289010927 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306855048 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.298785608 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514388573 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961725335 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514160246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298820773 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295309925 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.10443878 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83531854 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299522613 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223516086 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.289300381 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510445642 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525956542 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310291652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.743171952 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.002153869 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815046577 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.261792766 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311668304 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290334975 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940652488 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825657959 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.904469465 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750330413 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.850612346 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289454488 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564409215 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.29705874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292127523 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567120942 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.292757684 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291106365 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301312296 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.824925613 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995377957 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.300979943 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.015790308 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.229011253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634210475 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901038637 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228352834 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288225795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.460768767 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290624396 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421519891 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298468673 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.29548091 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301193302 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.049660176 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577449152 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.294037443 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.277079233 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.872345973 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293166938 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312167585 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51055516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297122174 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.968916274 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.646029142 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545959986 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.293161925 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.277262901 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.29471947 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291858748 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279323963 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.488722717 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.780065188 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818305729 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.295285064 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.30346292 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297079346 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.509043174 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503305194 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.073237287 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316852915 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299039398 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308246982 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.201270849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794065588 seconds)
  done (took 1551.202100211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329248632 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.309775103 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.3067697 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.311614547 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.300868142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395709434 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.339286248 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.379973636 seconds)
  done (took 51.903448166 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.300755443 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.507575771 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.317774358 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.301196905 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.302718105 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.303663503 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.69793947 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.301449934 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.300001853 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.302495648 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.308061824 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.30245296 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.865368934 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.303244207 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.299908927 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.278614694 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.299994993 seconds)
  done (took 64.524250561 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.300772307 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.502523311 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.361148037 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.304134733 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.997379387 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.307390914 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.509677324 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.336185653 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.290831939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.313051085 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.940307304 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.311919297 seconds)
  done (took 82.709234541 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.302810588 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.301433343 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.302858476 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.301710176 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.30207036 seconds)
  done (took 7.74320687 seconds)
done (took 1967.322779851 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.548438829 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.921714241 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.894474577 seconds)
  done (took 5.046708517 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.441442589 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.49367756 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.610037302 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.614928842 seconds)
  done (took 7.393316813 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.568677433 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.694934862 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.484786649 seconds)
  done (took 5.980498931 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.570362605 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.30301509 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.409044801 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.292528175 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.294957647 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.294020255 seconds)
  done (took 20.114911707 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.299332946 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300389949 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.298175308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.301958779 seconds)
  done (took 6.431718686 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.279483775 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.033074735 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.281094135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.299565381 seconds)
  done (took 18.125436407 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.045684991 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.066864561 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.0444499 seconds)
  done (took 7.391700991 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.302053177 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.149997787 seconds)
  done (took 9.684463195 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.5922563 seconds)
  done (took 2.824510155 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.429333971 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.566925629 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.233849136 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.18060425 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.253686712 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.73198378 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.737145318 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.372391267 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.170489353 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.210305425 seconds)
  done (took 26.12024733 seconds)
done (took 122.177559862 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.798566186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.536939045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.502937559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.772844994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.525127786 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.50358791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.507736977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.739813344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.313177954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.271687563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.769088355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.524001935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.66869852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.538266705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.666713378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.53997843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.528636806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.834887272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.454579789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.693782381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.502048606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.411192473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.604772108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.471334668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.525857245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.519605883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.007104693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.298204277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.627002292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.023221566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449665928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.868256952 seconds)
  done (took 187.232787998 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.295017201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.304905027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.293912924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.294883093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.295537727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293357025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.293801489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.30481232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.299435574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.294172222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.308034381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.294010038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.294936312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.306967879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.29419085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.294641935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.300266078 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.301554624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.303590352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294401482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.303417491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.304168237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.294735646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.295023242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.301546644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.29551246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.310848752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.295689724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.296285507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.298201887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294885299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.309763819 seconds)
  done (took 202.798207393 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.29811739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.295740947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.296310656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.293996103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.30025737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298246156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29789446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.305832964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.295448996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.294988658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.295582563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.295677183 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.300385336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.300347385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.296562655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.295203596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.31277937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.307884221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.299536688 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.295883549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.311006591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.295925449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.295839806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.308335873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.3033581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.296629344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.297031234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.297106737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.301984474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.301610931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.299344738 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.297259785 seconds)
  done (took 202.819425142 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.495021721 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.307974859 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.308775001 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.246917347 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.307732515 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.30708161 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.303703602 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.498206939 seconds)
  done (took 14.012843665 seconds)
done (took 608.09720515 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.505329705 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.228117891 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.494624434 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.326769443 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.061844233 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.326002649 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.330293232 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.483846755 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.189861566 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.480558171 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.491602898 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.321275681 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.623980423 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.323566167 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.558039603 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.414232985 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.159768906 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.267736317 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.615172607 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.844507576 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.563265136 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.71819471 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.484627338 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.180833946 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.632824601 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.718758997 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.930616347 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.157502301 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.325476373 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.623147454 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.842650471 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.173272941 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.375866192 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.360077702 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.414188758 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.39713799 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.180100264 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.360052332 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.499273374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.480270029 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.842456748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.012032466 seconds)
  done (took 88.558345465 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.298167071 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.29872481 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.300843266 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.299186093 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.299988135 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.297786067 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.299119039 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.297973546 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.30259692 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.302941894 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.297452383 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.298588086 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.299256446 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.298784586 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.299012185 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.298540774 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.299991056 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.303379009 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.299896462 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.298085801 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.299088221 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.297751815 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.299986757 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.299218674 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.299778422 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.300653205 seconds)
  done (took 35.029570723 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.312136924 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.529907895 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.696897806 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.317250239 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.311698837 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.31826072 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.38171119 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.310001568 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.31583854 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.316415779 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.459313327 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313255389 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.346471869 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.703322583 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.315863776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.317075967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.312862099 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.313809206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.539161521 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.322759687 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.384799628 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.311255647 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.381479147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.32111491 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.315392758 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.311835943 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.316600197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.807763054 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.313025963 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.463563788 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.998410553 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.379758657 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.753870819 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.707096745 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.997374166 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.314587131 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.314448421 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468320581 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.312518743 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.313697601 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.382378363 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.314316446 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.709255787 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.925570356 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.324547637 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.316209054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.827478232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.466649099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.530386702 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.320421212 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.726890443 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.314753857 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.316555457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.316579105 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.531290137 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.320075295 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.313249133 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.824731651 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.318468786 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.385029425 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.312549808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.316047619 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.547974202 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.312733311 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.537344011 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.313271564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.324682885 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.315688576 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.710823091 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.315649452 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.941285605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.32435716 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.314279164 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.462497807 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.531975308 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.852092046 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.315130078 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.546770269 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.764982031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.378718166 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.315344372 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.797221809 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.381856752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.318276855 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.318531931 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.316596034 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.316056401 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.360353479 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.382611474 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.87288841 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.933373919 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.835153239 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.382307308 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.326441021 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.316287945 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.825785754 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.316012768 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.316002207 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.704334023 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.943306456 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.327423806 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.325173355 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.931465704 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.329497633 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.387283418 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.321711412 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.715540985 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.313692795 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.361781032 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.318432969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.323650535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.322059547 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.385797239 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.32009852 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.318079481 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.917288189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.478646219 seconds)
  done (took 172.088314637 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.309513704 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.306148512 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.310639148 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.307937928 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.308587976 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.314541374 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.30937221 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.310159586 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.316127238 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.309916306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.309991924 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.310434997 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.309234362 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.314666892 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.318678749 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.317756588 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.928334826 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.312401956 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.308770306 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.307755347 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.083774759 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.311687198 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.311115009 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.307636094 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.308976349 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.311167825 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.317211598 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.310908505 seconds)
  done (took 151.353160032 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.318891901 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.82377707 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.317292363 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.433223597 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.33836809 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.317184116 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.430971163 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.369472593 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.318142643 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.316800305 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.317744948 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.589016521 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.317025367 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.782919253 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.482938446 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.433357006 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.779139696 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.316564067 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.31676938 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.315518895 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.433585867 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.324435095 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.593164814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.828988967 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.319545394 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.831930664 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.309446052 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.319626898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.318958294 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.830980187 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.317885412 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.594067611 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.38874446 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.371599181 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.829559334 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.783821455 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.78462839 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.447418964 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.319268708 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.318429113 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.316054524 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.308146462 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.831560211 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.320662319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.318844002 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.826584341 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.333005458 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.320939083 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.328923318 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.317019202 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.372966942 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.37113111 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.595018566 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.838066877 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.389920379 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.341529771 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.43499468 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.683495853 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.320911716 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.779926517 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.306448418 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.834164241 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.324704724 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.310616437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.321624295 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.325211238 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.454561416 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.436566315 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.788238214 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.321015572 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.782832994 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.450019935 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.3224412 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.320323696 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.324451033 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.838342815 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.783624448 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.450885291 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.440895276 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.491890979 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.30891929 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.319939428 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.311629247 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.38881435 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.319651921 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.839055232 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.789370388 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.322732378 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.32379112 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.324536265 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.324940377 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.47802785 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.832213146 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.387868862 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.778550812 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.609084272 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.601247525 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.324397579 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.373708371 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.321637893 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.600130101 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.321461868 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.374065026 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.747969597 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.597293379 seconds)
  done (took 156.053366037 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.539339471 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.474189079 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.401755482 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.42629144 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.821121624 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.856742431 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.459668022 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.444615469 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.418943325 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.554371685 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.394719341 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.409659591 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.491550324 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.392580364 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.99699803 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.379587046 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.406494373 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.443326282 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.423140007 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.298047057 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.899266913 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.58534818 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.478283482 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.302347671 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.406438869 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.022187174 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.839238716 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.814176039 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.473320636 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.551760549 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.86382483 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.397093582 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.204650339 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.93725603 seconds)
  done (took 63.063110137 seconds)
done (took 667.38502043 seconds)
SAVING RESULT...
DONE!
