cset: moving following pidspec: 10768
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300298892 seconds)
loading group "string"... done (took 0.558902344 seconds)
loading group "linalg"... done (took 7.570347303 seconds)
loading group "parallel"... done (took 0.169526183 seconds)
loading group "find"... done (took 1.169541235 seconds)
loading group "tuple"... done (took 2.080642038 seconds)
loading group "dates"... done (took 1.320491013 seconds)
loading group "micro"... done (took 0.245310372 seconds)
loading group "io"... done (took 0.699930583 seconds)
loading group "scalar"... done (took 40.587024448 seconds)
loading group "sparse"... done (took 12.683345087 seconds)
loading group "broadcast"... done (took 1.128561348 seconds)
loading group "union"... done (took 13.446956022 seconds)
loading group "simd"... done (took 4.772961547 seconds)
loading group "random"... done (took 9.670927332 seconds)
loading group "problem"... done (took 2.147496473 seconds)
loading group "array"... done (took 22.581112549 seconds)
loading group "misc"... done (took 2.105321068 seconds)
loading group "sort"... done (took 3.454243042 seconds)
loading group "collection"... done (took 19.444154698 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58305693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14219138 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151033319 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148362039 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190154102 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155358232 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157405992 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098293522 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.93551387 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175804823 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1536878 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524107024 seconds)
done (took 5.141936207 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.23613681 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095434171 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103740478 seconds)
  done (took 0.86797956 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077054168 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146670517 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095049892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079197392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094577851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078503927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094406731 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080509369 seconds)
  done (took 1.34331251 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08700244 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097172272 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082685215 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097117892 seconds)
  done (took 1.040546182 seconds)
done (took 4.248595961 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738136982 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282805408 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206172673 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465171969 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19605152 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217223451 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.730760864 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.366737341 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254788393 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099725299 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143678616 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386998161 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136914144 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.736501756 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092526857 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123691043 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.190435911 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.478711489 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082442181 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11053113 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116769308 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142610046 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128627061 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093147569 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184277845 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081341896 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195907379 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111201009 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080409072 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28928578 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201839169 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698643925 seconds)
  done (took 11.077000012 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111227627 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133759437 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097712204 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138590317 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134840081 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099643778 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084322564 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097049619 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122016252 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176287771 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114927291 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137359744 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094705624 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082242247 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116726458 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244733686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12011393 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105237199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10099238 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103720064 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122427614 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112926681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109322351 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093774255 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16768601 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221161572 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111804812 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126678063 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096102955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112095224 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14429624 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142733208 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093571781 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081668984 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170988184 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123754898 seconds)
  done (took 5.138410119 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.075229477 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190314586 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121595301 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170369024 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081163708 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143594044 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095042525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113813363 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256683825 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.184407177 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174497181 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153905418 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141641459 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10084656 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098607443 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081790873 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096582179 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628476772 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1674653 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134345765 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097410013 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104211701 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099365331 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.7347616 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087101481 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096874014 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081565237 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081768716 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161080275 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081712521 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.162856716 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102228519 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100736049 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133292699 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19909487 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125929489 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118873648 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096958609 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078846032 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194279149 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088786225 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094855541 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080657523 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120555169 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076826124 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135643008 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134096992 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097308603 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080511927 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220407361 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080045835 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114709746 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.935628509 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18186467 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090176399 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09613524 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328693016 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100993276 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098669063 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078515057 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277841358 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186829101 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099027421 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080347542 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097458707 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082001879 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398787207 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081035819 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739693408 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084876362 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10782058 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08352789 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096793338 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10416292 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08824585 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116366502 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080085521 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100109541 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079907288 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097344771 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081427304 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108421671 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104370019 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081541338 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165155444 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079433158 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115984078 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127563125 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084420773 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095258914 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130104745 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07846192 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098700483 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081391348 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133578397 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099068762 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108147563 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083615423 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143512294 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097072275 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.140433626 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094139703 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123290257 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098983814 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114872006 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112177023 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099009094 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085740085 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095745513 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077536607 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165422259 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082459535 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098303441 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081205266 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111978224 seconds)
  done (took 22.899168701 seconds)
done (took 40.864105947 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318404057 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103295721 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102692776 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102404863 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101148925 seconds)
  done (took 1.478611995 seconds)
done (took 2.20476291 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290832076 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173333621 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095472992 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1674349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094460421 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173764272 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159848274 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112052455 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202979378 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094390924 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163445945 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094072344 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077050018 seconds)
  done (took 2.651550509 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095247536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115307444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083614192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11102645 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07775009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111799332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093500563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11681704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110629981 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087957322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094573274 seconds)
  done (took 1.819788337 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094827828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113496956 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083499115 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110661277 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076728294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110236221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093572053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116497193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110391255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085483674 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094058713 seconds)
  done (took 1.811489354 seconds)
done (took 6.99906369 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09101129 seconds)
  done (took 0.80829725 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.924201365 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.881994836 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1120608 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151054524 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.30201341 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191138152 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477353141 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127097981 seconds)
  done (took 11.092154962 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.14505327 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084460016 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100632907 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083276854 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104236499 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083811408 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102438813 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101247199 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085523291 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103004912 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083243632 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099284853 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102402501 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082066985 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103495057 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084235897 seconds)
  done (took 2.333504437 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120440018 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118848508 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106451306 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109554758 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088206311 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105238441 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106602901 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089874284 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102237988 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103846116 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091629229 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106299339 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103901159 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079816188 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106069805 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107709272 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085628675 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106385948 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106550216 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091333813 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106273896 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09475881 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087712453 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106175495 seconds)
  done (took 3.262675446 seconds)
done (took 18.21880194 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160799818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10959092 seconds)
  done (took 0.997651616 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094968303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114176483 seconds)
  done (took 0.941692729 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098313762 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095530062 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123426553 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110036625 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080990606 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09702349 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120166483 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081046562 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096739851 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082107991 seconds)
  done (took 1.720510253 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082299564 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110240809 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102495441 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096225293 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105745122 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095617719 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08818098 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098660492 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111359924 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077431125 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10346758 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115033157 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085379916 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115975931 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105048466 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084530997 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102475525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098850765 seconds)
  done (took 2.514961233 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079462411 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097204762 seconds)
  done (took 0.912304045 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081286991 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094059544 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081740446 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098023702 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094227639 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076719285 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09521587 seconds)
  done (took 1.356323582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486632488 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135921022 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25342988 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085355436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121086399 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302344594 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098936605 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08562045 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104021943 seconds)
  done (took 2.466968951 seconds)
done (took 11.642130046 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093893968 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117602011 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112567158 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465311505 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107572758 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098566047 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148129345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248794496 seconds)
done (took 2.13105552 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144568234 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329666467 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114410263 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068052507 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096650118 seconds)
  done (took 1.352672893 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080568353 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100474359 seconds)
  done (took 0.922905859 seconds)
done (took 3.167466109 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08148456 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097582594 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078348013 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097964717 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078125121 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095688115 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080439671 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131957394 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080410898 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.098312165 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098352524 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080966421 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096585536 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077804011 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096781694 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080526534 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095374735 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078206355 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095694459 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078654135 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095892245 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080316003 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094595695 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078292068 seconds)
  done (took 2.92308621 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10054073 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100278561 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103834616 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086452244 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102692788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087316131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102337639 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098373144 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086265638 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099637159 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101526488 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08537031 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099976168 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085818993 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10003359 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101655136 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086049008 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098535457 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083522653 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101635212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10360051 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080740217 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10140578 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103239621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08479759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101642181 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083005856 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097706856 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103203493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085128401 seconds)
  done (took 3.600305507 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08556674 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094512882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078722004 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101789166 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078015884 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097289555 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077952868 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095788918 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079187095 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094967138 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079888934 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094794399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07819263 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097173285 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079128051 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099735181 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109099687 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078686062 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095253362 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079247996 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097940739 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078007883 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096256981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078227623 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095631753 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078199096 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096370089 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077603492 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095653537 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077907243 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09859658 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082245115 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096303588 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084964406 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099331509 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078744715 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099395215 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078329617 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09615143 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094974262 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078424723 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094282769 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077526117 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101780887 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078831246 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097882737 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079433228 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097064127 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079041232 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09853926 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078568878 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096110321 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080700401 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09708679 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082751756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095841804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096059428 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078822693 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096616215 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079222222 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095236457 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077939092 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098248159 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079052324 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111054014 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085439584 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095438205 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080031347 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096392645 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080897908 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09769818 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110553142 seconds)
  done (took 7.176164093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083811147 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106239568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081221682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09834791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076733881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095501513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10016744 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078979463 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098056928 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086268403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095783576 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080667659 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097967052 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109212564 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079037116 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098321056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08568068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093864168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080051414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099665502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080425329 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099963194 seconds)
  done (took 2.758355014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211250199 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105291652 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143578385 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108964903 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084438571 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107716856 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103408653 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087773682 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101888196 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084702883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100390386 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103367355 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084371378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101684046 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101009821 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086145932 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103414171 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0864377 seconds)
  done (took 2.662634098 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093883947 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099106013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103625291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098669195 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099980755 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084021989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105472066 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108452706 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083978291 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098885624 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092578319 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101565099 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101931312 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082255778 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10121593 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082655523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101088255 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082077111 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107689289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104962818 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105258701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091275601 seconds)
  done (took 2.889397777 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097397961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100899516 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118999985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08437352 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095028962 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080140732 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10643179 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081954286 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107720593 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101102723 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081882742 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097048978 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08899079 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09815693 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103907246 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081650156 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101072528 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082260313 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101858653 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07761006 seconds)
  done (took 2.648600721 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103101112 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100630015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.21000151 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093053651 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100775417 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082953431 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109309088 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100819857 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083098399 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126310523 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10041231 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083178762 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10964857 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106892183 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100444553 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093106655 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110825381 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109653761 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083470372 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100163977 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126471379 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083740684 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109078268 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100159084 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083996084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101062685 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100531775 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089498524 seconds)
  done (took 3.664504537 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081152605 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099639182 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079176046 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097227958 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078945545 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097068404 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07896281 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096711725 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081743342 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097124295 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081277293 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098772807 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083466885 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098951587 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081724928 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09945091 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081970753 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097581771 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079176319 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097656575 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081949231 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099076452 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082033719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097178247 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079117726 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099090193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07966385 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096870289 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082146319 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097014396 seconds)
  done (took 3.445591027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091678875 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107533808 seconds)
  done (took 0.961650743 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079054234 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116254777 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079172112 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10419719 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087927659 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100497748 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108381761 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087160371 seconds)
  done (took 1.526757775 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097717651 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110965069 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08366581 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112928712 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110520479 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095644766 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166493858 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102366754 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089082946 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09861331 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11411413 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081515443 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106034415 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082553041 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106238468 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089304648 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098530301 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088405221 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10296596 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09882957 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084597177 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111661244 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08566229 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097853184 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084230562 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109901874 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08401315 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103182058 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108939316 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087819767 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094239837 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083184679 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10125463 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081184512 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110068257 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112824598 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084965185 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109505432 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083651987 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112056924 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095984646 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087185272 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105743531 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093214695 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101352038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083883085 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095716882 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097842521 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085002064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096354423 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082759982 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094269426 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089375204 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105167521 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113426032 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081102606 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103069359 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085544151 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103627099 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089723839 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102983665 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085308328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100335663 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107448384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087306944 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107863627 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078165458 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097437782 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081348996 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109346672 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123930659 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091270291 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102155265 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084969248 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099090709 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104350776 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08445826 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108208344 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090292281 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100563211 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108659871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090373129 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100350657 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08629549 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109786953 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099155058 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085246056 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09839265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09740895 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099621195 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081461256 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098520806 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108926616 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085673684 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101061215 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080867588 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108420778 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076633573 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101947341 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084333214 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101189114 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109857789 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089674486 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107120347 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107905386 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090386242 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101522174 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086530642 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097765665 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085037364 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103694463 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089481578 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093678708 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103708951 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084361167 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101988063 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09065238 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099591538 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08282194 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107611315 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107338857 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080787227 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097347479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085365252 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10085909 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086925164 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107274256 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09953291 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07768071 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09655349 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086947464 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100689946 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088254201 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107062371 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104269373 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077185421 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099336368 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088271229 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108605569 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083789036 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101420966 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10567352 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083735728 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100750452 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088934253 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103857115 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082274161 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105158428 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102243825 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079073657 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104613321 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085455559 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098606088 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087348649 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105440245 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103461039 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08407363 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099725461 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088100912 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102002389 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081682505 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100439067 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081380526 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110700159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10271975 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078345969 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097683619 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090176746 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098689371 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083035493 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100147807 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085062027 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102099654 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099320292 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083016485 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10303543 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095167404 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105979939 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102224707 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089137975 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110941802 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083038991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10230217 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082932965 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10299921 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101875266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090103853 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106224367 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088120413 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104398123 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097619831 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088844064 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109080495 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082084653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099186918 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081761789 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104278087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107565981 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086066569 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102339289 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081414975 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101436027 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087639412 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103873515 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101610255 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081933324 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106290081 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083348599 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108100824 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103127644 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091718503 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104787287 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078623105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105707293 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0813789 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107092446 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096255595 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080457204 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100398804 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083889953 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100436505 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085911092 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096182969 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090574533 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109310859 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083225819 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099478272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101689662 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091778017 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102865563 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086705724 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104355817 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088280403 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114496285 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100527334 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086156021 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110587372 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083259159 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09484519 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107855757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082167856 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101211389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081784147 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099595064 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086695411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111996066 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106793952 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07685364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104166461 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082667367 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100251303 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078631173 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107892226 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087380782 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10398478 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110425021 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084624275 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102816864 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087937987 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101539306 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085306616 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102563385 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105718922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085195108 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104100279 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083114605 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104087524 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082508753 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101981647 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085784845 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102223669 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10141819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090143192 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100849107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083839634 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.1042999 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085515581 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102995091 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102425307 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082445603 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104808286 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084758063 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101895345 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085119643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097254915 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091471599 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101653446 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110253975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082969701 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098303063 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088803161 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103979603 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088461218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102629288 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103440301 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084791692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101743387 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086246937 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11147451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081542655 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110607202 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10757053 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084138958 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105171898 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084527701 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102430091 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082982469 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104148812 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084717909 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101755967 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101228132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08776876 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104859707 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083359462 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103137137 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084287912 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101720454 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0846034 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096218689 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100922316 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083209562 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101448989 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091447376 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102744862 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08699857 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100522328 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084221759 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101635973 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098748076 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091578899 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111118593 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103240252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091893743 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101096212 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085271147 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112063207 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078359216 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09987111 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081884648 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099897356 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109393017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084926735 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110410312 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083348634 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101010992 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081637141 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104102702 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082681784 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096489973 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080989734 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105263314 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104505517 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082987526 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103295396 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085712551 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103979867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100000323 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10243212 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103293984 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085060851 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099767346 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082967869 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101352187 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087870516 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103605622 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081757152 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099717216 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082861512 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10419934 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102178296 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083512778 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10330578 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091273785 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102575296 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086888918 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1073756 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079097191 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105552608 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101441743 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0839961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101219186 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088194075 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106104127 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085508822 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11009794 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102713908 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084437538 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10256487 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081749067 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102415989 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084351653 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103293953 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082483201 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105257194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110263737 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081196924 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104942838 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082987141 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103193086 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088318887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103956984 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103931718 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092273286 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105652011 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084813769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108070063 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107077109 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088376933 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103480897 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085124523 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108326472 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083381972 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110753602 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103224993 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085455462 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104024033 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081184701 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102962891 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083216724 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102260352 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088733896 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1034825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081958109 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101651204 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100124898 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085308908 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106765302 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091690137 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105010873 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086508824 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098614544 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100066464 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086166873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100266459 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085698461 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105020576 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09014685 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104055414 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084527724 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102045867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109542491 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089940409 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10665294 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081729576 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107431411 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085195313 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10595624 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103471155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084194834 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103974662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08933785 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104307609 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0835387 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111675594 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106584571 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086103752 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104223812 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084367703 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103167745 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080616863 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103507695 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085761098 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109677553 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104988772 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084784473 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111896834 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084648289 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102646487 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088300091 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103032734 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109075199 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07988573 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102846108 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085803226 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104107314 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079016419 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102356966 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081522809 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105200259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10194251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079799058 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112706304 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091023712 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105186369 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083241743 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102316752 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078267383 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098194875 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101698206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086253739 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104871684 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09395993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101884946 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08398698 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098666224 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084433153 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10671837 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106390942 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081946768 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098232975 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083619594 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105041679 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091227109 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102048364 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08391941 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106498674 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10644655 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082524746 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108383243 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081431603 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106680331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09462245 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106077475 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104277457 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090528067 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111293932 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085825457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09869207 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08542872 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105966599 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103480422 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086001295 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104678496 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097220393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106724594 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08317582 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102142683 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105607381 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083885504 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110902248 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085903354 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104716122 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089065897 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105498176 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112446899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086844582 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109047489 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086107201 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106583128 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10205787 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084985231 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101029046 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082705572 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104300857 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085101504 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109234284 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112572751 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083879327 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112585411 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092550382 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10781053 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080678834 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102597207 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102071633 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08047945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103806581 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082614738 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102133135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082822283 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102335333 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085629584 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109340907 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085680937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105041385 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102490069 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078999375 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106814977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086997328 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104054716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08135794 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103129126 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086062716 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109256154 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107384485 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08472383 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104313023 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086927838 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103814646 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079972039 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109940185 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083485039 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106145065 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083408162 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1044577 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104352647 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088885754 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109996012 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085596733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106076885 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114724782 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087665501 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101475599 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081206804 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109665362 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082928673 seconds)
  done (took 58.050444677 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147441783 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081646998 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099142733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079708904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113999869 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100567145 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080206905 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100102999 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080975088 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103477635 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080279974 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099157608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109952006 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125754789 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09409255 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104649254 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079192116 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100999805 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098560038 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080538555 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110090932 seconds)
  done (took 2.884914787 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107142775 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118104063 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114828951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120524977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091346447 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116197479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114529862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115563098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100584759 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112459437 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120783338 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116051421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092815581 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11153175 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112084605 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094496974 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11923388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109607386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118143915 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096841807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114838248 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115844718 seconds)
  done (took 3.245088953 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08543362 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103364618 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086387968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099290717 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084698741 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098885271 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088612 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101650855 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088393709 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102362598 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082096062 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102743709 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105209313 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079925674 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102716871 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081549052 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15252078 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108028155 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083840959 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104975927 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079059515 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106854741 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099216906 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080271318 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102834947 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08938311 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104878499 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082436862 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10423349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083392583 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104665513 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08171537 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105236133 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104479479 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083714679 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102284491 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084512001 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102728768 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08014378 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10245039 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08523309 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098896147 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085245835 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10488425 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082577285 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102452715 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086338146 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104468084 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098151922 seconds)
  done (took 5.488888335 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106234228 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163585855 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087770805 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144731108 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122037476 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113813463 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088159588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143516981 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102826977 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083173794 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124357485 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12208518 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104719772 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090461163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111384912 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105106664 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085681486 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103949039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109625999 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084461716 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11032046 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092160712 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121611328 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118377635 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109709046 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083647449 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103609269 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109876071 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099029513 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110344891 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110058112 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092135909 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121976735 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110969254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104213388 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086880093 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123965519 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105679206 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08830633 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102106598 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088602621 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109815706 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110526047 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102734072 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104524207 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109796188 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085857625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.1016938 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118344257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087805108 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114265231 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121609532 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109401309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08622917 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110336223 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122430746 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085224767 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102954247 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089368339 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11872146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102930071 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089263171 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120806778 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107400638 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113231735 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101309523 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109972958 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108832741 seconds)
  done (took 8.193587581 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094740492 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1116035 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122254536 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122965176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092736693 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11203206 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112483454 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092732698 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111317628 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117615532 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111644654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135825366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087203406 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116074208 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112382069 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093291032 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113155839 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112746583 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09282727 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112626322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112054073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122122766 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093056571 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122265636 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14365278 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106839702 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092130846 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11152212 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123170376 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111969493 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124264286 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093451025 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11286942 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122796657 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126052767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092868119 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104456139 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111243767 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092486722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112670871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107287447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101913901 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113457713 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10788742 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092363001 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112952328 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122467271 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124581436 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115983768 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097903833 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112573539 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122368923 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111832077 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092676039 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122461109 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148110942 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12197685 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122393468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112344835 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102256457 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12303741 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130215373 seconds)
  done (took 7.755046322 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108633487 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116424116 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119288978 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101129124 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083467191 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109549385 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08257995 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10243455 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115015158 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095971071 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118007276 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109122608 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093815289 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11847563 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110273948 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113387085 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089912934 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110342862 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115245511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110489128 seconds)
  done (took 2.952291917 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094201798 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124315671 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086393088 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112510083 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109363987 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092470484 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107943966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108663457 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087672868 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108919124 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097375329 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11721165 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106243683 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092419907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117639121 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11242714 seconds)
  done (took 2.503816368 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096271074 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117866764 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121803948 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085510068 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105104544 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082018751 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10679972 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101058424 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081516747 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121971154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085805869 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112576411 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106356909 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084370894 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102114544 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089555694 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102152457 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083570962 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10671557 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120074727 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097096184 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104657954 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106540429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087813473 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105925704 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091922534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106914169 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103297651 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084412344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105562792 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085757479 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114589046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102537161 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084835316 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102842283 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083480992 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105577146 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087350763 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110949299 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105264234 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084913523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105918397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086155059 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106482283 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081399902 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107368787 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101736012 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091328643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104010456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086039798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106417608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087406105 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107357335 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117211432 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089188648 seconds)
  done (took 6.286325111 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100379968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109418228 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082016416 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10342092 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089336495 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109045248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110081139 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088682573 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108019813 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083338186 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108425607 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090630574 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10837416 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109141554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087874432 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109825769 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080618793 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107973109 seconds)
  done (took 2.621120578 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091732713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105834231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094096466 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106077134 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085853912 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109073519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081667202 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10586663 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10404075 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08593649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106066255 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088034296 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104892642 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088158224 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106609917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08558393 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108437124 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10495229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086529954 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102454956 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088907337 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104441392 seconds)
  done (took 2.978123464 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120222409 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125488952 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094292716 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230522109 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104140059 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133998133 seconds)
  done (took 1.642604204 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110613544 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122198795 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106821363 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107310631 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116344186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087424571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108157432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108767117 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119400059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103137532 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109972646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119119465 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120005645 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097681262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116486799 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115266978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108111909 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089268888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106424776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130649132 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089099008 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119261476 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109226662 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088550155 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109143794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118241626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119401184 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123601666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08885143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119276394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115445248 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089380729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118968035 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123896872 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109660331 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099878248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108198343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130668001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115179651 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098361795 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110063499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11550687 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098663818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115140447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118987556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109138117 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094778062 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109394307 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108701026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137285607 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094274604 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119649161 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116153851 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120244212 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099144931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157315921 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103107058 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119404975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116435633 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123710259 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118722945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095886724 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11845493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123994265 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11623224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119317634 seconds)
  done (took 8.214311785 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103736214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127134861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108723728 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12463242 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09738978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109266012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10918071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089432171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109563307 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10749378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153621433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089532434 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119375271 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119228309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089362496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108889933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109187671 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117834218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087904658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137678669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109493945 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119475874 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119033246 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098265393 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124260923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115508176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109052128 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089962867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109441041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10802946 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09488915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110516474 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119074965 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086696949 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119409244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10928884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088710205 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115524722 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109302043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115494623 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098223166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129798827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109766316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109316033 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102548319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109283731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10954652 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088551873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109557233 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107723413 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103211372 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123833969 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124982475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119295018 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108597974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087879431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109259845 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109674684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089419286 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116551735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119251516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088537844 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158437562 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089805345 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109693915 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119672636 seconds)
  done (took 8.081925087 seconds)
done (took 155.89320538 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229085188 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229650788 seconds)
  done (took 1.29621799 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098784314 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136509984 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096359875 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169787424 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107142596 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119928067 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138575035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098410095 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106497292 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086066968 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107710655 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087497131 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171908964 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085667199 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107258463 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108852708 seconds)
  done (took 2.671647891 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200943375 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25668531 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102425419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106384059 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089189368 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111405688 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104782024 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091974707 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110597362 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086136166 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109445954 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087662105 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106166725 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087146069 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111012364 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089601056 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107704239 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088223834 seconds)
  done (took 2.892435248 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113053986 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147133637 seconds)
  done (took 1.11152184 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119209612 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181984746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316820418 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156578133 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108075111 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128408355 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157048007 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131155895 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199652399 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124766896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123293213 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098483239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142371213 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117201024 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095552161 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119555481 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143346574 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094183526 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116004838 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116782191 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117847229 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106700884 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116364631 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094474013 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182951867 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120964264 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085189338 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108060513 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11798312 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094887852 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11369471 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126574561 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098940226 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178809298 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103339204 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178224943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098255577 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113151566 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115185355 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092602311 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120841784 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118931448 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105277139 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119747323 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086054575 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119375609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106403568 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086424701 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115637299 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098305692 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115934827 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114152595 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157563563 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119286555 seconds)
  done (took 7.58467531 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795711518 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157020191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090887015 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.889548597 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138316655 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105148941 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787311068 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136964739 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234984876 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763186122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134755208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123276609 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229790329 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240087494 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957466131 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31455789 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674625802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102156737 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15371131 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154080243 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120068453 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138588967 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131065752 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428606495 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097211742 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113880142 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096892871 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122821229 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161907254 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127885915 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115655981 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180769531 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250428554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208408487 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11751101 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090663358 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111750234 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170623202 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268987232 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214734533 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181698578 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087430351 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112056387 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101300899 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134578303 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109457982 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166555072 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175842684 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195516321 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092754362 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12305955 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120997075 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100322898 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.188781539 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099872308 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323934311 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313817024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112921446 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099519704 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128274712 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266661487 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123773177 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22731808 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118855051 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214777239 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111742843 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789293787 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19282341 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090761678 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119200035 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098900654 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118258143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122910189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169770581 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3934032 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125711044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094161232 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11202818 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219115325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127574481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111262737 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164426384 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095278931 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122315561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125617731 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12430217 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171925682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231180054 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125008402 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120289799 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094699287 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126135761 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117861026 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213935035 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221840179 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16512459 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210759543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12469729 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.167150388 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191180613 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099730663 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196640839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100241442 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127408119 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122587683 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218855984 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14721703 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102686795 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116609469 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118215271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150120775 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107616529 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120276023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171283643 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480328012 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171254423 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109305867 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10807934 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121891861 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162143787 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119031765 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25701052 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102058508 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192014357 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09946827 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110379197 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122405713 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167374409 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124259027 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100688249 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124394554 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119068556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237965831 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219045006 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102183839 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246883323 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.1856766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120689071 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175486164 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122142108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17025455 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120054981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100160811 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118414868 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800357702 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102493775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122542968 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117467599 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188967379 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090481246 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126383324 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125250855 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088277773 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777837785 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128963905 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099852891 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125589452 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120173029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121398972 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097893178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11699352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164105848 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233711914 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121523212 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098903594 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127032722 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162211981 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119419341 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126555045 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127477229 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104138977 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125021985 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114828958 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103822105 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193381974 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164669065 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223321848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571209512 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113200701 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126393557 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22926855 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091824624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289669576 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120322201 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206270013 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189955884 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099875616 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310036709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190241577 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190305523 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106550725 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195330144 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088820501 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118817071 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167324192 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112370915 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096845778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186380102 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105046219 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125684471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960280549 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091110391 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247795719 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089250197 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171696889 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11852882 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122319344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297299729 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091681607 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130455515 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165570451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117075502 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125127026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738879839 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126594199 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123300588 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097953871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224553846 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164884362 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120973272 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120740364 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12161609 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166549244 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211414451 seconds)
  done (took 44.390817305 seconds)
done (took 60.789393134 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277560979 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216983888 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263581059 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169852375 seconds)
  done (took 1.877495338 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171309448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151405896 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121981965 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107982749 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151675097 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086604927 seconds)
  done (took 1.666302854 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35826558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274755313 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243188876 seconds)
  done (took 1.758827806 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288768812 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248757345 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475994391 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324960198 seconds)
  done (took 2.336465016 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212434317 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133641178 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112259338 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10510457 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198346296 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250231567 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143559072 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202714143 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101076624 seconds)
  done (took 2.382282423 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197059747 seconds)
done (took 11.096462522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float32, true)...
    done (took 0.264086154 seconds)
    (2/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.183495868 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.301950229 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.23137842 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.185196425 seconds)
    (6/286) benchmarking ("sort", BigInt, false)...
    done (took 0.247505216 seconds)
    (7/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143214036 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127045416 seconds)
    (9/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.233213447 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.230522456 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123589253 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094222196 seconds)
    (13/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.230710702 seconds)
    (14/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090164565 seconds)
    (15/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.16222249 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.2092144 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185865642 seconds)
    (18/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119492893 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117368844 seconds)
    (20/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114903571 seconds)
    (21/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125841016 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.126641728 seconds)
    (23/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.12039062 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138525796 seconds)
    (25/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097764275 seconds)
    (26/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.23037705 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091444564 seconds)
    (28/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170216777 seconds)
    (29/286) benchmarking ("sort", Int8, false)...
    done (took 0.188452762 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116174933 seconds)
    (31/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122223453 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151216372 seconds)
    (33/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200619016 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.222945463 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.230063945 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094803683 seconds)
    (37/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.190436346 seconds)
    (38/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097641025 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192968457 seconds)
    (40/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181296173 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.1841065 seconds)
    (42/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.127036751 seconds)
    (43/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.177784647 seconds)
    (44/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06724114 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.149094358 seconds)
    (46/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089311978 seconds)
    (47/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.15468528 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117973216 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134414834 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.115722846 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137412742 seconds)
    (52/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118352885 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114448619 seconds)
    (54/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099376456 seconds)
    (55/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100665614 seconds)
    (56/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116080493 seconds)
    (57/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147517114 seconds)
    (58/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125199156 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173943264 seconds)
    (60/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.117651846 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111578894 seconds)
    (62/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096827553 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18233678 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109958945 seconds)
    (65/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067168094 seconds)
    (66/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134517423 seconds)
    (67/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094469686 seconds)
    (68/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.088999568 seconds)
    (69/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.161045446 seconds)
    (70/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158406076 seconds)
    (71/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094998295 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121268334 seconds)
    (73/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115039663 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111641514 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109414252 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068696735 seconds)
    (77/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.223426866 seconds)
    (78/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.087910183 seconds)
    (79/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121256871 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126000729 seconds)
    (81/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.164837488 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.110252785 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136541196 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099378102 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116233326 seconds)
    (86/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087080115 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189558669 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208165247 seconds)
    (89/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136400818 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087300974 seconds)
    (91/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113142388 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.166259954 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.11053136 seconds)
    (94/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067316331 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109302377 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093231258 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109241777 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098269934 seconds)
    (99/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09448408 seconds)
    (100/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.16769722 seconds)
    (101/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.155289769 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06737885 seconds)
    (103/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.142804829 seconds)
    (104/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129350814 seconds)
    (105/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121398627 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109781458 seconds)
    (107/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095427779 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115284347 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111598873 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122052569 seconds)
    (111/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067824974 seconds)
    (112/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228363257 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090998173 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087242511 seconds)
    (115/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.140662254 seconds)
    (116/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150316314 seconds)
    (117/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124348368 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094831089 seconds)
    (119/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148608016 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065919717 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.205430628 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09581835 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108892836 seconds)
    (124/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.158508176 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118262965 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06705482 seconds)
    (127/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089670174 seconds)
    (128/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08471217 seconds)
    (129/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08703957 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116334421 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094116604 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.239586702 seconds)
    (133/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06596313 seconds)
    (134/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097008199 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11829073 seconds)
    (136/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066090543 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136881112 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119291264 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086936924 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11750585 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.139239598 seconds)
    (142/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115911192 seconds)
    (143/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075629192 seconds)
    (144/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.141672694 seconds)
    (145/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089258149 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101433215 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096053701 seconds)
    (148/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.142579529 seconds)
    (149/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092277045 seconds)
    (150/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175387324 seconds)
    (151/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124774675 seconds)
    (152/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166011421 seconds)
    (153/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163927965 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08723659 seconds)
    (155/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.18633131 seconds)
    (156/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112477885 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091420375 seconds)
    (158/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.105571355 seconds)
    (159/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068461237 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085896792 seconds)
    (161/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110346919 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117449818 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095121201 seconds)
    (164/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185490231 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206031341 seconds)
    (166/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067313483 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086750955 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117249331 seconds)
    (169/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121332247 seconds)
    (170/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069646422 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066836925 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130672546 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119345377 seconds)
    (174/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095514757 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116440481 seconds)
    (176/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068001906 seconds)
    (177/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110694778 seconds)
    (178/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093960188 seconds)
    (179/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067137412 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115083663 seconds)
    (181/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06732548 seconds)
    (182/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119580606 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08766656 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.220611888 seconds)
    (185/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118689222 seconds)
    (186/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067963513 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10884686 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088680734 seconds)
    (189/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119185879 seconds)
    (190/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.39274958 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089260425 seconds)
    (192/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109140662 seconds)
    (193/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232503713 seconds)
    (194/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103206155 seconds)
    (195/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116982975 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113729419 seconds)
    (197/286) benchmarking ("sort", Float64, true)...
    done (took 0.23037896 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120773268 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095760584 seconds)
    (200/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101153339 seconds)
    (201/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129240044 seconds)
    (202/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115589776 seconds)
    (203/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110357252 seconds)
    (204/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096844492 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117177928 seconds)
    (206/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067248718 seconds)
    (207/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118393093 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093092988 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090485749 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088944531 seconds)
    (211/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111253862 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100803822 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107577193 seconds)
    (214/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067364657 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066575804 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123095994 seconds)
    (217/286) benchmarking ("sort", Float32, false)...
    done (took 0.173447659 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066720151 seconds)
    (219/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147160022 seconds)
    (220/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06763238 seconds)
    (221/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172859095 seconds)
    (222/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067823875 seconds)
    (223/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.098693757 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066686491 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086982433 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139659729 seconds)
    (227/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066352737 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171860727 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110792924 seconds)
    (230/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086799343 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066463474 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175528519 seconds)
    (233/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091078114 seconds)
    (234/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069470389 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087077532 seconds)
    (236/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.108655148 seconds)
    (237/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087856426 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171605538 seconds)
    (239/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123885894 seconds)
    (240/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087861129 seconds)
    (241/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111950194 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09365168 seconds)
    (243/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089879437 seconds)
    (244/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06699746 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135988017 seconds)
    (246/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067349095 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120539873 seconds)
    (248/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.076941383 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097343056 seconds)
    (250/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101014499 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067102872 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111470305 seconds)
    (253/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087086309 seconds)
    (254/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116857486 seconds)
    (255/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090096609 seconds)
    (256/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105420463 seconds)
    (257/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066391049 seconds)
    (258/286) benchmarking ("sort", Int8, true)...
    done (took 0.219338223 seconds)
    (259/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067890421 seconds)
    (260/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090078881 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094572603 seconds)
    (262/286) benchmarking ("sort", Float64, false)...
    done (took 0.172689594 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085735443 seconds)
    (264/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101129884 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087406726 seconds)
    (266/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099828936 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085835187 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109989212 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096188054 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089750581 seconds)
    (271/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068344417 seconds)
    (272/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087646621 seconds)
    (273/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.11015735 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092089056 seconds)
    (275/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115974407 seconds)
    (276/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116555582 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090756577 seconds)
    (278/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06771589 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181801093 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114952316 seconds)
    (281/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089470237 seconds)
    (282/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156916218 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069385674 seconds)
    (284/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090465372 seconds)
    (285/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088097461 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13510289 seconds)
  done (took 36.103800729 seconds)
done (took 36.990647522 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100970552 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147429202 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096218927 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135550634 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123881072 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091494344 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11791171 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098249147 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124159037 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124818295 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099754513 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092935369 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097605289 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12056056 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099782669 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139085784 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123616393 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094301618 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119897872 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0860347 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118527859 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086737635 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112260417 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069996604 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122111926 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094695131 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116847451 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121105146 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086876135 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110089057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090757361 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117923918 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087535774 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124699929 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095019058 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119262368 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098416672 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120352365 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088434199 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110848994 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117728193 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086565178 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116863325 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095193171 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11560428 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09312131 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117993767 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099278989 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140470816 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115310366 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095701697 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12081149 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096409982 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117139626 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091658081 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119343732 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092209293 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13981837 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118609232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091625115 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118008 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095383418 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116186443 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095351936 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119274911 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120820356 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098055138 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116146522 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097954912 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115904818 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086908699 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119513405 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090769687 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11083338 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096982645 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121942579 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086873412 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117377971 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093779158 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116589418 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110624011 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090375933 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113057758 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092942554 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113982767 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069711305 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091441453 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117615361 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086735476 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120271482 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117053028 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094825524 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112265916 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099902257 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109795691 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093174383 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11131241 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087973889 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112803471 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091088891 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110639021 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091018811 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119681836 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089267489 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117841982 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100510738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111037458 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117538339 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08751641 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110504248 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101400672 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121526181 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088390417 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116132253 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08748012 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118918345 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087039161 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111527489 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087706945 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111045916 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093405577 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111375194 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089962196 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118204389 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125355838 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087021621 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114436711 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089573505 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111075159 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093133089 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111619081 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088240367 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113041698 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078109951 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114843771 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087195603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11842404 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091467727 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119759504 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088711774 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120341918 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092220219 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117182535 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093377319 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111562425 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074311949 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116871475 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090221742 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113726209 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087784172 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112616931 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087531501 seconds)
done (took 16.965093513 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088249903 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185363952 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152455537 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141632933 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107839222 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112114183 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122506001 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118988587 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113472674 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143042767 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111934653 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13235938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148971985 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087614749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112567716 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092922843 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113686769 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102630885 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146958352 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132727335 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165544185 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08705787 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148596547 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135276691 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121039604 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105019925 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113138832 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092294133 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116402166 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113009459 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132488662 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090722382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113416477 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134689514 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105671714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120664246 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088436921 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119054256 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088028803 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112146889 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142690379 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134421899 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093235511 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117937274 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09193726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114225941 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089506534 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121733954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098804946 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116751343 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126955149 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157940718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091392013 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12139585 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086661648 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123031314 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121397403 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089867984 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112632826 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090875644 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112244746 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091864574 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127747927 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142880515 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092026165 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122500606 seconds)
  done (took 8.636521478 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105269788 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140487598 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13110111 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107374215 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111482165 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088544046 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112546189 seconds)
  done (took 1.742997734 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088676205 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134503242 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111164147 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137309514 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133357067 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109057458 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123971568 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088399652 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13206484 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090154199 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135127039 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153137593 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09087768 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120639937 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138190997 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089310011 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137581609 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089463313 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117425665 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113605404 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117177248 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13558819 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091258892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113566246 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102910496 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114577142 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162432191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094288806 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115262021 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092152456 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112659499 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166991882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103330761 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125346738 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088990859 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129748402 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145829006 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087281808 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129814671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094581531 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127756225 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089266355 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11491704 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086920838 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118947084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124345619 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090414874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114726789 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09180613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133912174 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090508037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127876259 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089837699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118306798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089791283 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120205732 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1245886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09021936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134376533 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091143174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131794167 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105208686 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128880657 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131138962 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091574318 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127707054 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103694485 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117239031 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091270573 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118306652 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131403261 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087840759 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116098109 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10053701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115822089 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113302153 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138671728 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091036223 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125462286 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11458401 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090849127 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114493835 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112989143 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118321975 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089240337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120675763 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092247879 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112692843 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088420944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12032278 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114332561 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09176306 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118828382 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090086115 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117432398 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106414313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114791391 seconds)
  done (took 11.87207428 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090772077 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11665587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091765426 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1145593 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09158247 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115560272 seconds)
  done (took 1.577941453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115084617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117082992 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103921842 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121024523 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156339807 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104616985 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130827415 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124278907 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10824441 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128718571 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130320895 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105386272 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136481395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122131579 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10421661 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121457043 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105381426 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125280735 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127313246 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097264221 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136904765 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121781926 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097439948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132095142 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118991508 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096618805 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125765257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102718508 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128468376 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123615128 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096544756 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119079047 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097121119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123835593 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130127163 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096981371 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120984761 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120292869 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101832792 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119227811 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106552951 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122292066 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127568985 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0951807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123924277 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122354851 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095063246 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125479423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105835744 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120514279 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119459265 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09584699 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118522496 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09580747 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121604456 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124103706 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095072783 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130390698 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096468116 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12198698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119003684 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094669203 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125075315 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119352791 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106165597 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119867266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097328817 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122449613 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121629692 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096543235 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120263509 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09348239 seconds)
  done (took 9.254909633 seconds)
done (took 34.025701433 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689193684 seconds)
  done (took 1.644822151 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.830849768 seconds)
  done (took 1.789687112 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.011020262 seconds)
  done (took 17.995561149 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.5037684 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583429543 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.005111117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.184214496 seconds)
  done (took 3.235490777 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956651613 seconds)
  done (took 1.935136055 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285311951 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233993842 seconds)
  done (took 1.485866537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772667982 seconds)
  done (took 1.747153345 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.397108047 seconds)
  done (took 2.36382257 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327919195 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185974085 seconds)
  done (took 1.488657567 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549756885 seconds)
  done (took 1.524262945 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.814159545 seconds)
  done (took 7.791704389 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269682371 seconds)
  done (took 1.253241819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303316613 seconds)
  done (took 1.27860801 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.575328357 seconds)
  done (took 4.552705866 seconds)
done (took 51.053389412 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099620305 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127443291 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10233078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125130857 seconds)
  done (took 1.423875854 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101611912 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12164227 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101138943 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121426172 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126444241 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096598228 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124481169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102139227 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120993653 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096186687 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121726593 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120819598 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099992144 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123590843 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093969477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124765603 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099522066 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122573623 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124019652 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097860926 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118950184 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099092501 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125180435 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094534183 seconds)
  done (took 3.657656427 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100514648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119126918 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097314641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118574719 seconds)
  done (took 1.420076743 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100420309 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131309187 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105370924 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12617882 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132148158 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107180466 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118004652 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092529717 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119099199 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100787395 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116511155 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.115073767 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131468864 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124537814 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101762326 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115051703 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09081003 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131878941 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125051359 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101204071 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117798761 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099902877 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115679265 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109111602 seconds)
  done (took 3.710400632 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170510458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126665688 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138642341 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095754464 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15976225 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140860645 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088434695 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140824983 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088413379 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13150019 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118818802 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134692201 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129500159 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088290282 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114682863 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088315503 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129480298 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128463603 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091839966 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127640709 seconds)
  done (took 3.422499314 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098814045 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118058419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088641664 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116913939 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098988771 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121628575 seconds)
  done (took 1.630373878 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091435587 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114075541 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09014913 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114695781 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09517203 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11478728 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089328095 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114727879 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089221099 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114425827 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089878298 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115063623 seconds)
  done (took 2.22036201 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501792023 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120412412 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12048818 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090935333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121640873 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089917791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129236005 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092694042 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141293869 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089869649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116673546 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091026126 seconds)
  done (took 2.692771049 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234061897 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125468972 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287097039 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373397859 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156212151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178493573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281982074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16282957 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225021864 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167829509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203818317 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225049857 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152013763 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192557569 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137752082 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145047297 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205105532 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247923516 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154420928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209737249 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227674642 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167271055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180847138 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151349692 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139681358 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172135812 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094146929 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130477634 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236434884 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177058037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217251801 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16267807 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147408862 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210723824 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25501797 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221965267 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284503898 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135587957 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151324919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172711086 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263499614 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139056729 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203376487 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158172321 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131528381 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218000162 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166641747 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178228927 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153679584 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139019146 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195867443 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241683561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1936811 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138919947 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301093569 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149150168 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200791273 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194490247 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252080571 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200687155 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214357285 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09569411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188295563 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220421877 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186612419 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175253537 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210408537 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148856941 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201969054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189653453 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164354804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222078761 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186428477 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140898738 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170916719 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173275369 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172888739 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259240061 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213805994 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096698376 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170635477 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151445587 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134397033 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196040156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09969319 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240538874 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144472135 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162904678 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215257169 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161020683 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160704249 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206149017 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232068795 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150062112 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084103527 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154775945 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155902999 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195075448 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140948497 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159366963 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163742504 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130667677 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183976819 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125039272 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185974604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117646974 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175594373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185205766 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127230326 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162492176 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151642877 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126049169 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202814232 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200056495 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142720128 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133393427 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210509856 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178476901 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15270084 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178253528 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228956228 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116973626 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149839813 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230330332 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21874632 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140461283 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229361548 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15688431 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108837496 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133062151 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182925939 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155305927 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162708946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135787028 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183914999 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235141392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098651449 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140387241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194519398 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134584036 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133129356 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163835293 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148518953 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140118811 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126786285 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154537452 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210005112 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18004813 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154888907 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166498328 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152870359 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255009382 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142164799 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124542453 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149290963 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121224835 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193966825 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225905817 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105414531 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232633491 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173612608 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205517691 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170448774 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135908686 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17847657 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130146552 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093421766 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2228507 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169681547 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162196952 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197566558 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227183099 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181006976 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182869115 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200529042 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174116909 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165479111 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156934012 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112838954 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161642167 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198639431 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096639476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144187365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135128565 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148345748 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115291195 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134847294 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224796442 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171264898 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191019066 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159822457 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151530467 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182492204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129275997 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176274568 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178583171 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149718641 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200739793 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223508308 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187043226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144815778 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202381345 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121884337 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125445364 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115437787 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198132627 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108024373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137769654 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166033469 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182241871 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182154458 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204967803 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212926709 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200812153 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190937092 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095282722 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170246699 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186617836 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205575557 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167129737 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140474327 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150911529 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180104232 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15908171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255840243 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169389632 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176262822 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235630416 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150535395 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106259966 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15196153 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193431705 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153426941 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205825091 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121842707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142538728 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162292798 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13485688 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161774111 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184354824 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163786866 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215998537 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150105407 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187261325 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128813337 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165073033 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16121022 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167461064 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081343099 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176107541 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233659513 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149435717 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169368118 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190119478 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132435503 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309271849 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25050875 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197479844 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138191971 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156196033 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161718452 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164454204 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172942633 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179340512 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160186795 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187164114 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16005982 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137820001 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141522612 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122370582 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151259488 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131663785 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148601001 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177653503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140173215 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187154728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164329703 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161147425 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172449294 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151370768 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144977981 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150541111 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215510228 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185006747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239960735 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152730595 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179496641 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234365562 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099100688 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133070829 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132963123 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179028509 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109870913 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22374179 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187401051 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232687846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18443953 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194162785 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140516171 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12107611 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158285901 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174737279 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20867102 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152288039 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160668194 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233181258 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119351008 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133228519 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179102366 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316979278 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120902126 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22522727 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080948217 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281780445 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126268294 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131445051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13769368 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238339449 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136386244 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188468113 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173412945 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172734822 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165511094 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151136039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190821035 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244298437 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204224872 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181203503 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134255768 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156402685 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178215541 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220028829 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160028053 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113545438 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233755036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196672327 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196821452 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142569209 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169005885 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169361197 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158066568 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216375916 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107249022 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236999712 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135780604 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195223055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154618785 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145043776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176118339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215922639 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115136101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216441652 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185739468 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135931945 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106346121 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196693384 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183020237 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157912463 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099503812 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20807016 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098272774 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222252171 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231034714 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136574203 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155815509 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148864893 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136318358 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156237723 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158449694 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113400201 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16624022 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204493008 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136133324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220087449 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206443898 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170840848 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176419951 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145558405 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693847709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131857471 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195137284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16134346 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236768993 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149749037 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174104871 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16025999 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169612564 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197760625 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162599292 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231147543 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220657134 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179376177 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132571442 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158453741 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165015071 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144100472 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12493429 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169746994 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159509661 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155415539 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206166916 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173599914 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106804825 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141192169 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226381288 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133536474 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211944991 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180944574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138915011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174445346 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188425239 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134003431 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1807472 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238964363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142001239 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125111615 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134499878 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15810859 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264016478 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097617892 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235617295 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186462612 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160114228 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168578161 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147475144 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223052138 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158055703 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186093377 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148286471 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160653678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158202691 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138293675 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103218741 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156600197 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168352053 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150489805 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159654512 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166464774 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195955438 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122773115 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117007846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316273036 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193642235 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246247392 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107642965 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136989577 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162593332 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15369932 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177762329 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179649347 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137019101 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137312278 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137165112 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131218264 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140219372 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131692406 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225009334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167153578 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21025247 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137609314 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279550631 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113174605 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157098107 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115768948 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104950239 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152029204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14639663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159598542 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219776723 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241209728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147949342 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134435015 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151010465 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097664025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137313416 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165036689 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16653587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178818739 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145469865 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080805044 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158289385 seconds)
  done (took 83.747580144 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163524587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132182932 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154207792 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202535011 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176630776 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270497605 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210218198 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254156205 seconds)
  done (took 2.64037125 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094854026 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146231362 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158107001 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133272154 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091908331 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118913247 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346019488 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133863743 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117020493 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122788713 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174632248 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093719035 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552301535 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091593172 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11979708 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10730531 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093785621 seconds)
  done (took 3.766799136 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476109784 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721581225 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.51405454 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100089594 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.214855204 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113684099 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.805008309 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197785869 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115284637 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486283198 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.783716218 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15940814 seconds)
  done (took 18.769737343 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11625458 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136755477 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124466709 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153505974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141254829 seconds)
  done (took 1.757952069 seconds)
done (took 131.831324741 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104336248 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405075703 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070980197 seconds)
  done (took 1.591276876 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107952777 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138200435 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10908058 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136660585 seconds)
  done (took 1.584510382 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097997947 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127470113 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109175363 seconds)
  done (took 1.421901658 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325557054 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191909742 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.168855437 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106701315 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12959463 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10359461 seconds)
  done (took 1.427184552 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09778547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128478879 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097675135 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131018863 seconds)
  done (took 1.542976848 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095031086 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070539033 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100638589 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074849658 seconds)
  done (took 1.426161014 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114260222 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132089419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104309424 seconds)
  done (took 1.438763658 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130479077 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139729235 seconds)
  done (took 1.359299707 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105737335 seconds)
  done (took 1.191729512 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11788028 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169992384 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.181616152 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161057219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.204882114 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160703237 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14455075 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.139963701 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128765195 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141811154 seconds)
  done (took 2.64178556 seconds)
done (took 17.496704808 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104454071 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518730724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385048279 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146679327 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723502286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38075122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.097822275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146801506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166519829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093441306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139539639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672324856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052243241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474564859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01255326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377851973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676531477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121437981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119986168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094280597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.084063152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09244739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12250956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092676866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704693621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425488129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094939188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376735271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092961197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127557868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383782007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123285607 seconds)
  done (took 17.306255361 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095827594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175808506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098997881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138713981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123623795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094689525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125281415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093773895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180278927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123633855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110354997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122143535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126273849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095463764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142524794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092664512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125755747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094165241 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12172584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122412103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112820797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120454797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094950458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122060828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094050623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13634775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095313634 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121553339 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120983908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09959357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127789178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095724738 seconds)
  done (took 4.839907882 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141627944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184161459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129006824 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128293828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169943385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124783331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201558096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119657294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183149409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124092351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140525924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092860887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157416308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093617858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142781153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121665605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096827555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122690818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093124075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123498253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141017775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09350058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123172025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093950697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124116535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108702628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124670817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121655564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093803163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12739085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100628547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124052061 seconds)
  done (took 5.171266612 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09773797 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126876132 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109612347 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138320447 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096237246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127034809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097338454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125053078 seconds)
  done (took 2.017873248 seconds)
done (took 30.420097216 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111351973 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128235182 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107181477 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136087977 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103334586 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132253681 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091170174 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13434145 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133565336 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102572478 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137993631 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092637166 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122950541 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091775256 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135109218 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097695926 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133329555 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102949622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134401958 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132293419 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095391326 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133574208 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103741448 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134101967 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104928468 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134340689 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13775428 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100689964 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123889553 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094790575 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125267977 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103912866 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124694216 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105396546 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127421415 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097031487 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124665381 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094799895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134674786 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133166328 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100957697 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134017524 seconds)
  done (took 6.023429102 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10725038 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13968264 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105995262 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081432833 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117528141 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080418596 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138858345 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07977556 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110601795 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10848211 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073885284 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106429643 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078272312 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101697512 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077221057 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075959974 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108691649 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076101565 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076503462 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106440716 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080025726 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072437577 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108867983 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078470859 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074825052 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11069988 seconds)
  done (took 3.580748509 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100614862 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135112657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113958405 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18507625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16195143 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099585768 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133129259 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110472863 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139828727 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121073088 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096429772 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149669666 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109830305 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130462414 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09251064 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138447899 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13613905 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09412173 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128825992 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113164934 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138916093 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103468959 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14203785 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133282351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092681512 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123907002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096887229 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135720789 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097517199 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132425133 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097993018 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125876774 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123784674 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104422732 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126947426 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094387423 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142799201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103333249 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131444964 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091833223 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130711768 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122293424 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113965053 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16154383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091445039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129653604 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09611399 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134659316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121559533 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111316742 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131275505 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093091358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125745804 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092381133 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121833053 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106132618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125181878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095504936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132335051 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127142613 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106830356 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12598091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108436217 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122084239 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101335501 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121736196 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092968434 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12268042 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115317615 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124646457 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161936719 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094057979 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124740532 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102101821 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130917434 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128187016 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093707356 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139102627 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103959609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126733687 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102755148 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12678624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095545899 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140986418 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09574541 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124385099 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093095415 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129329577 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124193355 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094717383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136925117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092731145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125836106 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11096962 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12300296 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093883109 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130387522 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128451895 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092827121 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13796875 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099158614 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124233421 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104202032 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123191058 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095914888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133028697 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126325867 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091825731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127196963 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099876068 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123082068 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094043381 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126876297 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095381365 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13361648 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100344482 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128653972 seconds)
  done (took 14.880730918 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228614317 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215958533 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206749427 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294823318 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135929038 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114764394 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212033651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15594509 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124169487 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160910986 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174891568 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182884003 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170101223 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183185367 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171609834 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093003358 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143285699 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133578637 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247133124 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258399532 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14391356 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10065785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161859766 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160046771 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137502381 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102386444 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142097389 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134449823 seconds)
  done (took 5.812859944 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109884413 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156205579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098396399 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145917759 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149985996 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09333199 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12911109 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094521731 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136172362 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136502873 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093693547 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130242195 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101426737 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133573384 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123584822 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103816461 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13311854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09533565 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126141278 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09766564 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134828287 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102620693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127475168 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092108962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13346176 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121907666 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087212771 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14366445 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.0932889 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144915048 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121747191 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101968987 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136717832 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094241711 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122876008 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095500653 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125547478 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095203541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125570626 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092316026 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122968254 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077938464 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122332921 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10746959 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129153665 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079586715 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130481995 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.09844305 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124913907 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121241188 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097201689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125905256 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097447771 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130766558 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096869248 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12447903 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097556805 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115908949 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100614116 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125283641 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085423047 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120653775 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100463901 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118366012 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102066731 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127431229 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092771523 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126456477 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098260746 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129490626 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095600685 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130113171 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091151918 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12640297 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096625718 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129974571 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09718213 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12279325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092601714 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123851843 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075103373 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123598956 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073859836 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126492709 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092029747 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122754119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096086004 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130742075 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14022435 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095808542 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.1328415 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095138622 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123370452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09692113 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114063746 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096617016 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140342693 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142278353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09475328 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12197959 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108210619 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126308133 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092580569 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106624505 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102652203 seconds)
  done (took 13.013807441 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128306039 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154467137 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095506705 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142668172 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157957642 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158263703 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101452655 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131584771 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095900409 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143472977 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094759607 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132586538 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093831944 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139008824 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158605271 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104470344 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126077226 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108440801 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129025418 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171558919 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112429836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143166333 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11136258 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125511973 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099418787 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141656082 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161990584 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108128246 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137868189 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144151925 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109141207 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163055013 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114019848 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128514024 seconds)
  done (took 5.50393095 seconds)
done (took 49.915644612 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.221788049 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426459075 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195998364 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.167011724 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.232145658 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.19983688 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.226845173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200121518 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.708818853 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198531349 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44822249 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.861636715 seconds)
done (took 60.215959143 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.319359063 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333111626 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463051233 seconds)
  done (took 3.921119602 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.55986668 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.160576351 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460413901 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196712356 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198150455 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486573154 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.887015201 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.577653546 seconds)
  done (took 28.090612581 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.207032786 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.283486448 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.225400938 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.206149496 seconds)
  done (took 6.047947357 seconds)
done (took 48.06403084 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220394584 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.222914642 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.207481281 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178813087 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310045543 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.233161539 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.552948306 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.223258103 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221414423 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185862658 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220266307 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203865414 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199654997 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.631713485 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19837923 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199118115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.198057897 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.713269044 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.607615821 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.208597441 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202274923 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231951264 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216691117 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199217812 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.211765268 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199581854 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200919491 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219972899 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.865587402 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202959496 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216314649 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.779106644 seconds)
  done (took 190.808937904 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199455708 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.301231679 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.378967392 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23920354 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.711977405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39920277 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.339362764 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.775116394 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222758545 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.214758352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.467018534 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204402598 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.53322431 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177034738 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.238806298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.278629547 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.520424129 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.587777241 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253674364 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.380339873 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21371187 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.481969948 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.384968433 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.476232797 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.244124303 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.254284238 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.232895242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.21310113 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.403715126 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.447939297 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.225270291 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.266124099 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.84081703 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06249355 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.213725597 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212234789 seconds)
  done (took 150.725185113 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.24720717 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202448566 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200767212 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202963152 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.234702113 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202005421 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776831185 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797361866 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.717258442 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.940338934 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.573391971 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201986055 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478263079 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201677637 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297650614 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216145023 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20342669 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218845267 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246823184 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202303998 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202642533 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794855457 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220526654 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.345448001 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.401328137 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.219741187 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237361206 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593612627 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203663767 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236195973 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536845205 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25444496 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204124356 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.590108406 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.064529422 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317672676 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205932561 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236326308 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202831057 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485081699 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203321545 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.203387415 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203857129 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207360791 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203460387 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872647785 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.204779914 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779153771 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204190897 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.173520801 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203933813 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203486684 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.512526791 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.839660215 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221905981 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205758037 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207817977 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20511978 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205055968 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238194229 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.513415035 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304679373 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.224247262 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209523266 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238951075 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206237712 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.436153805 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227406425 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.403562345 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269206055 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.426140675 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799224204 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209314337 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304860601 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328784761 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206855519 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205484941 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205722371 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206202191 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.317820058 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205249233 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.640559665 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385086203 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223608851 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.663190037 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307526239 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205259314 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602895529 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206013886 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206471943 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978205522 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.206892394 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305368921 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206864715 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205541564 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207806498 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.640895485 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804208688 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49038548 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207916762 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.511159933 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210811511 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.656711079 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774892708 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.874850445 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208479685 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320737491 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385654588 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22579847 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207516443 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.664834319 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212532616 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.26551159 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208541585 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606275247 seconds)
  done (took 367.579995172 seconds)
done (took 711.486126349 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822789849 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.823147777 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.926481662 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.814347394 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.778500441 seconds)
  done (took 10.299285662 seconds)
done (took 11.433315357 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398466532 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.396064831 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271209691 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400388922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237256743 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416000551 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376695914 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231800818 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309881508 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291306673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30874375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261099737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236178129 seconds)
  done (took 18.270736137 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513260087 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517114366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272952957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525372701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248983646 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524599357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409815108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428591381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42372768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243420723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223618708 seconds)
  done (took 16.467784099 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531531325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530910364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277048433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569532447 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251778901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529436752 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41316797 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425115763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437831423 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244486671 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222637749 seconds)
  done (took 16.570256048 seconds)
done (took 52.44411849 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.219110248 seconds)
  done (took 2.355613232 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255103801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.419845693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238521342 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226136463 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220039823 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219594657 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22575361 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220879867 seconds)
  done (took 11.163874933 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218551774 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215958168 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216014179 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218051531 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218900328 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217554584 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218987501 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220103908 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220092763 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21929521 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21633629 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218669212 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220165554 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216173832 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218905435 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218224418 seconds)
  done (took 20.629029372 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219090876 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218126591 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218452654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218507488 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218213935 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219162378 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218263651 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217474376 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218166251 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217835876 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218463719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217870909 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219497231 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217942467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217688028 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218269524 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21671807 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218165436 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223371182 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218983752 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219422818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220054885 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219626587 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220585838 seconds)
  done (took 30.390652275 seconds)
done (took 65.675858719 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.476961811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.942173524 seconds)
  done (took 9.558139555 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.222307468 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222537532 seconds)
  done (took 3.586092967 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222332948 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222011539 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221979008 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221488787 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221375606 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221286121 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221750388 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222027555 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222169796 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221146057 seconds)
  done (took 13.358457935 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222361218 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22268703 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.2204826 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222021634 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222290451 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218947514 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222659214 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223229193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221963744 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220577035 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222881825 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219215068 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221805662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220322291 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222668625 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22106237 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221775042 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22055795 seconds)
  done (took 23.128651022 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222451739 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222510119 seconds)
  done (took 3.585331724 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.22087048 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22144708 seconds)
    (3/7) benchmarking "month"...
    done (took 1.221473607 seconds)
    (4/7) benchmarking "year"...
    done (took 1.223134515 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220859781 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221477514 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.221298702 seconds)
  done (took 9.690937534 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225436739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395277897 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.475526822 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.826997796 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225846782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227314739 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085855936 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227021555 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22967079 seconds)
  done (took 14.060965693 seconds)
done (took 78.108266192 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.251510315 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.2371745 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.410044394 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225908444 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234184052 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520694315 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.267773087 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.347690024 seconds)
done (took 37.637570908 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.239543396 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.209186308 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.004979985 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.216669859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.248070245 seconds)
  done (took 18.821607356 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.292229934 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560118035 seconds)
  done (took 4.996083135 seconds)
done (took 31.201398399 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225803748 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224847781 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.222416623 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226360363 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.222812524 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222973817 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225597535 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225710642 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226020029 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.225938617 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.226390968 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226182868 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222795625 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223819366 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22641804 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.2255587 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223557579 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224917195 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223290707 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223495696 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224234638 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22576745 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223898026 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223580583 seconds)
  done (took 30.536918562 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.228692619 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226697153 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.227127678 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227939421 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224858324 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22689307 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227214391 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22523611 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227415231 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22678264 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225887077 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224416296 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227458056 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.223835938 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227620255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224631013 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228640856 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225073261 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227976322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224555762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229878236 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225770182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226561057 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22863688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22658492 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225813286 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229093425 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227053107 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227937591 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226523123 seconds)
  done (took 37.947969482 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234008589 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.235586172 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228892523 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.230171534 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.23065817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230258995 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.228778018 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228974935 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.229509133 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228746589 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230001697 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229907855 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.229408203 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230957413 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230245606 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229350486 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230054537 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228562883 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229365056 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229630771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229547132 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22913959 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229254573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229642001 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230016824 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230588247 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229559277 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229102198 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229376609 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230944115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229800804 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230379042 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.230288661 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.231134167 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231150198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228596296 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23531109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238546054 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230865355 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230142535 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.23180883 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231202882 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229844234 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231390012 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231071468 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.231954055 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.231721916 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231809874 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231094906 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230300966 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231337763 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23157509 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233016586 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232586135 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232231808 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231406414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231825653 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232407978 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233137244 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231855101 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231087463 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231237407 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231516253 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231104067 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232335479 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233786279 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234063666 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233365345 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232821608 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232402852 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234208409 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.233444178 seconds)
  done (took 89.791626335 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233862756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231108249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230657802 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231180689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231974638 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233429479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231158258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233293571 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230894251 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233993457 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234181882 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232498704 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231439467 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234997413 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234428535 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23036235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234136674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231928973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234026989 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236253394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234281732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233148741 seconds)
  done (took 28.274296169 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235504671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23625856 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231866 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234457501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231479554 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235126909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233489282 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23600202 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234583568 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232271172 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232556069 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235509622 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23236392 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233533184 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232645051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234428704 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234958621 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234150977 seconds)
  done (took 23.362899436 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233572111 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233251318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235342991 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232196673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23433246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235931757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233158177 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237085891 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235778382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234320909 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236886418 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235438333 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237276202 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232978278 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236111767 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235067974 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236901045 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23558932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235811193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234583483 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233547243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237163961 seconds)
  done (took 28.326124968 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237571497 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235983714 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233893932 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234925053 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234785282 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237362026 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237200492 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23518586 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23831709 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237697496 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235915639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236873485 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.236405521 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235048694 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235607523 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235350541 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237578355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235680008 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237941129 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235036223 seconds)
  done (took 25.877959188 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236972304 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237868387 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238932543 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237644503 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23877782 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240441972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239095543 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238904152 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239158976 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239303519 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239779227 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237856146 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239580607 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23923316 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238948831 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240235704 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239648143 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238581916 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239870291 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239291462 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240405242 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240401188 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240683473 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239926672 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238694913 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240203168 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239543835 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239314382 seconds)
  done (took 35.854654778 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23974556 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239917335 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238838979 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238811508 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238848665 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23694619 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237789908 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238884708 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24008517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238228351 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240505427 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240820874 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241101691 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242140151 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240141691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240837635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242032751 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238723534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237894479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238021861 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241241622 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240777574 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241408241 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238577228 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238269474 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241281965 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239049098 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23923922 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240925901 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23852122 seconds)
  done (took 38.348118084 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260254684 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261948024 seconds)
  done (took 3.68049294 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.240214617 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242086587 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242433939 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239690434 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240434737 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242814528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242520321 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2398937 seconds)
  done (took 11.088240404 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242104412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243383303 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242686886 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243176482 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24326852 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243578259 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250091305 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26361871 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.243835282 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244688063 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250967748 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250065679 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243574888 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24401333 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244164851 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245354527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245030265 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24439925 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244982815 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245321265 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244097334 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246693207 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24671615 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.24305868 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246392783 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254236016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26709768 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245038737 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245293621 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247435506 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245410812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242609914 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.250684373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245702624 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24540635 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24437641 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253695658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264045233 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25083751 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265324824 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245896572 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.24359596 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245112253 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245659948 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247963705 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24629868 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246138169 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243570385 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245497012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24941715 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251709711 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246245329 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243817743 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249383769 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248123174 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252882795 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266772865 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249352866 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256036195 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257300611 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280089744 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271780118 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248428792 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245032933 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256559416 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270382672 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252840923 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265445056 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.244663777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246661372 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253624764 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279406918 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275022484 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247061627 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247090112 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247614001 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247272743 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248204317 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25503928 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270714777 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248005737 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248300243 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258720639 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27140948 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247544041 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247225588 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248548281 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248966192 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250511533 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257881065 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268689932 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250265541 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248207548 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249398 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.248893639 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24939343 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247596606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250347644 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245965459 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250611977 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247598195 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2534927 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25940982 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249482253 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24948105 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.257002163 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.271269176 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249638046 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256206104 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249843669 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250402391 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252023096 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256235974 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248286581 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253060545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259159026 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251024569 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252401582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249601227 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251110024 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259670263 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276102363 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2499163 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25139684 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255320641 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262929826 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250931366 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253042986 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2496702 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249358168 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248592411 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252142713 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251997278 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25210168 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250552331 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253146798 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249394725 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.252579733 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251829965 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252626838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253132102 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252158748 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253424541 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251826037 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252481702 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.252710627 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258577265 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273120807 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253699073 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25266389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249537435 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252955654 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252492029 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253494563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251977238 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252671907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252915095 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252864874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253242724 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253944122 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253495841 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253533556 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257372199 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252941858 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256615565 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252761319 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251635192 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253853852 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254160584 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252142574 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254877025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252430744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258284981 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261989222 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254262161 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253765254 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256456376 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254374987 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256062944 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254326895 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257948497 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262810678 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255080111 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261329713 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274813975 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255535202 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255216757 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254576845 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254377834 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255832046 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258293993 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263134077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266455834 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282540364 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25633571 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261066298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256693698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259408061 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259675114 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255353617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256716804 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256626092 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256204843 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255665403 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257996382 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256458509 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254806361 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257818725 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257263886 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2563049 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256974377 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25663032 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257059718 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255853548 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257860708 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256354554 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255890735 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255964031 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255951653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257332741 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256918723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25678258 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263140694 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254102865 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258883238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257854345 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256496323 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256270411 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258879276 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260783631 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257432033 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263483602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277431826 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257030314 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263951812 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277028056 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25687682 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259805452 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258557752 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255662316 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261800173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266712677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.258538728 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258054651 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259198384 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259276707 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259001062 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264498604 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278419687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258000884 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25980244 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.261242897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256716754 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259623376 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260028669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259512657 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261130437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260639783 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259906383 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259574926 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260596443 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259312813 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260147585 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262883153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268854132 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26507069 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2604573 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261751849 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261498787 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263964018 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261140573 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260370644 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.259993697 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273119491 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286764975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265156553 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.282185743 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261139312 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266527324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.282278102 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264944609 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260996617 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262138266 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260244161 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260817167 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25997682 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261831319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261963563 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263323054 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.262579427 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267472911 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262229704 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262181617 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261089559 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261162084 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262070554 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261210555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263946781 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.26359698 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264666302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261686551 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.262080461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268147293 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281853363 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264211478 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262664595 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261758901 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261045521 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264112911 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262901872 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26550059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271196118 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265432706 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272467968 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264248588 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272397828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263306877 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266427358 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271898439 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261259237 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263094546 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.263996946 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263229718 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27195668 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.285045175 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266358379 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269014353 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264070763 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.264009166 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264075063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264157498 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264716492 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264573293 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272634635 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283855327 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268732746 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267509692 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262573678 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264627677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267038306 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263547995 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267681459 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264717621 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264781396 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263421948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264499555 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.265868739 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265100774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266203179 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263284107 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266665332 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273039338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287904305 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269400212 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.265744111 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271702671 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287586961 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272510478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.287183271 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265933477 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265208831 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266639291 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266604626 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26613176 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267258214 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267104787 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266669844 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271524844 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26727741 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267642793 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267108831 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267337339 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267358068 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278492848 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289218907 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269874104 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271455479 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264706597 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.267973235 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.271259618 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267013636 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265949648 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272011913 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277507959 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275970175 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.268408398 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269216606 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267326055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268000176 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268997037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266988705 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268007926 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.26893935 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268113329 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26787772 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271356645 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268192436 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269823615 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270133249 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.27004046 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279340979 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.290618639 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269007739 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269583138 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.269392088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269783239 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270114299 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269544054 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270648393 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270824065 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.270878792 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276185137 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275998893 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273429328 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268928756 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269769852 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.271020435 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2707851 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271414482 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271579597 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270525173 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.271507264 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268929909 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270752363 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269475273 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27076323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271541479 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269935442 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274165539 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.277229369 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271282132 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269552343 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27101458 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272249826 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269248323 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271484992 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277939089 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296367344 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282168084 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27912391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274905316 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271790593 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273424016 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278240148 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270485269 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272413569 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.2731665 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272053101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271206325 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27410718 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273121605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278256075 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294240584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.27099212 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281155908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294032064 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27169987 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274380746 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276542826 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272491747 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270754846 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273239236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272613141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279250624 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293077361 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272713362 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274606748 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.271319091 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27401665 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276879388 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274156912 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274731161 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271612624 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272433106 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273894466 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27517775 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271473289 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272759683 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274162978 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276230828 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281396423 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27254786 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275984478 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274296712 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275812632 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274343694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274420619 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272127857 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272359879 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274415139 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274991911 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274290342 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276953265 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274295443 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.277799363 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277092078 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275288541 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277220174 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285689701 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283387775 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272644163 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274173366 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275373642 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27799078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275349532 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275219946 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275662798 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276550925 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275980142 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27477382 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276814473 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277673611 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291076329 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295941404 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276136836 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275970063 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280425427 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27682794 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274864953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.276544309 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.277517122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.279354171 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283300329 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277147737 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282376749 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296499344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276738405 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280421857 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279765026 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283752461 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.279038653 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276576853 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277916942 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282139245 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.292570137 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278487595 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287653836 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308037041 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298257724 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278835935 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277513872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276895943 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277429179 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279670168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.27961136 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279538496 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278290707 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277857034 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277702647 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283255375 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279446438 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280435565 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279094618 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27734096 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279558749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27712425 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.2792849 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279245489 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278602496 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278971922 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278334554 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277770929 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290840413 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306998575 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279792383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278831815 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278038006 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282525611 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282308444 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290292 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288121406 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279819151 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27932952 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280236417 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279872872 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279259738 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281673161 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280438314 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280178739 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.278172057 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292836408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308525817 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284845745 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279358908 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280119501 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279950079 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28159737 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27980452 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280642916 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280393261 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.283287934 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284345679 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279544592 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280969764 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285545168 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.288994736 seconds)
  done (took 755.247544564 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279444051 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278510279 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27919979 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278832155 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279149572 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279689417 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278944189 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278146688 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280922976 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279998572 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28013508 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279700954 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279475181 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279990333 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280554134 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280528489 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280872154 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281682908 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280762944 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280321804 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281036658 seconds)
  done (took 28.074360538 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283580206 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281354511 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281144367 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283099918 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279301445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283506728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28148444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283071037 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284674225 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280824445 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283601742 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284077951 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279479233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281041677 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281693912 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283348695 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285170431 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281339711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284836418 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281471793 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285348048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283291782 seconds)
  done (took 29.414185145 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28418368 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284104557 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.283276998 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.281830186 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28532841 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283044872 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285164676 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.285975644 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.284992772 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.285046 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.283645332 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.286443311 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292245439 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.291074792 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.286625489 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.286031901 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430583703 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285819387 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285559316 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284648502 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.282507049 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289853979 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.305079969 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.282584318 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.283776603 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285143477 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286220832 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286027726 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287102293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287356853 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290295142 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.286574161 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287855113 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288226703 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286672164 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.290286559 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289317119 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288259099 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284448385 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.285265088 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296191756 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309843278 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286840045 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293479177 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.308228302 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288774324 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.290248246 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294403876 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.283169535 seconds)
  done (took 64.457955616 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.286706175 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.288311846 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284614109 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286781098 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287907781 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288053446 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288194796 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288020077 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285159047 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285253822 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288656941 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286650743 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285210196 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28905604 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289731574 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285807615 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287363299 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286500416 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286846624 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287634505 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286991251 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28888769 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289155859 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287047799 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289677009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287214063 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286614743 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289546146 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287182869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287710112 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289792061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290341519 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289657585 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287687013 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28744419 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290020916 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289759017 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28778545 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29005417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28742738 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289702886 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29082014 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290786279 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290428255 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288000279 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.287826063 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287807807 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288285315 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.287769716 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.290527394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290052849 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.288853459 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291052317 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287693508 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28975592 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291111435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287462069 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.287853315 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289860936 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.288139436 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288093903 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291632883 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.288445842 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.290023374 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291225212 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289049183 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289582273 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291001832 seconds)
  done (took 88.818874041 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289887085 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289921822 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289661256 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291073588 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291770745 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290433276 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290832895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290898592 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291112885 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29124193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291197549 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291064726 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291082465 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292387188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291762858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291603081 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291808721 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291978736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293320883 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291647288 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292210599 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290744488 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291845626 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291694581 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293674797 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292196421 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292501224 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291258078 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292105834 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292352921 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294453232 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293034822 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293490696 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293190634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293747131 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292811793 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292303163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292741477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294174778 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293318369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292761092 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293567772 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293553846 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.294114049 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292734086 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295405922 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293877692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293432952 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295747723 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293557453 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292850734 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293788421 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294262477 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293308846 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293544927 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.2950461 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294933263 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29314651 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293871485 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293861187 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294994836 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295115957 seconds)
  done (took 81.351439574 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296332433 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296344469 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293271268 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293115945 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295608071 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293580297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296324505 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296645064 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295069307 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296076237 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2958926 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293739833 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293751218 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296372496 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293063059 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294013815 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29300546 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292313094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29637434 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294081561 seconds)
  done (took 27.102695737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293704117 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296526493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293866707 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292802623 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296408747 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29260353 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296133388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294398455 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292808464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295486682 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295904994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292916049 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290590385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29180388 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294145241 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2913021 seconds)
  done (took 21.910090827 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291264604 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293425884 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291434766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291949422 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291336819 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290819567 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293054784 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292034003 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293156916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293885391 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293111269 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.29384321 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294113344 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292836965 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291249574 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29379584 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292596662 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291374161 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293127754 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292177299 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291117765 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291350564 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293896772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293570503 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292948246 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291225266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289980863 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29192753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290364994 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293464848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290205571 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292222782 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290907892 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291216211 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291781883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289409383 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29330428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293626581 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292913185 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294093791 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293485517 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289397829 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293950405 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293025635 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290870944 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293146718 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291662711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291095911 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290031515 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29094325 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293900695 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29286058 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29313475 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294047892 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295576986 seconds)
  done (took 72.284003272 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293902576 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294663336 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29265997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294553583 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295292047 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292121211 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295362787 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293856402 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290951372 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294200744 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292133483 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29628187 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292907742 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29479271 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293299686 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294470291 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292830376 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29376716 seconds)
  done (took 24.495305299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293089102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293634181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296641062 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292772007 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293117787 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296322467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29281929 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295251264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29604784 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294326013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293600286 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296430998 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29635487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296013368 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294003423 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293072024 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295933876 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295778651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293313008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293373608 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297041789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296418998 seconds)
  done (took 29.692581723 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.294206687 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.294562075 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.294264601 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31039184 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.313666885 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319362857 seconds)
  done (took 9.034489263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305101171 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296078244 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293432998 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297834412 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297974698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294456085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293375746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294271845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297037245 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295387644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294774567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297464404 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297114471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295060109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298183516 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296795759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294827399 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294772065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295782747 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298226585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295345244 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298586474 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294762857 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295317097 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295109789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293963911 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29726444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296906847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296289155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299115769 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297920573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296847022 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297860618 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297006178 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298935489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299179988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296420745 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300236445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299392569 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296167189 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299256228 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297932107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299991043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295865865 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300205448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297546909 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296766921 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297043937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297347018 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300467275 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300220821 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296681177 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30024692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299514993 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300241334 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300469601 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297544998 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297436816 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300995085 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297341862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298904483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300580524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299270753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299336089 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301147244 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298295107 seconds)
  done (took 86.875694388 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297927263 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299344552 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298621606 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299519645 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299691168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298250765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299375403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300329159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298772999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297831301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301054939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299250812 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298686142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300611637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300699508 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298131404 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299044436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299554408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299221369 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302925057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300153566 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299468985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300530432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299122194 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300128145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303645056 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299257092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300627577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299476564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299713953 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299025343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299943798 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300672595 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300470331 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299594917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301458714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300437261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300257554 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299852884 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302305604 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300302423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304217971 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300397063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300764915 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301336621 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300017708 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300619141 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300719223 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301476731 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300309048 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302073342 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301643856 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301643195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300044975 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301243335 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300658513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300505725 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301902041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300722478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304168566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302142204 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301213873 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304619066 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302136155 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300982198 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301492285 seconds)
  done (took 87.046407873 seconds)
done (took 1760.038132562 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.406670367 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.382857271 seconds)
  done (took 14.004584592 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46564737 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.41808007 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.301757719 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302705572 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301796742 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307800707 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.311511787 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.3014062 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301217509 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301095267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300697256 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487232055 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.354049068 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302320595 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30194262 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399703843 seconds)
  done (took 42.676646353 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330138386 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308961648 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.425927701 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331917871 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329924712 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501008228 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364559501 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30604583 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.488974141 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.355564026 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.017835357 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335261041 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306672973 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.53177722 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329537735 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500505355 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.575558294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.039544375 seconds)
  done (took 30.595591852 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785876664 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332198517 seconds)
  done (took 9.334818715 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326925817 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.306753327 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.30739217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.30546439 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298226506 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.29979098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305073136 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.299831079 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.214699621 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.446221858 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314114795 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31328469 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.325382159 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.307817696 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304427463 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340988036 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.459925913 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305971904 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304131113 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313522996 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305957027 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428984297 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349999368 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305865652 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.441645738 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.205303753 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315303906 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313536342 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442626835 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308034145 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306897561 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305870794 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308505779 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.918810379 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79768522 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321315571 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331192614 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316068296 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305751289 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.495359877 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309728892 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314910405 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.299962156 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.7964836 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441681002 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425586446 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.58844074 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327141957 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309582355 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369904698 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309169038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310291842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33666386 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.072588122 seconds)
  done (took 110.660309278 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.359429614 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.70380742 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472923615 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325947726 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.163421277 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.083385034 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325118726 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.601544803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340343911 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301431786 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602584472 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832366335 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.333767107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.322258163 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798471532 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.313231179 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302378223 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.158814505 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325218135 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306642361 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803278287 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302937272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301930482 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.429019326 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340492433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768686694 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.802629848 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.860765394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325403843 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302447185 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791691386 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332300959 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321857305 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303169301 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574450388 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677373766 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665670944 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326442144 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317431541 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.304401941 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.322830764 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765869624 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.674665053 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321262625 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308173935 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770103645 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.321237879 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313158214 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.308923475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513450585 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.999498349 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304218768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.797981607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309875068 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.595640905 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.351299633 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.326009885 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798203494 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321764629 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.483484657 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331652325 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303739821 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304340011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304407278 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307834383 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664647069 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698345684 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.31055147 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66356179 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799679871 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322119808 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854466228 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.227904947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323294509 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362095485 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307670018 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.972143662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811307508 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.345733614 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305516433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6499002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325676559 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.595691617 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329950531 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321935063 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819504172 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.316581714 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.340055858 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.305592843 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.330870497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.067698728 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308783902 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602402768 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.348915171 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306470229 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.305664811 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312277369 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305728378 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306824086 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.313102317 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854098047 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324333666 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.302729507 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332208753 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312625167 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.313771126 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.311355599 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309872953 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535012056 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.797683986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.334503748 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308381655 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306583138 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.324977986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.448397495 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.311682656 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.626739659 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326265237 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323620737 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.31893083 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05939955 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.33436382 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308492711 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318635536 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.234567844 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.518520275 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32903493 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.309575721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308160976 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325638895 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.678185029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3313879 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.38312145 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.314155587 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031607807 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35066498 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.327878442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.653166895 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318542466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307767322 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319138359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308842504 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598637906 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586618832 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.635607572 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310907641 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.325991482 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.010987346 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.335813243 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456621619 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328028114 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295689322 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50785652 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518071257 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309333807 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.931762959 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311114802 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531585437 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318579705 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611846976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818260231 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328014583 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319065371 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.034799386 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.018065369 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.066016297 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311145658 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59236486 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.262468831 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.792848996 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.311380757 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311833256 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.898386256 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311455211 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317958554 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.311431609 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.311078994 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375873574 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484990501 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.515797085 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316207321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775973422 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366012233 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310804691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321501128 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.31453764 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663697706 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.387253435 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31377767 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.355721019 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.313154476 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315689936 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7969744 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.267219141 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312053954 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465583302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965498063 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.3290119 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312602785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.948143278 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.526602592 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870216117 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.371591762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634856866 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.341284733 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35279623 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018194047 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.400782133 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840962087 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333030141 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.315129699 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932347869 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.330441384 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393774644 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.312806122 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.314683719 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87121632 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332129483 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.317296382 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.690939055 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335686322 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569163269 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.316020383 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.331729769 seconds)
  done (took 1107.214858048 seconds)
done (took 1315.700927068 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.315201675 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313717928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300694117 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319269349 seconds)
  done (took 26.481316744 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321515368 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319237406 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319018096 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318224018 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320215125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3193972 seconds)
  done (took 9.150869865 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.342195037 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313999261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320572922 seconds)
  done (took 19.206797795 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.533465638 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.684964618 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.696878971 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.667815653 seconds)
  done (took 10.815958964 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319722846 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320563042 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31948068 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322470569 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.32364923 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.32373135 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.32299473 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323473857 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324538257 seconds)
  done (took 13.13154563 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.324973627 seconds)
done (took 81.343633275 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float32, true)...
    done (took 6.314696233 seconds)
    (2/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.17284479 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.235924396 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355371985 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.978577179 seconds)
    (6/286) benchmarking ("sort", BigInt, false)...
    done (took 6.314451241 seconds)
    (7/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.377124512 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.571395559 seconds)
    (9/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.725612979 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.294755153 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376365112 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341838438 seconds)
    (13/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.329094295 seconds)
    (14/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.232288364 seconds)
    (15/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.37546442 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.316241743 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.295708711 seconds)
    (18/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.442974978 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.314632262 seconds)
    (20/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387957982 seconds)
    (21/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.533965178 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.195752094 seconds)
    (23/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360885985 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.775544947 seconds)
    (25/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.316811295 seconds)
    (26/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.119773223 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.323463158 seconds)
    (28/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.297759981 seconds)
    (29/286) benchmarking ("sort", Int8, false)...
    done (took 4.39845785 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.855256493 seconds)
    (31/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324585399 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317471812 seconds)
    (33/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.313983935 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 6.319201416 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.296680233 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.419363888 seconds)
    (37/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.500067922 seconds)
    (38/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359959346 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.295941049 seconds)
    (40/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.584700816 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.363992322 seconds)
    (42/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.81259445 seconds)
    (43/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.315743512 seconds)
    (44/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.300413772 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.277550292 seconds)
    (46/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.297589843 seconds)
    (47/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.977241264 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.42796899 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577345965 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.233646 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.323403954 seconds)
    (52/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.323005825 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.424157677 seconds)
    (54/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.146366122 seconds)
    (55/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.402968116 seconds)
    (56/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.089799975 seconds)
    (57/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.302651501 seconds)
    (58/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.459641128 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.560575248 seconds)
    (60/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.195706927 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37525064 seconds)
    (62/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445979853 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.419863792 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.318505732 seconds)
    (65/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.305299641 seconds)
    (66/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328979278 seconds)
    (67/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.401303259 seconds)
    (68/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.295874203 seconds)
    (69/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.726373073 seconds)
    (70/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.918495205 seconds)
    (71/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335653255 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.756707099 seconds)
    (73/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.458939571 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.902799655 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.318459013 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.299387376 seconds)
    (77/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.186837946 seconds)
    (78/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.681934491 seconds)
    (79/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330805133 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.842048314 seconds)
    (81/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.300157079 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.573316671 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.733844871 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.42256342 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.795521365 seconds)
    (86/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.33173239 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.426367497 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.299167089 seconds)
    (89/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.794335984 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.680781023 seconds)
    (91/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.40093131 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.300232391 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.46281861 seconds)
    (94/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.896106809 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.75336134 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.811500491 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.057676507 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.320863394 seconds)
    (99/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.327223709 seconds)
    (100/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.986002476 seconds)
    (101/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.681859392 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.312298107 seconds)
    (103/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.000026761 seconds)
    (104/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.115650093 seconds)
    (105/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.321372706 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.745102615 seconds)
    (107/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.365053208 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.118363918 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.542250441 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.945768083 seconds)
    (111/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.301364866 seconds)
    (112/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.323732355 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.331939305 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.976321684 seconds)
    (115/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.506414035 seconds)
    (116/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.30238888 seconds)
    (117/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.429671218 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347420493 seconds)
    (119/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.177640569 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.303528714 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.844054437 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36434615 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.285706166 seconds)
    (124/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.686937801 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604128912 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.312333505 seconds)
    (127/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17078068 seconds)
    (128/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.948772659 seconds)
    (129/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.324505429 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.126645738 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.579978781 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.302962671 seconds)
    (133/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.758442563 seconds)
    (134/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.424717191 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.42620077 seconds)
    (136/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.091104914 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357699095 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428447656 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.125683522 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.350139621 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342054567 seconds)
    (142/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46109737 seconds)
    (143/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.687810636 seconds)
    (144/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.535500308 seconds)
    (145/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.426747278 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.304069028 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.347088542 seconds)
    (148/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.979624921 seconds)
    (149/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.354713943 seconds)
    (150/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.629262538 seconds)
    (151/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.6912133 seconds)
    (152/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.829175511 seconds)
    (153/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.337516724 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.065630403 seconds)
    (155/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303441686 seconds)
    (156/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.481293951 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389232184 seconds)
    (158/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.839315698 seconds)
    (159/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.308619905 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.823099101 seconds)
    (161/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.808168561 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.350064128 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351611838 seconds)
    (164/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.307252096 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.146923052 seconds)
    (166/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.529452021 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702729895 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369903027 seconds)
    (169/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.330696084 seconds)
    (170/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.336551544 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.314842491 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.994801835 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.3739894 seconds)
    (174/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407199696 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.14742681 seconds)
    (176/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.983410782 seconds)
    (177/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.330752765 seconds)
    (178/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.492020318 seconds)
    (179/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.56354168 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345602629 seconds)
    (181/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.336139416 seconds)
    (182/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.412141939 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.184520153 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.433358807 seconds)
    (185/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.353550786 seconds)
    (186/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.714365862 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.40238188 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.34563103 seconds)
    (189/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.357331219 seconds)
    (190/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.322649405 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378431211 seconds)
    (192/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.144826482 seconds)
    (193/286) benchmarking ("sort", BigInt, true)...
    done (took 6.326650133 seconds)
    (194/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.775032924 seconds)
    (195/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358044648 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.343129278 seconds)
    (197/286) benchmarking ("sort", Float64, true)...
    done (took 6.326702033 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.970048934 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.537405507 seconds)
    (200/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.728116331 seconds)
    (201/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.589651107 seconds)
    (202/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.355919721 seconds)
    (203/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.582914067 seconds)
    (204/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.344190891 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.384469856 seconds)
    (206/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.418476077 seconds)
    (207/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.357625459 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.349959107 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.862088295 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.387517044 seconds)
    (211/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.412308422 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.054715783 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.388541571 seconds)
    (214/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184331331 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.801858046 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.76358985 seconds)
    (217/286) benchmarking ("sort", Float32, false)...
    done (took 5.35946761 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.149749944 seconds)
    (219/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.602786308 seconds)
    (220/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.954682504 seconds)
    (221/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.311476562 seconds)
    (222/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.969096942 seconds)
    (223/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.723692026 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.309745504 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.300610936 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.713319333 seconds)
    (227/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.143190638 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.354432033 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.019387554 seconds)
    (230/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195440475 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.309436994 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.906302175 seconds)
    (233/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.396418941 seconds)
    (234/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.338479186 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.588325504 seconds)
    (236/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.40886573 seconds)
    (237/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.353815754 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.577897818 seconds)
    (239/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.058116001 seconds)
    (240/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352405484 seconds)
    (241/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419412588 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355779858 seconds)
    (243/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.309032008 seconds)
    (244/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.311590543 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.353653541 seconds)
    (246/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326874703 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71692525 seconds)
    (248/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.716607289 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41649921 seconds)
    (250/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.213456353 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.836962567 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.328673742 seconds)
    (253/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.478126591 seconds)
    (254/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356263413 seconds)
    (255/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.394204329 seconds)
    (256/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.31091362 seconds)
    (257/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.599335785 seconds)
    (258/286) benchmarking ("sort", Int8, true)...
    done (took 6.345419165 seconds)
    (259/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.859707147 seconds)
    (260/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.560412088 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.43154321 seconds)
    (262/286) benchmarking ("sort", Float64, false)...
    done (took 5.685920897 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413115374 seconds)
    (264/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.694846734 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.2892539 seconds)
    (266/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.847087395 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.462747063 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.24270546 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.149024372 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.311951342 seconds)
    (271/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32623019 seconds)
    (272/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.336767979 seconds)
    (273/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.440755544 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374736593 seconds)
    (275/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.347685598 seconds)
    (276/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.357863351 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350238223 seconds)
    (278/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.396494495 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.42417866 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354970111 seconds)
    (281/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.439959616 seconds)
    (282/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.425334082 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.312926678 seconds)
    (284/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.574008357 seconds)
    (285/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.378639983 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.968241165 seconds)
  done (took 941.971500704 seconds)
done (took 943.203623521 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.367903491 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363822039 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344466224 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.365516834 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457727826 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367456222 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.35562955 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.348771279 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39302178 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395033816 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.344969634 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.366444513 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347231114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347032396 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.345493955 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36042099 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.45059243 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346487426 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364405763 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354809064 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.365428991 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344708103 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393654853 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.366375692 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350128442 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.349835998 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.351000141 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366357343 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.45893542 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35016971 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349267354 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358146949 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.451922582 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346213865 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.34135362 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.36691079 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358813907 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355460098 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350158168 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379370728 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.882585579 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365621608 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350499878 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347394876 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348997387 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.351425624 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349621485 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354083616 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362560946 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364528742 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.873106418 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.381137151 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.350612542 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348504655 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.360351063 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349934929 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.351758041 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36757887 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.368353651 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367677948 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.446099519 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.355235305 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.350953953 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.367220079 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357698239 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.909902602 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.362632646 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.35452002 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.882362873 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.372216434 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.910375607 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377103347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351526001 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.364864216 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382423289 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.451481074 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.346169912 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349425631 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358727835 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.349670379 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358849124 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364313319 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35540208 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349372923 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366148452 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374366678 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.360731812 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.352387671 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360120413 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.370550222 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358758862 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362780823 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353901768 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346568951 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362137889 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355572482 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354103182 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355308363 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356543492 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361708357 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.882857811 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388541917 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348358522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349083459 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351629136 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.36612374 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.882423357 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.372751853 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.374002612 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.397721501 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353527752 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.445664026 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355619376 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371287261 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361100122 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355377195 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347269789 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.446297646 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.876523591 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386121602 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354619897 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.352240003 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372551799 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354690963 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.351504518 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.457018035 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354931458 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369200197 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.475428471 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.364664767 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.386109159 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352793509 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.358316624 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376815615 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371011873 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.384907891 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357659166 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372273949 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.371549919 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350590016 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365125688 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365133849 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355479239 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358215123 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349314293 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377256079 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369265966 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370027076 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375714399 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.476872476 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352307722 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.451038014 seconds)
done (took 229.44034835 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410645988 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347968963 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.432541745 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349971938 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449397708 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.451133339 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348534673 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347703633 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347319204 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725668662 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348476434 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348506967 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341328148 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348166429 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.434690365 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.349442336 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.34805443 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.688106001 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350173543 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.419806536 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347391153 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.347800023 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350482517 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.729498571 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.348599385 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349349085 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.420852714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350986342 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694592933 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.346588026 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.3457993 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694892328 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.445133906 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369034392 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360826755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.358614232 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.451991927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371354003 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431496538 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431850978 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.434054451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388968387 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.352478171 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.347395159 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352314903 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354106925 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349764237 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379639442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.351157017 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350184861 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.691801641 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361864399 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360532996 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350957745 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351503992 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372799178 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.351217064 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.35337432 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445619619 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.352876472 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.414231927 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.731318145 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730186953 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353821708 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.349908018 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351671633 seconds)
  done (took 149.577362377 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421587804 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.426750725 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467749773 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372856324 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403937598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474242276 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371477612 seconds)
  done (took 11.199878042 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360738532 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355144673 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403043722 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403900531 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.354063893 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.500800439 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354265479 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.367026379 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353159342 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.407358753 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355006489 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355311249 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363112524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352031183 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401625687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364852836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468195739 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354379238 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356003886 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.505614033 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353909923 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363426794 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.407693762 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366122368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.356700903 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360053783 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.919524731 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355413513 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353131166 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356176099 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35451243 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.392768702 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356618147 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.350829352 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353799702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471840585 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35539237 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354342939 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356576731 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.351495114 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356438543 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356638733 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356755011 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35566682 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356625878 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37938192 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357208806 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.357463701 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357300503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3582562 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406795075 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358134408 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.35486735 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.354152365 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411694222 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365445148 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357857584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354912633 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358251515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356004419 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.507668964 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405004329 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.358754923 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405011195 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358920668 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357078479 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358779311 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358651229 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411041055 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358613895 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405605174 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358240752 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.513206975 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.381182349 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358314396 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361045847 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.360715977 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357658555 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355243485 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364134681 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357099971 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359607829 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.363951893 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356705811 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357283595 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460848805 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466197741 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357254467 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.371604783 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364692532 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.358044207 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412165919 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.358494833 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357639415 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41116143 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.473868775 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.412867926 seconds)
  done (took 155.455767751 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365128469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367278403 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361404698 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375613686 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360106669 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.361012703 seconds)
  done (took 9.458420561 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.363157687 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364151013 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.361188229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361953761 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.360958026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36181951 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360633476 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362629756 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.364538078 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361125831 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361055096 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362652172 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.361719884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361073227 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36015909 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.361608713 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361166305 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358793206 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36154018 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362192051 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.456905448 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361443552 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363558109 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362052267 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.367176478 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362686808 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371401753 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362468115 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362937844 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371194942 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381911316 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.36387004 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.363539845 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368502701 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367103953 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.363631783 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369409363 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365150781 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36078629 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.364000304 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.364712815 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363374885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362989893 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364278679 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364838351 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.368054774 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369249546 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370636906 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364403612 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.365958721 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.365783807 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365020026 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.363772709 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.364555491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365314672 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387459656 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368974484 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364784953 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.364219644 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365137223 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367755753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.365036408 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365784635 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369731191 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.371932856 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366177771 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.365788164 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3697373 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365185985 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365515223 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366125204 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.363042118 seconds)
  done (took 100.650080863 seconds)
done (took 427.599700523 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.416150296 seconds)
  done (took 7.68943779 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.532943708 seconds)
  done (took 7.807975598 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.215404802 seconds)
  done (took 23.494759327 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.396858041 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.503713785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.375746496 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.368010081 seconds)
  done (took 26.918390516 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.861576268 seconds)
  done (took 8.135227728 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.375427625 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368985223 seconds)
  done (took 14.02003864 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.480843141 seconds)
  done (took 7.754494556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.391752951 seconds)
  done (took 7.671783538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.359280797 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389309234 seconds)
  done (took 14.045315876 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.360040657 seconds)
  done (took 7.633580333 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.432067115 seconds)
  done (took 8.706789436 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360773345 seconds)
  done (took 7.634882424 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.416377202 seconds)
  done (took 7.690417237 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.881237945 seconds)
  done (took 10.155725891 seconds)
done (took 160.631428233 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.359919974 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36840579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.36072519 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.360011995 seconds)
  done (took 26.723995323 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401333918 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400513769 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403315884 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411440282 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404741995 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401817126 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394898103 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.393301681 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412214155 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.404976394 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.404792331 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.404484452 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403301042 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394382323 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403758573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404180242 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.411773203 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404374045 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395549221 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40520094 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.369956004 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.413364596 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405220586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370387782 seconds)
  done (took 34.893175238 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.889439989 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.44026254 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522309551 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.420228515 seconds)
  done (took 7.548875156 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42116425 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.42314071 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.43460113 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472779166 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509907129 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433830321 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.397162364 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392229829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.377765484 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424087115 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498236903 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439632143 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.522621686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37055438 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563563068 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370600362 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370479116 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422859493 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475975946 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488777417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371190046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421506709 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.425751722 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440732965 seconds)
  done (took 35.745990746 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370473652 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389399583 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.370570187 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369028707 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378283968 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37035491 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.370606195 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.37207548 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370668752 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375868646 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369437647 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.383851446 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.368999262 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.371459677 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376628687 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.3724798 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.376622748 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370866112 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.372079551 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.378383461 seconds)
  done (took 28.756133612 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363718571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.216923986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.715012178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619843092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364755853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.371689464 seconds)
  done (took 27.928961774 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447819428 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.609600058 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.372072315 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.758051379 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.853576499 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390227989 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372142217 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.633139574 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.982260694 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.980702184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441550239 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44494133 seconds)
  done (took 20.568291513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.378011724 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373743926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.381046702 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388617535 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.43059826 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.395716719 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.380834558 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366188487 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438756977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.454322973 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.393782695 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433800525 seconds)
  done (took 38.097413797 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454028946 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415787743 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.420527083 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471205824 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093342276 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579178661 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416020331 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.828525199 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380979533 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642919807 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378085803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458333039 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624574846 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367732466 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394954295 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.458139775 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621018897 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881613399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372356701 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702101859 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40186661 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372142863 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.812064486 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.409228374 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581894934 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510283271 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630590928 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144966499 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695141548 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387582243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380318141 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37005181 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643640354 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075135982 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494839213 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381892725 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376914345 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.916907828 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.365260348 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.697330987 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380615992 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373656046 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382565342 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37130175 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304330059 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371003709 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849654905 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384784391 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.081929199 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370040006 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381383077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466471174 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.375181052 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.361138978 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404057826 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384324229 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.367839422 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46700225 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966333148 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.184967394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381740863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.313592355 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370293735 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.621854456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048382808 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.493164328 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.375567472 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377301151 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306920461 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731775822 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396576943 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51969177 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395350327 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022326372 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170458145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410848886 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303655024 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942898431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385165489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.314711176 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600929066 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150670962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30975124 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.31570795 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307534496 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142391524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391390512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.858294559 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402078296 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.849508615 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393735633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391154267 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397018955 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597193051 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.251931723 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374845185 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.380483621 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499112262 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394846468 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823335138 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315850954 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378018742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630559505 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.586559981 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378233324 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.47862168 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619920417 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383138606 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.396800499 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383135541 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.393496659 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.007502616 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413876913 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19297207 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399692983 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154187652 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175086629 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393663564 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483552048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377827766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6378789 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19992181 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.543895693 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444834938 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379527534 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376658334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.738773105 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975356169 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.535193025 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.372567732 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391640392 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393217879 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.377071261 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326920593 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.379025716 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38424973 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154891074 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600378407 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38650009 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657742316 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311334357 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52491115 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385207294 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601182549 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.69599562 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.404278011 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636317607 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845587581 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390369604 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394745992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397138823 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480110107 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400144319 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383107299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641779417 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383316236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383359496 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.747758338 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163386615 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382037909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382303134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377237049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011109227 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374088147 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387222171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27132743 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39248905 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445625208 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384798081 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.389573872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.345043266 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396316773 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.384459615 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.381094817 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603007156 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389823006 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.584451568 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458859795 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.592560962 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017479752 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411223987 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.312732879 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.089555876 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.071712027 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379052031 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.5681069 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379371442 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390867479 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388847532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382094425 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000168411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400587056 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.582080576 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386977978 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390584077 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385551175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379166503 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.324408891 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07333478 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382997075 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416909647 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52445589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393668611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314041776 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896957064 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38529418 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381601283 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.158291078 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414357555 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.580671929 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866990569 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640174977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388074397 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393777817 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.692986898 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416575569 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376926483 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380560979 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401390889 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.397358203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391850528 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392788525 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.594904473 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.773059931 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950925169 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139620685 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986428816 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376281979 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.387745004 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270451543 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.830324107 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323462692 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037690286 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585893633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845918536 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327813225 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595257327 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.66431571 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23784062 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401159574 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609580103 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355565508 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.386575036 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394460444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595310272 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417443366 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388890829 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318498037 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.664774579 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630486586 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398735449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462092394 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840550547 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403714017 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.161684324 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.41517882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.815533487 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596705015 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.018509332 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769779024 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394365823 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400366943 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874134825 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396306904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909328958 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045555291 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407404062 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.603383428 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324985609 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.394502684 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395061713 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379014152 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.826361526 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.396143288 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640136496 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39598615 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318798906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400502624 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962492351 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.259722045 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392679465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385384529 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190565104 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403174863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715979634 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.394050908 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.313419192 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406601119 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319713682 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320699624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.080090919 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38853962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360834176 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910829435 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.396682021 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398281275 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396978876 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241679073 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641774243 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.400852632 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017532687 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630585815 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400061752 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411446776 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.487446928 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389237245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.368358359 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.268559977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622501079 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393129927 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618195056 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.460809354 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.299994502 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.47543147 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606173909 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268008923 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39837748 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655942576 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.117092536 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.388798928 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181053172 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438090704 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394452381 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406457033 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38503103 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407779692 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479523715 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398784096 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399399126 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.400387959 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576152074 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407154242 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391322815 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.403302428 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482973989 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.205782493 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.327174308 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.163161378 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030684047 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224349207 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052362298 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427666472 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3890857 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389628736 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322528663 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541851117 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913252633 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663669391 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519677769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.401501346 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413170131 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389919337 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391996103 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62712428 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665046421 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362324801 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400804529 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18148089 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.550490935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40194201 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.603129431 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918125277 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979407051 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508721465 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396344057 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845192412 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668746224 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.482164542 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392239548 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985561218 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.401221883 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.824017039 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424074486 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391465549 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558270302 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4033614 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101844051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.426849125 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.547258352 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.166721901 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.661061433 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655203911 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.900979942 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.404364363 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030673191 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185530162 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65866583 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461995078 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403277002 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.502082149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539991205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.40537039 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291856367 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393736735 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240305336 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104424493 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402979349 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030783468 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679065638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.391684155 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.406364985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416961257 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402951771 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615869621 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159453461 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625938282 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405773767 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396650714 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.96360764 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023340442 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424994965 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328164948 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398847919 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658945468 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649806781 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417011408 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.847272483 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10705852 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97099347 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.369996602 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417677713 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399296786 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166984694 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032124455 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.353263313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931306446 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055208744 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407315363 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678143516 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401810206 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398073569 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67815286 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399939472 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407501455 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407092219 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.033126328 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242400429 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397970285 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.788672125 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.339404858 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.623078888 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454874471 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33883866 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395710791 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.590855117 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404044314 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527199706 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409052351 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395377243 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415165376 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.136665069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671909361 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.404301565 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.379275877 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.38386011 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415007329 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496057653 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644242455 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4052726 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070757703 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74931551 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65317014 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405321219 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.382647771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401305436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398609234 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117454564 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408339968 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416587711 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991146862 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.408828359 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416614874 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403203888 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61643967 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610924426 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400639184 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412705052 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409095511 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418006798 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.299535587 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167089046 seconds)
  done (took 1675.743565059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447536152 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.421440453 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.44192553 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.485200234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420542119 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430270086 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.508041352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451859461 seconds)
  done (took 52.916265338 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.408972784 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.556395224 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.431091723 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.405928998 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.407938809 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.410921719 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.898553708 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430131267 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407915098 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.409784967 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.401067736 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.414422953 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.104110417 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.410479361 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.416479867 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.37941728 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.407675358 seconds)
  done (took 66.618784237 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.399198245 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.764181195 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.51719664 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.40032881 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.800009203 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.426907085 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.664583517 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.473857786 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.412066331 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.702091288 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.083000799 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.414720788 seconds)
  done (took 81.371394818 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419033152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418806829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.421245364 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419450444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419014488 seconds)
  done (took 8.410893693 seconds)
done (took 2106.601061066 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.409726322 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.160648145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086520124 seconds)
  done (took 5.559511572 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.552441747 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.598903628 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.717233913 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.725403605 seconds)
  done (took 7.906526122 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.685052451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786717259 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.593760135 seconds)
  done (took 6.377916658 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.710802665 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.434791912 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.405106875 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.401611971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.406213817 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.405889306 seconds)
  done (took 20.527739958 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.406929449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.409241785 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406783736 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.410098484 seconds)
  done (took 6.949068497 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.381500726 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.105329276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.382851486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.400555468 seconds)
  done (took 18.58321594 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.153936241 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16490759 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.152406451 seconds)
  done (took 7.785320792 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.437081706 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.430970457 seconds)
  done (took 4.182551218 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701879629 seconds)
  done (took 3.016657917 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.420675828 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.460886439 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.508675211 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.413646023 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.166656555 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.198294838 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.194710778 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.761514078 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.390648807 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.826105546 seconds)
  done (took 32.657902098 seconds)
done (took 130.819623798 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.501336315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.808423767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.606228279 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.473701109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.637043495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.606887241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.051443588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.443201117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.981845783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.972409383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.517808845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.635310684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.791945863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808546932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.79157936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428574111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637640882 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.557513654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.203244802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.361075599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.059655268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.113260136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.349129371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.137553606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.639184034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.558301803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.696285628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428243392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.373141567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.717329007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557552252 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414261436 seconds)
  done (took 198.175584117 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405946415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424806626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.435021362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417582704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415200295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.409243105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.405406999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423937066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416044316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406828898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417055271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405839635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.407966973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435955807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406465374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424406493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424024691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423730236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431488853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407299779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426027194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.428008969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.406565192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.425083797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424679451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425302142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432533407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41336398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408352642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427237528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408467226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425290005 seconds)
  done (took 206.713488899 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.418950062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407740302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.406970583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.434715688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407954649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40830669 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.430005196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.408415036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408837483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408196177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408370772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410032056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428899085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438321717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40911938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409201882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422082028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413211848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408267963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409232168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.410529859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.407894484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410357496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42100959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416459842 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.409979794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410754427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409113263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421731123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.416037113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.409508428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42321162 seconds)
  done (took 206.583577055 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.614976021 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.419446795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419222478 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.378975016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418905619 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.416967268 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414663872 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.609387763 seconds)
  done (took 15.012447822 seconds)
done (took 627.799373203 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.82542652 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.534677813 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.626036673 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438414702 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.283245176 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457961826 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.438368867 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.617842695 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.369090321 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.626588324 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.732654536 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.455711108 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.879019423 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.438009852 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.704827867 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.541465 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.338994814 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.468522169 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.770164787 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.02517815 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.712542786 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.996634308 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.639833575 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.358626513 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.888018889 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.978848737 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.229296569 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.332351646 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.456383854 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.775965621 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.192667034 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.48193576 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.506752715 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.505021028 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.562554039 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54260087 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.468158363 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.503942842 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.648231052 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.761070128 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.04939363 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.1855787 seconds)
  done (took 96.671398587 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.402260663 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.401774448 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.401870656 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.402856605 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.404531155 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.402961791 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.402036627 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.402016069 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.403157244 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.401799223 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.40241231 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.405312007 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.402347638 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.404319949 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.403194474 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.403015171 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.402891179 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.405463455 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.402668282 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.402990175 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.403781164 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.403075232 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.403864255 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.403693095 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403531489 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.40322266 seconds)
  done (took 37.806181383 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.425093372 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681079938 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.85567509 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429392033 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422788246 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427723385 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.508425387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425076221 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426165114 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.426811652 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586352762 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426915127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459489074 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.888738257 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425846833 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424885082 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.424750598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.423505446 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.689215173 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432811771 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.529270253 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425262299 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509515971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.434673577 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.447412348 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424517021 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428698214 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.013823332 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449018997 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.585961536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.303954065 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.514901594 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.954386304 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.894807925 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.306905853 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.433895363 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425969441 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.590652867 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426251526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424225087 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.510122512 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.42468393 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.866275616 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111233888 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44400896 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427794056 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.036440593 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.610209892 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.692931909 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432998579 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894929562 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.427983531 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.429450546 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.428227455 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.694207678 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433802833 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426851206 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.048904777 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45231465 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.510988141 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428702189 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426144426 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.695638574 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.426643688 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.685949191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429400125 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435072195 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447435724 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.870899715 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429866068 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13954249 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447283383 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.428474318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589638733 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.6869274 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.07572147 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.457509874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.70263503 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969701397 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.529111241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.431688189 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.005956967 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.53481265 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.431895999 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.431589898 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431379318 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428847162 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476406709 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.511080979 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.070041965 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14418912 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.076509105 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535044254 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441310124 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43024558 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.053753911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450876777 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429724381 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.865003123 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137795281 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448905382 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437537093 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13970996 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.450675878 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.514978737 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.435288604 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.878178689 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.431015059 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478478963 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.430834209 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.436927152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453229692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.51346709 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434327822 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.432100915 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.107908847 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616464921 seconds)
  done (took 188.629842901 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.440788297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.425006831 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.440607422 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.423988118 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.423884547 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433895402 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.424623442 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.425063811 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.429798553 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424503176 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.424741215 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.425041549 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.425739429 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.426169611 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.437050404 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.431494921 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.081662005 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.426214951 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.424915415 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.444961905 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.248476396 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.427097286 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.425200763 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.445334211 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.426927193 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.436134031 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.449073398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.426969158 seconds)
  done (took 154.859944001 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433084054 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043028556 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.45258984 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576252371 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.455445249 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.431864953 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.573905391 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49445104 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.452291223 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.431824422 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431266361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.760235391 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.435629029 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.992938675 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.643367814 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.592060969 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989604726 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454506293 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43314492 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.432639246 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.578493311 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439737302 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.760029008 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.044084659 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453615885 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043466518 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418262321 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.435778353 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432506037 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.0455801 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451634121 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.765003591 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.517727531 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498257588 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.064784251 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.0106654 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.012855943 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.595151719 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433996228 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432932494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.432889058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.418713199 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.048044382 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.45497223 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.435395889 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039096388 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456739117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.436506185 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441060782 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.433584175 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.499864662 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.518433074 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.78582042 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05337727 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.537125994 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.448810363 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.577175492 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.817955569 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.436914664 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.993627914 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418513072 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.057834132 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45719201 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418173531 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436056428 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440843082 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.598869989 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.578088819 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.995927694 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454092778 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.994322328 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.618296677 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43509862 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435929826 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.437843996 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.08677653 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.021502466 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.618034491 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.582225233 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652603505 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.423633336 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435831287 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41955026 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.520354094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.435670337 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091350044 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.021822756 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.457173654 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.43895338 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437834987 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.439810101 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.634524136 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.115467461 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.548346155 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98673235 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.816312974 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7938231 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.444608751 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.503669598 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458738439 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.790922771 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446004484 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.502869529 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.886856351 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.792294798 seconds)
  done (took 172.130654249 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.698640387 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.80999729 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.541248675 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.603068043 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.097225648 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.026130992 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.72037486 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.587768244 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.556821174 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712867717 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.720306588 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532198248 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667750946 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522539594 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.216164368 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.53546657 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.560385995 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.598514115 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.606405682 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.526481838 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.196460024 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.747718769 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.6353093 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.432328024 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.540679392 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.264051212 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.027844195 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.987367473 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.620431382 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.938277231 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.999399083 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.644265012 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.495704736 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171723048 seconds)
  done (took 69.886407009 seconds)
done (took 721.304403959 seconds)
SAVING RESULT...
DONE!
