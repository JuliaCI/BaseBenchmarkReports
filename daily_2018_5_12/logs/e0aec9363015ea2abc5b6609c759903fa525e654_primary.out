cset: moving following pidspec: 30965
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.50885704 seconds)
loading group "string"... done (took 0.530164147 seconds)
loading group "linalg"... done (took 9.025820848 seconds)
loading group "parallel"... done (took 0.175295064 seconds)
loading group "find"... done (took 1.293579448 seconds)
loading group "tuple"... done (took 1.961494417 seconds)
loading group "dates"... done (took 1.382526237 seconds)
loading group "micro"... done (took 0.199007492 seconds)
loading group "io"... done (took 0.52047884 seconds)
loading group "scalar"... done (took 51.548591009 seconds)
loading group "sparse"... done (took 14.149935918 seconds)
loading group "broadcast"... done (took 1.33391247 seconds)
loading group "union"... done (took 10.343668199 seconds)
loading group "simd"... done (took 3.087597941 seconds)
loading group "random"... done (took 11.697490359 seconds)
loading group "problem"... done (took 2.245539114 seconds)
loading group "array"... done (took 24.603021746 seconds)
loading group "misc"... done (took 1.160685935 seconds)
loading group "sort"... done (took 3.834386011 seconds)
loading group "collection"... done (took 19.555264456 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.620167665 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.185390841 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205812866 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287950229 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242972649 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155368667 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138784041 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.263396863 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.775822343 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208239198 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13101528 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51412903 seconds)
done (took 6.556551825 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257546963 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178539046 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168140828 seconds)
  done (took 1.118466495 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075290245 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154890941 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10667144 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093050342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092666369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108941004 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092144933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108680007 seconds)
  done (took 1.53229503 seconds)
done (took 3.758589845 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499601409 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884963014 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.509119761 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1639752 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301359356 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.299950191 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.335142268 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.205182312 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08923839 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090436391 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177182453 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.39685272 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.448430756 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945833531 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090560675 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.11516364 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117943148 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773321302 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078421265 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.12607016 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495250183 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192641257 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097681337 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124451075 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184170892 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132744962 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163194598 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103870348 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677104876 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133385659 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186833238 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098862819 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161083126 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194146414 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208829651 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092142117 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690678258 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203650655 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091041885 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098337505 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664983981 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11837472 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187982488 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103173492 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091094901 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183160461 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09461749 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076301554 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115257984 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085323344 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16784457 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460626591 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106727698 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171094476 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092337153 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69340724 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102031332 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280685789 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123947719 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090778249 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090782426 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089443912 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161303331 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094980753 seconds)
  done (took 20.235074081 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.149605722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165559301 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076463062 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155416106 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125205421 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079412319 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102644518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079526614 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1253943 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227424773 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138215269 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155284689 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092727465 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088031607 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126717868 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248712305 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109541044 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123058591 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086849897 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089489626 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140833328 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096504242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107570192 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093154007 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169376418 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204425818 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109491827 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122294699 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086613507 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095140894 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142255829 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146123445 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093363415 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086449516 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191854098 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107015511 seconds)
  done (took 5.330270191 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201157784 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124795928 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.21523595 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162526557 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146821169 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168673568 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147252508 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.282073487 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.265947465 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162578387 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129899184 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094591579 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096130372 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080081307 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077255508 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503802339 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138778527 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.173204895 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134862901 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10699241 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082247532 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386272544 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086360153 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098174068 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086766845 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065599358 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200045173 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101803162 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.07320887 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105349199 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090507799 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.185336868 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13185366 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19453999 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119033439 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14077295 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08559715 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080384791 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099034859 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217438874 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094081228 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076612594 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125122564 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115828464 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139941926 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09965323 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094308164 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220876169 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081751025 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12304624 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080071984 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.059940179 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199658515 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141294004 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078639748 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286191451 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116881267 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087377225 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081549234 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263877599 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115796552 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08062513 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097180549 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086208254 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077231887 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430603469 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107542518 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.147439596 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08374101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159866529 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084838124 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106323145 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085873197 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084610007 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118881084 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079871496 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077183112 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096227828 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078943101 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0830311 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109807359 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08463389 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077961628 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16308072 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082522573 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114752125 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101336702 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123707113 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085817603 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079946951 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127413934 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082242855 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083406028 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172892581 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086092488 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10971001 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085836589 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144776198 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082691614 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.227367901 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083797201 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109262002 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101779225 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126836231 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100932367 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079750719 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100978319 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078920568 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079537827 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161481637 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081294161 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08127841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082300346 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11145739 seconds)
  done (took 23.412543814 seconds)
done (took 49.748718462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.451603505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08609076 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084771574 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106495026 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086385733 seconds)
  done (took 1.669806632 seconds)
done (took 2.497173301 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324387128 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200951693 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100004697 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196286573 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086375119 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202843991 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190121063 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094033539 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216548357 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083835699 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195409016 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083667405 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104785374 seconds)
  done (took 2.930822842 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099704233 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106077438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115862677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098869902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080056659 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097190961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114568676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108515353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096438942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110883784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081125768 seconds)
  done (took 1.936319865 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096649784 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102974639 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086705789 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114865631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080673147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094711791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11415331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105234895 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095470427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112266684 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081224082 seconds)
  done (took 1.914093767 seconds)
done (took 7.604450095 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.132002689 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.490496551 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.170681604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.288621234 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346528538 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.253463927 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.664211584 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156754779 seconds)
  done (took 32.486188806 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.11587046 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.161032845 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089343822 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087776887 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088998613 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.11174719 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092873392 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088360476 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108916485 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087968187 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092199323 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103904648 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092668067 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089317642 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091487862 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.110482946 seconds)
  done (took 2.501732283 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141041686 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116236592 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114591887 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094657274 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108858036 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095759505 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098056204 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111644149 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091256524 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091153105 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115224133 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.095253964 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093017832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107762457 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093692579 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119701715 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10569653 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095557034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119056703 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111094803 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096521512 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091751245 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109852295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.095309283 seconds)
  done (took 3.425533938 seconds)
done (took 39.243874105 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152158891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101507429 seconds)
  done (took 1.085933749 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141008948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160199829 seconds)
  done (took 1.138627582 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110726124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085433616 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137464429 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100559854 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08687456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10503159 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113742811 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103703934 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087697441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086504639 seconds)
  done (took 1.859314589 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092095936 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089956584 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119649747 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139486689 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113427991 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091129449 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091000012 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088412504 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112326877 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086885089 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095067676 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125137389 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091065575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124765771 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093247473 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092879088 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114756146 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09118203 seconds)
  done (took 2.694273748 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087269683 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087960228 seconds)
  done (took 1.018178366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090406311 seconds)
    (2/7) benchmarking "second"...
    done (took 0.086584792 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088977871 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107587633 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087884291 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085710833 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103848326 seconds)
  done (took 1.493877264 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.499201379 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266346304 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372663625 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105699043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143635086 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.340601392 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145943483 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099730661 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099615608 seconds)
  done (took 2.952105536 seconds)
done (took 13.081170968 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094110454 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22048968 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633112006 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.229771532 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085908453 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164775914 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294470404 seconds)
done (took 2.571900646 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351490694 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149033687 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08585619 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08797761 seconds)
  done (took 1.517206936 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081453998 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093958885 seconds)
  done (took 1.025282714 seconds)
done (took 3.391823866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086988836 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085216373 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128155671 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.084962569 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08497641 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084201016 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.104562605 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085829006 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084490965 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.104717515 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.086142301 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085527775 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082470679 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102946676 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08702634 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084163698 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084882226 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104213144 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084399277 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08319276 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102585655 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085555092 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083286993 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084409349 seconds)
  done (took 3.057802772 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110638222 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087114071 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10780039 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091159435 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089626486 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108367 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09186832 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086538941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108466449 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087435933 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09015022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107345599 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089179383 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088580901 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088318242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108991533 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091346363 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087400996 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108322995 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091201625 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090351765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10687648 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090002904 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089893114 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109702151 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089505067 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088216927 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107815089 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089822706 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089959501 seconds)
  done (took 3.72699825 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097974067 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085468327 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088978561 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117999492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086045733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089157564 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10605049 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086496528 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090246911 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08787207 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111146231 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088594376 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085253702 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11024159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090943962 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092472796 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116319341 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086882125 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085669652 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090842949 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113036066 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086125982 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089362921 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107870255 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089188639 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08602909 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087632361 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109245723 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089667604 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08954518 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111160403 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093686242 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089486176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100361376 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112483499 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089810127 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094952498 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104260563 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091356192 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086738766 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10520566 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090669419 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087045361 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09496304 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109806947 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090329077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085700704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107964054 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091137414 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092948859 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085835541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104311912 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092140843 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08983043 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109287553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087010097 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08953809 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08405629 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109502988 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088727224 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084835045 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104341274 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094797202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089362929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12219149 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096236475 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08499998 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108904357 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090369717 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093977877 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090578065 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11803125 seconds)
  done (took 7.74939702 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101525629 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09499154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086193423 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106080712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086084238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086617402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110179268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08700447 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086565863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111071403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087429732 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08630963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106049227 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089938147 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086845316 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086797549 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113874154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086707077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086708189 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108212177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088440896 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09175683 seconds)
  done (took 2.932070718 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.230576084 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093447496 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137627532 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12307955 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106438546 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121150879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094435253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095545852 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112902976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099075214 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098501355 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113402954 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105141027 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096243831 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117388695 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095950744 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112149152 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09785037 seconds)
  done (took 2.912748151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103174704 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.088012011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130400728 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088793493 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088487175 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089270052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112781495 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109767934 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109542678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089358794 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096081236 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106941102 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090615619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087822346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088673357 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109733887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088751409 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08882098 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117390056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093786443 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092422953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115557623 seconds)
  done (took 3.04930822 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104857881 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088096318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124994071 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091606739 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087040553 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106740999 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095188121 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.087869677 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093309369 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108332381 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088371354 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087356647 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120985958 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087743825 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092435292 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105713245 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088999665 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086370492 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106687772 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088984412 seconds)
  done (took 2.803572374 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17327863 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124116938 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108601532 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115190272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127192593 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107988663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113605948 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127145997 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106277023 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137215248 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108076389 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105970642 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134080245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111562778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124298586 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115869101 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114288699 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133721304 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106208742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124781861 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120654956 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106639878 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133803555 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107420062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106988266 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126114015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107346478 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129611173 seconds)
  done (took 4.22375153 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088715916 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088237373 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086814324 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109212898 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087037689 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086903887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088083016 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109173152 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08779219 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086791534 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107234671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088330305 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088045808 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086802854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107650385 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088779844 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088080247 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104519394 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087581117 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08708331 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086714976 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1065021 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088029607 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085972567 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104965437 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.088636935 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086816402 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085565053 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107204101 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08710131 seconds)
  done (took 3.645087145 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099224499 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096518586 seconds)
  done (took 1.065326822 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095681951 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104349581 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086978767 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107185236 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094066924 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088965463 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118102613 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094489667 seconds)
  done (took 1.660662596 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145045716 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163898918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09362374 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10109131 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164404793 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158745565 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133995713 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092124682 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109292659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085166143 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.160539865 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083117846 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092197393 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107649413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09340165 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097176326 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108291433 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100054917 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095560096 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10843059 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094856175 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096274246 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112592511 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099268358 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086599641 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111782074 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095988164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101981125 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107888783 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095655716 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088849353 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.107122976 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09442774 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092501416 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091132104 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.166056639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098922242 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108743822 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092980665 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094091863 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14424127 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088590168 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092884842 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110244561 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096751574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093259182 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113426449 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.089797148 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084296717 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106052484 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.090033824 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08817576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087180595 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112726265 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092693524 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116671683 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092288628 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087656493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087023474 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107030485 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091874085 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086736921 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112929933 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092459988 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092915336 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112708831 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091940893 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087386863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109070473 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.090936288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090544194 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126636602 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093629861 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092707394 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113328684 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090524196 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088500931 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113565951 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091826897 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092366855 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113259311 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118679905 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093603253 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107138682 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088910632 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095774281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10898884 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094183312 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084431251 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119411217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092885259 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089602643 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084361935 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109825179 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088622552 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092805605 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105500619 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094068288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087735185 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113358531 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096394663 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09154636 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113343455 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096474406 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095871445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109619243 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.136881281 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089149688 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109090137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091495013 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092896794 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106115882 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093545772 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086994449 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109363664 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088542415 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095115814 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111436955 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092937107 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093002977 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113995188 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096235104 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091209151 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087350557 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108003297 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094100588 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097709295 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114728336 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091921673 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.088804356 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.107807412 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092806987 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.092491606 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107699892 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096196587 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089205009 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.107957795 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092255097 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094981238 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110962256 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089609864 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09089944 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111211346 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092580861 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092449341 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111766443 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089561366 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084505325 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092181995 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106880389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.089636121 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096972408 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107859542 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092359073 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089087966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117230908 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089758942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.094773176 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111859252 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097082317 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094632243 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103115342 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090701418 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092996874 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112255752 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091719973 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090329483 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08803482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.116970878 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08655708 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.093601583 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10430041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090225843 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094975983 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109905329 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094202567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088529208 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148196583 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103213734 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095658336 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111912222 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09409034 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094244379 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109161591 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095571274 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095681539 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094107431 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113275445 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092279523 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09552909 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109292223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092952365 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090322011 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113094407 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085903667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091914792 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10386446 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096706976 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094873199 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113414163 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09672513 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093364834 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09025148 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11863351 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088978934 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09294564 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105335934 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095358714 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100142045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115675689 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097140684 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093970776 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109277557 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0912385 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09989313 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110446466 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094594569 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089762931 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085170502 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106315807 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095850801 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092213224 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108982906 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089370189 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094513244 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115265329 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092598748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085170614 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114132024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098340073 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088855921 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112657422 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090428428 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090613527 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120515029 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086439443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089393793 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115028042 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096375543 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089145736 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111444643 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094908083 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099321448 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092859576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.112849202 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091823455 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097782914 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111285568 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089166103 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088906131 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.110793602 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088198707 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090496088 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09284393 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110206379 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089465609 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097289369 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116964161 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096438257 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090436807 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.115073354 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096384828 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095168399 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110195325 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096851666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087600702 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105005152 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090921779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084940303 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.109510338 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090993844 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095054807 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090224101 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11236318 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094856424 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094649588 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111240926 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09629431 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122309249 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088964369 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095179846 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09013285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113872889 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09030022 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08863757 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.111128283 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095752205 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09504501 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116588594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090688573 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088371291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.116104701 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099936372 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096962632 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115663754 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098370234 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088603339 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113126687 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091595235 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09798381 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086651694 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112687831 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091979217 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09076643 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.11049913 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092272441 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087751226 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106583667 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089828359 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.096081213 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11221001 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09722734 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091832927 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110727875 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090718036 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088235155 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117056492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093091788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096738244 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.108349289 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088159998 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087067729 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095003772 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112968411 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096343518 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088379132 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114107454 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098397003 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093255033 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109618708 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100803644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099502137 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11464053 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100013494 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085639638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109211107 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100584367 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089300439 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092695492 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.112971808 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087951592 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096268491 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115947717 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096586733 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092000201 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107548726 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091304687 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096915658 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.113455414 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094687532 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092006955 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093451492 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10955334 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094388727 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096629833 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114485062 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09771398 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09219337 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115058925 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091065719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096165524 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.109162895 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088226919 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086351938 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109191457 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099290001 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088695087 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09792324 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11580717 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090439466 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091568251 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.115765637 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090268272 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095872222 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115475973 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092565974 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098890149 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109572212 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092526738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096200786 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.095692372 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107469312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093413927 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091814941 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118168605 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092563716 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095052705 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114348182 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097217467 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093025534 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116344637 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096970952 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096435929 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105951151 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100968568 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097313219 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092945959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112329383 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092253461 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08835483 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112901248 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097617103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089296903 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119384101 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096234246 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090882975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111013004 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097700717 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091734237 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118363331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09110217 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094683174 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106244328 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097459191 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092901266 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117775381 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091419433 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088092891 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096006981 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117804425 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096032736 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095988974 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117342174 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088199485 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087408332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114915893 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092719042 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100797868 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117990721 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09420149 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091982055 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111554314 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093732072 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097835281 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087225479 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111824769 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095508892 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095034578 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113921869 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089628008 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095683865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113699342 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096798323 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09259341 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109916715 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095311122 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097806702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113244448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091504274 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091519865 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118221074 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095661046 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091086875 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087837366 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122540594 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09717594 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117979902 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092991153 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095480498 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091536635 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113590993 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099070437 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092441232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115240375 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093515244 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098130825 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120477974 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087924725 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092036849 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122085394 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098929187 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098167174 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113125134 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094665098 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098385363 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118266644 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09481771 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088629435 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088200423 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113784481 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088285913 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092691029 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121468963 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094153034 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09099126 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118135625 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096240591 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.093344115 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.112311113 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090760269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09948503 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091295252 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119102222 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08928163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087979318 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.114041614 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099300344 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093960281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114716943 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093174936 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.092737041 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109407022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093671532 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097853257 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115517128 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099784166 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094193758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092719911 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.116441727 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103071083 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092426091 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114836024 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103492194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.098425327 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116466364 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095541303 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097938498 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119600808 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094250218 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098502448 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113156785 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095996656 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.098858651 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.118849345 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107028612 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093971918 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108995389 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09857973 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092165625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10955357 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101215883 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099728854 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.097877071 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11616537 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092661915 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101770295 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121524722 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094486094 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091342683 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113404674 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098535792 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091720267 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.117895218 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093401783 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098882514 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.119899884 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099855706 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100588194 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108606452 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102333348 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097682343 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.122798544 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094432319 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08954043 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088739619 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.116277407 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10076711 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100270558 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.116426565 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098898636 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097348298 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115809978 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097866244 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092874159 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.098431263 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.119489757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.093456749 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09581073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.11556155 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09721815 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093523646 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119609023 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100832389 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096901871 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122260285 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100291968 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093589149 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112929754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098052221 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.093897019 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116756914 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099182811 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092964784 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089205201 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120802467 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100880364 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094726878 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12153937 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101330089 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09341658 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119223915 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10247846 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097524844 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.113172748 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09842121 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096529174 seconds)
  done (took 60.830875229 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146825608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100174468 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115733353 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094928153 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111681765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116909322 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095169792 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094763511 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116917148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105767184 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093825792 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114093225 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112343207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136108916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114373396 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104402602 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11465371 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096540371 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094175081 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114208859 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110073184 seconds)
  done (took 3.225586705 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114910528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109524319 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126997376 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110158705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10054853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128094941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105543341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126772819 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110041841 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100989438 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131049129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105693776 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122889942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103691735 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102805178 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125026803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109819873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099713745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12891627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105413263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124108494 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10770876 seconds)
  done (took 3.422871106 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10537468 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099195405 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100085758 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115762134 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100471853 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093398308 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122143709 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096977339 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103513396 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116136242 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093331086 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096400051 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10037189 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116188799 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092691473 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094548771 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124343866 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099911538 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100028058 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116092337 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110682502 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094362407 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.115005653 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092262237 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106492284 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11940498 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096636832 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099263553 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090701379 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120953444 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096059879 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095187987 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118619296 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092571454 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090278406 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119035039 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099601409 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094780142 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095352276 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118456692 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096669966 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099021461 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.12207933 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096139895 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09512846 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.1182865 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100327161 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094558118 seconds)
  done (took 5.899703692 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129005013 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155165769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0991865 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126244272 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13380259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104978218 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.120288113 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129724362 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09593351 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12065678 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.1118323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108534921 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123997317 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103142142 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09705778 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122168718 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100499682 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09766341 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124738266 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098856576 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122725028 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103631321 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109268541 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130190852 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102679228 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097818188 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120283924 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104065694 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107299622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.124877877 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10362409 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102624271 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.383519095 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101588295 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11797819 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102546896 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111301812 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120146013 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101408423 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096091958 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121477013 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104663769 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101624739 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133446978 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100931417 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100208629 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120804395 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096715054 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10761807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122064652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106940257 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129923676 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103524673 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098536756 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122627948 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111969918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098514276 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118333906 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102800212 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107443674 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119170396 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102762665 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108402857 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121197505 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106044528 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129315859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102494755 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102141478 seconds)
  done (took 8.909199413 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136369182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103617577 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133239424 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112322658 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102640742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12522222 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103644895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10294334 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126114618 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108590587 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123799212 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202127676 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121786043 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110205307 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101838639 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126429598 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104639881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103795046 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126624582 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104074655 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102123978 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133650718 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103351234 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131784629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115196336 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09940957 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125351752 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103554161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131578655 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105036199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114947909 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125028537 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104374342 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11035852 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136354746 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105350843 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119803115 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104817489 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104305739 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12443843 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103098879 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111168418 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126134784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102347161 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103653012 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125506403 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112545747 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136605122 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110342405 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108504262 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12520473 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113591118 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103896409 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126056022 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113494711 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142180841 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113196642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131497521 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105825056 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113853753 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134323895 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120028919 seconds)
  done (took 8.199542144 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098991334 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096638142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095098855 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117372615 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09813725 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095088666 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096600616 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119259536 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09715871 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096392743 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118741737 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098398229 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095769536 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095661714 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118341146 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096654711 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095237913 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11679216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09824746 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09607089 seconds)
  done (took 2.979469032 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10775156 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115533916 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119224883 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105972759 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099820327 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12534798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100791992 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100589006 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097544729 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12218874 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108908421 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128123809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099945593 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104724502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127465694 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105625852 seconds)
  done (took 2.70889478 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118473954 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115692924 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.193395809 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102821619 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121293652 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107283596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099929941 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123195661 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099118175 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105788293 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103034874 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125528896 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100217696 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09979585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122174481 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103514478 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096777416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124715989 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101350564 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189186017 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104182376 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101099583 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121602734 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105246694 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100119008 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12450558 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106316519 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097907213 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121558598 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102519399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101263258 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.126886296 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099681475 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104015282 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101087833 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122577039 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100578334 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099737419 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124446702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100982665 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101878831 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122333971 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101020899 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102497926 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.11887023 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102220095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098320259 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12532732 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101780792 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101422387 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099179683 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130481538 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10619916 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108041489 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129065713 seconds)
  done (took 7.111114193 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113593022 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101489292 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132185143 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099520521 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101440519 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098982543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123269333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101251131 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100435781 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120838067 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101867369 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100490713 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12099572 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103905679 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09969131 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122064176 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099042886 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100573834 seconds)
  done (took 2.884573852 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105986684 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099466717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103741939 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121871295 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.1002307 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099068722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119588116 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100303319 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099324837 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121648258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099929179 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10106347 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098578847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121993067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100837291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09920288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121571623 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099869135 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09983851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118078047 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102473286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101102066 seconds)
  done (took 3.284601935 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1139832 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186412194 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108782718 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194862731 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100370107 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097310808 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131053023 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100231024 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114607573 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120755466 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099704651 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097320899 seconds)
  done (took 2.415510611 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130657645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13807315 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121681119 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102091975 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109211227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12658702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105196354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102851497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135761459 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115035518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125155938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114169776 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111509572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134313965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109226543 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129915258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105138404 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10357546 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121122556 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120572147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103400144 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134474104 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104221861 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103799563 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126750165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112097942 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134726116 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116485782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103689457 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13524074 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109376118 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12541274 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114782728 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11601854 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123930504 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113181662 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124850182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122513769 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109741507 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13448261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101937639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108976536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13517549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109919978 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135122157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105564513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109496979 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127276542 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105093841 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148183654 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110334035 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112052947 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132091139 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113161744 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135605047 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128118315 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138217668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113984411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10926999 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138684506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112928648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132003878 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113949543 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136274855 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111654423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11234467 seconds)
  done (took 8.821750507 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142522251 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100432265 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126127568 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117579443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134582662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105906114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104528152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125332796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105186954 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100920016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171443042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10549073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13622925 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115123754 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104504193 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125803543 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105281833 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112258659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123800508 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126808463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126333112 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1147711 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112656949 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134959675 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116785072 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131826557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106075829 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104948519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127348808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105455838 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108763076 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128035437 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113508903 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121600503 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114300629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104424084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126835206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111459542 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104851861 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132386811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113916347 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143061298 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106972085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104957397 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139178612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105906298 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1040579 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124190851 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105471697 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10117822 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139075701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116418652 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138385163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113372756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125630923 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107552922 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10508682 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12618607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106453366 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110406879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135638912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106886738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14841919 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106608909 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104968048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136285832 seconds)
  done (took 8.772578763 seconds)
done (took 167.143936347 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.15224448 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191775306 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148591601 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181015907 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094786686 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128571463 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150367776 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151176413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093583812 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118399676 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094795832 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096802043 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.18423617 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095624903 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095693532 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120006919 seconds)
  done (took 3.048744882 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193689401 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311264583 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111455031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121181197 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104721579 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101530233 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120928217 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102219228 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098823144 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129820267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10277464 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09669485 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129669208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098484281 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098938587 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124852469 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109527088 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101259194 seconds)
  done (took 3.215930821 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122451492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151524882 seconds)
  done (took 1.239025798 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132191244 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199025389 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277320967 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17495216 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123660566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139626379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153243003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136138643 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182233273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137613013 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11537818 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099279985 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149375104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105170609 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134516081 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101376655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128043592 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134692605 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111796328 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101476865 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143803878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105623373 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103811139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134634661 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171065451 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135803452 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106006923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103674508 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12577538 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111631784 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129674442 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117948761 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112306686 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178157568 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104741845 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173556446 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132527717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101422681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110826863 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122876494 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105623969 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103684671 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140021687 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100700973 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103795004 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133598547 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105490178 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125821707 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111804855 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111178551 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132475463 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109584511 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170840914 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110204523 seconds)
  done (took 7.991202054 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855176388 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143921198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100031975 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.010247705 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151807576 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116719768 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850880168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149656251 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254290899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.880991486 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120271699 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113096463 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263287585 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253070192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.202433135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350776812 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.683530005 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137380734 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130237768 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166906268 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109250674 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149940274 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122935157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432830308 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102126487 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099746524 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131795114 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112167939 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179409094 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100134685 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127216599 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198082895 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.265237315 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210894433 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123156656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101438038 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099839808 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193300111 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274799565 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219734186 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186178446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097528024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099147186 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13213516 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120088156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117712121 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159523456 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192651729 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193521005 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103809642 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136579871 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111400944 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129185416 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158810648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119956688 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356699735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362432155 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09942296 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131519325 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116544242 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26593803 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122017833 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235999929 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127115974 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214806142 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099645338 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803134973 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186509506 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121677801 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109287786 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107875292 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129491388 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109147959 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182463268 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382606205 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135583366 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106098694 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099027335 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227599931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122284322 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101415199 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182080864 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103319197 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108710904 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137631477 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112617137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190302729 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270852413 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11289879 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132079077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10712425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112024976 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12487864 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209752185 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252575774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154990954 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232690651 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131407996 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16119287 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18584668 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128556297 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169049759 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130099999 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117655321 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129375955 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226262699 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135400353 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122812919 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107799902 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109919697 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163101796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103560141 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131752796 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167177884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466504406 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186439454 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097577519 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12652619 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11214987 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179862383 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109558587 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267281845 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110261414 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187384616 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129437203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099392099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108974896 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183997912 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110774704 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133472123 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109462923 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134184262 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.250301923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222009045 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137778595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242050707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192286379 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11044006 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193991394 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110210634 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190368939 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111170405 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131477444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10377088 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796670873 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114065203 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132048225 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106379253 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207770024 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10076215 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102015822 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12393948 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099956738 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813474012 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103501668 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120912708 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103815059 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108056049 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130786878 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109998789 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106165416 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182019878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243410779 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138716006 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108162013 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122250086 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158987516 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124448563 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102334826 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100984963 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100833133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133848915 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106138018 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124806903 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170390399 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178253242 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232038156 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.533292002 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122966151 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102814624 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241617883 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100681192 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340237562 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111343646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236743504 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188428926 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098655644 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.352269596 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188915677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204797275 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105396261 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192841434 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098384484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109228525 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182764371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123202662 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110117535 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179563176 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117212485 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13522649 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192121842 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102138376 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250621189 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098462647 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191988498 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102811812 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131809016 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329260275 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102123505 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117857769 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182784581 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129000524 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102968716 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.710906264 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102119063 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133256143 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111806987 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235929477 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186336913 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109900919 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134525111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115504297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183853692 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233535834 seconds)
  done (took 46.375628826 seconds)
done (took 62.827309053 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290619606 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25770623 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.30826335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216402994 seconds)
  done (took 2.130826712 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.291354802 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165994573 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236925863 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099142076 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249741024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099154163 seconds)
  done (took 2.134165555 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498957828 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.389951299 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35064571 seconds)
  done (took 2.236406372 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276651476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235570101 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.35217825 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413478493 seconds)
  done (took 2.362530244 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.306227506 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13662069 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129533724 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.217310437 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.286881239 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.260789397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15459181 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205291339 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154377585 seconds)
  done (took 2.890776086 seconds)
done (took 12.74132166 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.309787494 seconds)
    (2/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138063861 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.305244778 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.23284293 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.28954548 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.357088281 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.173338563 seconds)
    (8/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133175686 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.206100104 seconds)
    (10/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.343714067 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13655202 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.235655768 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.198811343 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.216575744 seconds)
    (15/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207921547 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143055344 seconds)
    (17/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.149543904 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138396823 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117131801 seconds)
    (20/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.225470398 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109431963 seconds)
    (22/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.108810791 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133452412 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126787849 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106754353 seconds)
    (26/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.184283596 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.257858751 seconds)
    (28/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.22368803 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106359093 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22674096 seconds)
    (31/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.229104186 seconds)
    (32/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.287782411 seconds)
    (33/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.326987702 seconds)
    (34/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107050924 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107626162 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.239631065 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145326562 seconds)
    (38/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134220273 seconds)
    (39/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.191843418 seconds)
    (40/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.202606155 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.185945533 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133627118 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.180149928 seconds)
    (44/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181101523 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132128509 seconds)
    (46/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.189379551 seconds)
    (47/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099617431 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.22886769 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21655416 seconds)
    (50/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.258591822 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.14265332 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11888851 seconds)
    (53/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.106713911 seconds)
    (54/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.18033548 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156777782 seconds)
    (56/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084124284 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107589583 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109827257 seconds)
    (59/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.14627518 seconds)
    (60/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093959659 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131837697 seconds)
    (62/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.238407737 seconds)
    (63/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.221158685 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125829549 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.203114224 seconds)
    (66/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.085410459 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093664867 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107703112 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133456748 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.187901352 seconds)
    (71/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.181677889 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146395095 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173436943 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109215972 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156896732 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083649117 seconds)
    (77/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.144072952 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.133589175 seconds)
    (79/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.166529722 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107667362 seconds)
    (81/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109788531 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.203413957 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084542323 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.235285715 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084209951 seconds)
    (86/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205751766 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126530693 seconds)
    (88/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08343688 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105985465 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153659729 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107115721 seconds)
    (92/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082365642 seconds)
    (93/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.111844056 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090381452 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103340884 seconds)
    (96/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082995953 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101144933 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.132119684 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108730072 seconds)
    (100/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.151744649 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.19358164 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084193992 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.099060991 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150153326 seconds)
    (105/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108132219 seconds)
    (106/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089064906 seconds)
    (107/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084377122 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203794695 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104907895 seconds)
    (110/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083174573 seconds)
    (111/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.176303312 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09374365 seconds)
    (113/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178172752 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088886278 seconds)
    (115/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10964827 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108332062 seconds)
    (117/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10707481 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103786525 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.110338529 seconds)
    (120/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08501906 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084879541 seconds)
    (122/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133809894 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13335123 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17766259 seconds)
    (125/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089214841 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.207486353 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083343975 seconds)
    (128/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.220407558 seconds)
    (129/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.085382773 seconds)
    (130/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095430681 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08427497 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107699953 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.153852265 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127926292 seconds)
    (135/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083392677 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109242672 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110635912 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085199705 seconds)
    (139/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107087811 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.110334116 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109929311 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085686723 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084665578 seconds)
    (144/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140334529 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110861363 seconds)
    (146/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.151794118 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135747083 seconds)
    (148/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.084019949 seconds)
    (149/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108079823 seconds)
    (150/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089095945 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126602113 seconds)
    (152/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11010778 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111766188 seconds)
    (154/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083108396 seconds)
    (155/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.109319787 seconds)
    (156/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.090226779 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102245896 seconds)
    (158/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.204987113 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110592514 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108253144 seconds)
    (161/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.133101523 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.13133321 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084534543 seconds)
    (164/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.08846236 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137563243 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110018762 seconds)
    (167/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178578918 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.109794745 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121289394 seconds)
    (170/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084761004 seconds)
    (171/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.085095491 seconds)
    (172/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10928925 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084928753 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.085253818 seconds)
    (175/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084946592 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083468179 seconds)
    (177/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.106975337 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111329812 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102215737 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.133489582 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.085586816 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125983795 seconds)
    (183/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084705961 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084520973 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127394977 seconds)
    (186/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.08592787 seconds)
    (187/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101661924 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083445785 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.109769978 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105335393 seconds)
    (191/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083866978 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083513945 seconds)
  done (took 27.844128525 seconds)
done (took 28.847889479 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.21744358 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131681552 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110975034 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110553376 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.209151575 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11857259 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144906203 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115012417 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115973221 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132368218 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102755902 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118555629 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134508502 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180912035 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137857277 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104417095 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102561926 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115969282 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146976199 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121369933 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209335942 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105274959 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115944307 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.130020838 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182330343 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131551095 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109474603 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110362133 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143004475 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109146655 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109846363 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12852538 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120386268 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119648219 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126266433 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111047429 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102873389 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090425728 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134528123 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111474584 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117011688 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135119215 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113186312 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103272851 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136068365 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109189871 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102238237 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138607721 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102626897 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110207769 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130201552 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123366181 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108240585 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12458244 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102989648 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103299588 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116745017 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128817017 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120516854 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102350878 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.130215025 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103585777 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111263463 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12804312 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111219 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103348277 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135546432 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113249772 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109606234 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129673728 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106168232 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109615315 seconds)
done (took 9.935855903 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111508632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.160101579 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.205512558 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.216146546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133565663 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1443686 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124768508 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132467444 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.147291887 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128462158 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163740839 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131825953 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.216891106 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.115738654 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119300516 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139704903 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117262281 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.140793823 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193427644 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.151943718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134848614 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114083109 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.162665201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126368701 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.13496618 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132697635 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10965577 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138243258 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110555317 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126672475 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.154107846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.112294704 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109455597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156044557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123178102 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141033077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.122374934 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113452922 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133968845 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110568834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116717457 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.153878599 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109927564 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119352938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139315509 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117748538 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11756709 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142634434 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112615445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113235594 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.139890313 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136914208 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142404095 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.11981095 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116257373 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142387855 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118328673 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116827274 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136834374 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118741811 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108683615 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.136267854 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114706077 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155793345 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.1125654 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117532831 seconds)
  done (took 9.8769224 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12892288 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138884594 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143398578 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119903971 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112638364 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127116846 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101161088 seconds)
  done (took 1.925975082 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104264774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190429734 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.214331047 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213667893 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208735852 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196715659 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148786333 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103568626 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133627825 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139601692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189745131 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24413674 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109276773 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143787706 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214389916 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.105593127 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21715317 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104383502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114628116 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.216505461 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116844864 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156214364 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11690038 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103607506 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212918893 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104136296 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267629637 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118206958 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136196555 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117745199 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114812514 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20778699 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213509959 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117143103 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106721459 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.214082015 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209350257 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114509972 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.23014775 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108213972 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215374537 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114678812 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118404676 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14221842 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118441874 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.199563734 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122480307 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114785082 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141678946 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.196689764 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141898267 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186228367 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138908872 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115257073 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11288885 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144398291 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124204495 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115131685 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223908521 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116150295 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.214539934 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.216235349 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.213883422 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188684188 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149891848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189523321 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209068972 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114827386 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137746576 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117774301 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214099902 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114525815 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114472021 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.203562056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1196269 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.216378372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.214113069 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113960036 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116191276 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132393715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11688376 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103877508 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.207864101 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114063595 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11142358 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149619737 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116270179 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.140198693 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110843491 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12630364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140721066 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116483455 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120347411 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140990842 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120908226 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.22127935 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113729581 seconds)
  done (took 15.943446877 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.1091857 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105638304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10956014 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131833395 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105649591 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104962677 seconds)
  done (took 1.737308983 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145480549 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117275313 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150908879 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119364663 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16763327 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.223598954 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.23054192 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112222427 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159598014 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130024554 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.225608609 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.201482335 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.233870441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119176048 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.229519841 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146229074 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.205757954 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13938621 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127565883 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114318556 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145542843 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121349126 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114519491 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.214510303 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119909483 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14716405 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114506991 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127915488 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152746645 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114239744 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.1194716 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147587159 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112602557 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136908642 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.208041723 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135701704 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113134881 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125255234 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144797896 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123371187 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230425268 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115040345 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125260924 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150988814 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113807663 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110818404 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.153109934 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113766253 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.230346081 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124867613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150513754 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119717644 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122426067 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152417124 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113436327 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113446412 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150742584 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.205900611 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146327664 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112297111 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115944048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.149337538 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114346998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12318464 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145938066 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12582305 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111264185 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146017536 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113931094 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117005218 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.152313417 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117814866 seconds)
  done (took 11.502546097 seconds)
done (took 42.032038483 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.602950482 seconds)
  done (took 2.668931763 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.922239761 seconds)
  done (took 1.990395437 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.702993962 seconds)
  done (took 19.803908674 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543401413 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.61343547 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.058097984 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156553004 seconds)
  done (took 3.442275611 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.020382362 seconds)
  done (took 2.108029274 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296312388 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265960423 seconds)
  done (took 1.638347695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.75831187 seconds)
  done (took 1.844565562 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.541885054 seconds)
  done (took 2.615965397 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.367760345 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177139992 seconds)
  done (took 1.636921061 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.631048242 seconds)
  done (took 1.724089786 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.816463436 seconds)
  done (took 20.910711697 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249281378 seconds)
  done (took 1.344788348 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290133445 seconds)
  done (took 1.386540074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.786736374 seconds)
  done (took 4.885034951 seconds)
done (took 69.077276678 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118348513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118912957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118086221 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143676688 seconds)
  done (took 1.584108926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125391655 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120876286 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147643346 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120691732 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125860922 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119324888 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146384928 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122959323 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118496164 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147796229 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120721778 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11732976 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150450132 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119105436 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116820551 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148606602 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123835332 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119788553 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146861302 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122075633 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119489198 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148221058 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123892225 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122510042 seconds)
  done (took 4.191876244 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116732597 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110494624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110791444 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135990921 seconds)
  done (took 1.574742474 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129808288 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132769201 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156759258 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129049794 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13202159 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157656444 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119294344 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116220552 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146177666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128701204 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136012947 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15953274 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131884067 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120579154 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157940956 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113825718 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119851141 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159623587 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127129373 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127745471 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146472901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126067531 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123954758 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15642384 seconds)
  done (took 4.353256271 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192547911 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126800086 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169714346 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161315954 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.170847405 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114147467 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.139037361 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148802324 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121931189 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143251145 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.11993599 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162253992 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147752974 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118676971 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115764259 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148002042 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127596051 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120543567 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186067273 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120371626 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150080798 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128542659 seconds)
  done (took 4.238352873 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122677457 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109913473 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133407004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113606481 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121609479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139750732 seconds)
  done (took 1.846437663 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109765808 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104899388 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103032598 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129931444 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109683029 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103571183 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128151629 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105737452 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104380333 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103896889 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129929607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104221098 seconds)
  done (took 2.438492229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.35039301 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109819258 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137893376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111075233 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11507934 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107180906 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.1507438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108904931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.276213906 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.108640247 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.149793435 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198753698 seconds)
  done (took 3.03334344 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208151928 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144438853 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302550215 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372170284 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165828815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188013366 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27173693 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193427441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204188786 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135683794 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244882452 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153979924 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17666883 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173115195 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164298522 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161779901 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19521403 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188332 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174179391 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223368089 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157002255 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189914367 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179380782 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176850668 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134036559 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187765182 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118181752 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125668441 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194482877 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188931186 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170829006 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172095195 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138486405 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219795443 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261411215 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170327704 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313263804 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130922223 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201144242 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181947122 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256456699 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136996279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214232941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179127843 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127374084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2047561 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153008911 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200833511 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129609113 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167537218 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179644373 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199011626 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203745943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13670498 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31665026 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164984935 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169956847 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172168524 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210704271 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212627684 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164664909 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120368679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210038068 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207671142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203791897 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141523013 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188766308 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125141886 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164693251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219550283 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206574371 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155461521 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224894688 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155079998 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15684266 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198486802 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17740459 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20257552 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156884832 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144686669 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149420546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132001351 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153136818 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198190931 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147849448 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198371963 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157684147 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344280953 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186223489 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183807417 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156792351 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186293456 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155877704 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171538015 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11147591 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170263206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162110884 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18155632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132278573 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180409635 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137522707 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126428621 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179010564 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119919953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18324615 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133751627 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189326425 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156648746 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126829397 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190893645 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144806229 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.180812977 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193545726 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181458665 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156429787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13130727 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213773875 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156903936 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128167602 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202451112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209002618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148461217 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160438355 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16484006 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214586188 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139142798 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214304816 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135574529 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161494123 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.146940467 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185910032 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15712921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.180508729 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128672267 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148332231 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225033554 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152424338 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136526201 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192827221 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132112398 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123666353 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164919377 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134219197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164048622 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144431598 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131292495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180426756 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155879496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182944695 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15335886 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161126794 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174126654 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158872507 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157266935 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17298259 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117712636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199538934 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183352343 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157376164 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200578222 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191052558 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217878858 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15735566 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157934053 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176981232 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154270333 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118331034 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185912557 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153036294 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186830378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177795023 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216469837 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19269537 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148177354 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17463509 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165822986 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202456899 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150193741 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170031641 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156320773 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190606129 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11890047 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148286637 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126847146 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134575481 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156215866 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134363009 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202248273 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162144294 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212194487 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18454092 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137334519 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209444552 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124076454 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186668935 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162694176 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164446709 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179376607 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208361085 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16471688 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167613303 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158798974 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.146786272 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124831082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129996854 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192469885 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131623684 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160580502 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139719224 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210291917 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169103799 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17463406 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224834243 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16497996 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219915363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116989021 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192752885 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167764109 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185338036 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180900831 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164605261 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157537777 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205576875 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137870366 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215677642 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154285444 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189443914 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215967238 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154606488 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155977522 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148013191 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156370057 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166033259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164013217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173307897 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128507255 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178570446 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137156959 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122661098 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210090817 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168413685 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168977068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187075754 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166161775 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152436754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140173324 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186471085 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143268799 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114207201 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195825511 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209490488 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144812185 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183059243 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174558187 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156783294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321364682 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218665491 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174261939 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163041511 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139934691 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18956 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160718394 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190189135 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204291069 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141946532 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173989057 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186820205 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140186446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158262499 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145794079 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177529487 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146952548 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157958919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155962635 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138591313 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211400731 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165568196 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159501951 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186095056 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146474868 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148457848 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167272722 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220628812 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155731396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200792295 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154426243 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193846939 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190318459 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150503138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126882251 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127979751 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208181841 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127273871 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188522911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.205120697 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218663559 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16263725 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187901337 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138474919 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122977335 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185819058 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145465065 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221457426 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161913733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135645369 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220405078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137088553 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127812662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189110385 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307094429 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144079765 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200695604 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120535539 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303042122 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129017424 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130829778 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191923453 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196562839 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132279299 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180585081 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188454534 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139231514 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190680265 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134956907 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214860096 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220671861 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16598183 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202508128 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142113213 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18725876 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157264242 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204558447 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139056681 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1728484 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159943413 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209825529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20973659 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131497791 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155104503 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18684301 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154265752 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200254138 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133836447 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218863819 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126365858 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190468773 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135089248 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152010304 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15635817 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20803941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157426025 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178291959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186084027 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132503581 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124465877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173752099 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154232805 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167048921 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128532492 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211608037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128088052 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191896922 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178114094 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156655402 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156887511 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144186073 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157619229 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139695816 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16863156 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129207796 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169702856 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211446361 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129115986 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208144274 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188836692 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164440832 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183525869 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142213252 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662126251 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154716642 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179133735 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1763869 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214687114 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151068372 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159650144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18982121 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146043198 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193877754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145955843 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.268482924 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188615133 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156292889 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128523423 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169471348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137812766 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159235681 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152334787 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184250118 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141509085 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132565098 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.18530045 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140681068 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174194043 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138872841 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210807482 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147218097 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212562385 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179729195 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166941453 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159935128 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201727081 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127788871 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191637895 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200296182 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140453729 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144602213 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.161027697 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135431773 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210880137 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121680309 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185346286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161879989 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183005488 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15802964 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132825322 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190595346 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138368429 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188874164 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125044231 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179516135 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158951232 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158869977 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126420597 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157293195 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187067341 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15416568 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1532399 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173174733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211212625 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122626435 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131316535 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309000672 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186954748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190075883 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174037781 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133894106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142223625 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18248209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152268968 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188904736 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128424944 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155849301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.130226637 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.171655205 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.180988966 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1582358 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206948604 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158908097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222711299 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133141894 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.317735556 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137126519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187257231 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.126001954 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154757937 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142243133 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131239401 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169485538 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21547048 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181669268 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.181448775 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14596766 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132233994 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155451258 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129928446 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193463916 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151330411 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185456555 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144521603 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112563247 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172224623 seconds)
  done (took 84.014232232 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176779463 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15680515 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171830041 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226132419 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200368598 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29451336 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234125902 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258759638 seconds)
  done (took 2.907920153 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122979631 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161438658 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14478435 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147543492 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.119495477 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.455246941 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160249734 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122270445 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.167199018 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.165511485 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144956255 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.625545362 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120785 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14872529 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.131162424 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.121720447 seconds)
  done (took 4.244745524 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.510339956 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.604154202 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.31215222 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286200352 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238334628 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185031549 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.82467842 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196631112 seconds)
  done (took 13.354030629 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149358987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137126945 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.322313718 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.771861929 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.160242375 seconds)
  done (took 2.739464726 seconds)
done (took 131.606669975 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123301441 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122589559 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121447369 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155710315 seconds)
  done (took 1.709272874 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.186213092 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096514604 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099626503 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.124669367 seconds)
  done (took 1.705620621 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443592979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095961157 seconds)
  done (took 1.762696892 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150307076 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.149985738 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.1671778 seconds)
  done (took 1.678194606 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143514755 seconds)
  done (took 1.34322762 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.132591315 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122549635 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.244430381 seconds)
  done (took 1.704215114 seconds)
done (took 11.106638435 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123317938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417479079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.469955667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136374145 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713332254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.463284871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.073840595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177969908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17720155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141420148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133799438 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691277078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.056023757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.36722987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.011113974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390384281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694896935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112517054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150109492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114111617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.053754889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140157905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114749513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113800772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.722879658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425496214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111361383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.40784655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111985663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115630202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431497902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111957537 seconds)
  done (took 17.668609916 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121999947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176179099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149636044 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114035887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115351399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142550009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124705112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124708567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210088638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111076361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164106173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112308553 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117402116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142192836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13812156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111230893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144287285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116687416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12012996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143577684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135145656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11163985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142178842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115551962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112082792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163550873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113213952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124257686 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141249061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117405812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116419011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142103152 seconds)
  done (took 5.440987473 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162277905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181978459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151592111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149733484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191129965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114447441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225831365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150318696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206575763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113686487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133572461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142139612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154111429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112051741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168097303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112494625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115000192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14475685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12112306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114939881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165093071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111946338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114505943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145867708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113237329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16285203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114449866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124865118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140102637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119193548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118397069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141823329 seconds)
  done (took 5.739309962 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129031887 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129079303 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13604851 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167444378 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122595739 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126427406 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157667748 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123381717 seconds)
  done (took 2.297626689 seconds)
done (took 32.34933112 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136551412 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130494216 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129522101 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154278141 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196782749 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147733371 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127994778 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115439189 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15365914 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132300261 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112787617 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11615333 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160911778 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121271296 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.229658879 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125220608 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.233718996 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.19831226 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148342172 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124761749 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118224959 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233805362 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121953817 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147506182 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.207212133 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115098202 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.219030453 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120099816 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150782735 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115059073 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.228837776 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121328448 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116302076 seconds)
  done (took 6.210602552 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.214783322 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118935056 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152156955 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121145419 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118936394 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151458801 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.21657744 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150718374 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121938137 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120426957 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.120155613 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227768065 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124030183 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144878868 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121660613 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116694767 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.249063378 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119786652 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.112450092 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12906157 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114199746 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121428521 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258463803 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112238304 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120493573 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.152790258 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121378659 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123966743 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151168172 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121053505 seconds)
  done (took 5.572330653 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130843582 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135187134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.167570168 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190102289 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15018005 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16527504 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144651914 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136089985 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.177895401 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115795185 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129913395 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183358251 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13244302 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126113583 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150143757 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135110563 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13770539 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145642718 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123244549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132140634 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166742754 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133647401 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14241404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154394585 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114622725 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122245127 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156541866 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129996851 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122049623 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159252547 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117350477 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119321142 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14564339 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.152204476 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123035689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158811315 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142063581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126526344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.161778256 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147364396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118299352 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149220497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141179078 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17074382 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147524511 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129159568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125684543 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158958226 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113988536 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133027607 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.191266144 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115349371 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134905895 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.147807133 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113649036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122609331 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14659926 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118911672 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130315205 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147145861 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14144074 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122132891 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155382739 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118508583 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12636415 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113464083 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.14535023 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12080586 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142301257 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153620599 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153659515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114846966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.158877631 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128966415 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125501216 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157550396 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116329973 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125899099 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154688552 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122940438 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128269301 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117186297 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1501217 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132550173 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135918326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.160436627 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12873321 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127512941 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.149752743 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117103926 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131338341 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.14765542 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120863899 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127989903 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.14688839 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123735936 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132994738 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156997023 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115527822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140549448 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148737881 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116517981 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140278145 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119735652 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.15263189 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125303483 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.188512174 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119553294 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127279052 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127902494 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.146903234 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123305466 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118968073 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.146127893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134813849 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131249837 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.15323889 seconds)
  done (took 17.403641249 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.332723469 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.317526447 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18580634 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317380877 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.160362153 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.214177363 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.313130893 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.316005457 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114399782 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185364972 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.199357055 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.251565517 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14958269 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143444543 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.319205724 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370571193 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180926812 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152105515 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.186975178 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130631795 seconds)
  done (took 5.772255307 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139155076 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151711655 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171236886 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14607366 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122676267 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162120145 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116580952 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134129608 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155501348 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126720653 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118692272 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163639471 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125530635 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128996183 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162165892 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154929041 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123512165 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151819528 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.1392676 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120541188 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139045342 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144136931 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124000985 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171175408 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131756299 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127289718 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146429141 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122519076 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11914881 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153456436 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122233432 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134858015 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153829306 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111962246 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127166468 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.16153654 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121487041 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118888397 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120829917 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151143161 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132716643 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124785354 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155722164 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105931955 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132961481 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116900254 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157439775 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12954013 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112660017 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162389511 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130495384 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126847918 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122672275 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16711984 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119851037 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132585323 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.159118116 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126948398 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120736962 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.146139982 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115061574 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11966135 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152802085 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128913574 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128762837 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168679463 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133773159 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115760368 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.152379062 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121623862 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119999602 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161697062 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139175532 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121769365 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.150658231 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130632917 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121639754 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100140928 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.15694159 seconds)
  done (took 11.992768293 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143341579 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121970097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135615687 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184264949 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125851655 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121857794 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154543276 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137274097 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125765524 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161980568 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127248673 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129817732 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171253902 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126462971 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121293024 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164671845 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127071532 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155136757 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.166851759 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144302021 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157492621 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123553281 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128986964 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127654292 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17831917 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128821455 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174322161 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128590897 seconds)
  done (took 5.237400891 seconds)
done (took 53.403260745 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.352519091 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.568085423 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.336605283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.34114499 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.378258065 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.353835286 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.335151509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.335571856 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.87665368 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.311416623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.33691381 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.350084693 seconds)
done (took 30.113733584 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.395389881 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863800305 seconds)
    (2/2) benchmarking "String"...
    done (took 1.666097635 seconds)
  done (took 4.761784421 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.328174703 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.329282403 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.557571539 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.329049696 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.330288369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.330862355 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.347271501 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.330346295 seconds)
  done (took 16.785276936 seconds)
done (took 27.500222758 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.41644417 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.54456296 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.581392926 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.336217754 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.330610355 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.339832704 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.333081885 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.365523692 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.345466544 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.342353433 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.75553406 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.609844495 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.344067168 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.733011735 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.341231715 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.336165991 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.347313224 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.602776352 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.334252644 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.366003127 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.311518502 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.323671603 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.333439968 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.34015369 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.340241179 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.339698913 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.331505486 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.331008319 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.530104578 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.364854193 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.37447305 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.333955238 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.401404394 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.345337477 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.33982155 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.349551943 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.533489145 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.348269833 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.314214887 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.345028348 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.555074633 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.349356202 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.345970954 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.345488358 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.340076518 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.4235344 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.318825058 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.448908951 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.359118879 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.33298698 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.381819476 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.699330478 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.350315528 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.334926916 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.339494754 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.586061773 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.36342985 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.40047647 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.361123629 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.335303247 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.333219256 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.353562649 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.373217692 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.346812395 seconds)
  done (took 152.549347828 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.333511869 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.342021331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.33814779 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.339666381 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.339080628 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.341010685 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334779108 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.332680652 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.340801514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.366460421 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.339732606 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.334848548 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.339190633 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.305053786 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.342333115 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.353468558 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.340983876 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.336021575 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.364442302 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335006523 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.341973256 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.340405409 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.338567802 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.333795995 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.342920283 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.421822338 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.38026416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.352031702 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.346528374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.338999632 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.346916977 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.002587076 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.200552591 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.344921535 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.372824556 seconds)
  done (took 85.17505741 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.336162739 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.336266623 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.33698886 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.371180721 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.337100162 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.959473927 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.962440815 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.060329949 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.074662368 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.838822383 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.669100937 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.344933375 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433917027 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.350249812 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.337806058 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352972389 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.364078175 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.344595454 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.34111902 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.958498552 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.354297618 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.565366393 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.526062606 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.354355224 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371793814 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.735835809 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.337939012 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372495956 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.678462188 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.392700585 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337561951 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.33754977 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.75110127 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.711044095 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.458586751 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.339586398 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374484104 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.338558557 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.338962949 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.62441349 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.339320434 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.340372205 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.341800641 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058160241 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.345218294 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.966447837 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.346139227 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.354196342 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.346283496 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.34093809 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.339757654 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.470641333 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.121396752 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.344747887 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.338670316 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.343050786 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.339829826 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.338467484 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.375750689 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.463850408 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.442178182 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.341833755 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.343583983 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375125325 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.340365668 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.373378766 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.346987943 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.893228754 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.40184996 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.5785001 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.96145122 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346827618 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.439515568 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.462795938 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.341375265 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.340446196 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.340786674 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.341410166 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.45470025 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.340338073 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.777335436 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.524202867 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.361387432 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.835657429 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.348253528 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.439442166 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.341959808 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.762188288 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.347428881 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.340994136 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.110197768 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441192993 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.342213851 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.344142408 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.342399711 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.783080895 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965812152 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.64550338 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.348908532 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.647028184 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.348668658 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.79464923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.938293682 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.07237124 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.350891411 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.458677395 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.527760882 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.361849413 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.344238454 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.841430055 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.349198329 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.402529833 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.342210485 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.747319476 seconds)
  done (took 383.644429514 seconds)
done (took 622.599417328 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.25381711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.207326203 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.32426074 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.227322155 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.191754217 seconds)
  done (took 12.448163398 seconds)
done (took 13.689865209 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543612853 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.543330779 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.408065608 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544463426 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377402212 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.562564029 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.528188293 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.363937495 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.461066342 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.429349691 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458609091 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.398280558 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.378676914 seconds)
  done (took 20.241480976 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63777014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.348101896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41004421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.610739224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387423667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.63708286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.675859115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.34804079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485174176 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.361770667 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360900307 seconds)
  done (took 19.507618178 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63273138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.348800539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403322315 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.646782588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383520615 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.639525711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.658668251 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.349564369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.489005535 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363270949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35978659 seconds)
  done (took 19.519032575 seconds)
done (took 60.509819121 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.226006935 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.337190938 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.384650171 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.437508845 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.359756706 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.373142716 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.439541124 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.362086728 seconds)
  done (took 29.1637931 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.35483389 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.356416199 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.356129684 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.355340771 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.35947731 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.357438012 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.357206104 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.356966443 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.356826071 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.355329095 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.356909084 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.355743573 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.356020209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.357112328 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.355834313 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.357268151 seconds)
  done (took 22.948937806 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.357572793 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.355879122 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.354973617 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.356998441 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.356253522 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.358935757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.357396568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.357351478 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.356571131 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.357463465 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.357764086 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.35732592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.35635658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.356211776 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.357422307 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.357693185 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.35752759 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.356312321 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.361979246 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.357982154 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.356434555 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.35699342 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.356848279 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.357582715 seconds)
  done (took 33.819597948 seconds)
done (took 87.17494107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.360433552 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.346868785 seconds)
  done (took 5.952633073 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.421011717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.417989696 seconds)
  done (took 4.084431867 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.359134703 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.359197854 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.35946426 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.359659597 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.359595935 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.358748543 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.359705363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.359480535 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.359348965 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.359030403 seconds)
  done (took 14.83929515 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.359195287 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.3594198 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.360119673 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.361923997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.359333076 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.358731506 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.358853956 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.359244832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.359771975 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.359191867 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.363652174 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.359372645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.359880403 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.361000831 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.359694301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.360607785 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.359884247 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.361451541 seconds)
  done (took 25.728714199 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.375148037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.380900149 seconds)
  done (took 4.004293171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.499602964 seconds)
    (2/7) benchmarking "second"...
    done (took 1.401593647 seconds)
    (3/7) benchmarking "month"...
    done (took 1.477243334 seconds)
    (4/7) benchmarking "year"...
    done (took 1.466271039 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.401761942 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.381774828 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.402372088 seconds)
  done (took 11.278177178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.361771011 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.575476044 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.705447733 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.909836862 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.363351323 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.364136973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.171264261 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.364852909 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.366018057 seconds)
  done (took 15.430737131 seconds)
done (took 82.562558769 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.350670573 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.431163686 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.36618154 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.37266996 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.656240882 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.387443369 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.35532475 seconds)
done (took 17.167273201 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.338844553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.338498468 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.365576218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.354752119 seconds)
  done (took 10.646315254 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.351793353 seconds)
    (2/2) benchmarking "read"...
    done (took 1.637325182 seconds)
  done (took 5.236930881 seconds)
done (took 17.131763884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366705325 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.364173869 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.364606704 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.363042242 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.363530469 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.362255795 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.36392942 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.365015834 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.364735808 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.362909018 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.364537842 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363642879 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363497362 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362699962 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364120304 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.363069299 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.364471322 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365518875 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.363897205 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.362561501 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363901903 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364313254 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.36319629 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.36397471 seconds)
  done (took 33.985232119 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.365191122 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.364489969 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.364929962 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.364609615 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.363595462 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.366008688 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.364576723 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.364468665 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.365686892 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.364235114 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363911935 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.365564985 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.366082624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.364086463 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366002939 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.365541165 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.36586705 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364556634 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366740078 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.364647409 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.365469727 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364503977 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.364585703 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367117357 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.365019823 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.366213889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.365759701 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.365150377 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365373869 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.364927001 seconds)
  done (took 42.206420979 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.373802779 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.37476077 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.36963567 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.369432057 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.368827194 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.369602613 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.369824737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.370015106 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.368690661 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.369150998 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.37003987 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.369336107 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.370042826 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.370444323 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.36894504 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.371476736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.369729259 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.369590186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.368851891 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.370215572 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.370967429 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.369302963 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.370005391 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.370274802 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.369913533 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.369797566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.369982025 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.370181783 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.370766182 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.370344917 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.371254051 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.370268971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.369598537 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.370987515 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.370286965 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.37140516 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.375588193 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.376382543 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.371287908 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.373206867 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.372489369 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.373166056 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.372109096 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.372067902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.37210815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.371736128 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.370594171 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.371339077 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.37182483 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.371612653 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.371553547 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.372569649 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.372048178 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.372671372 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.371766524 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.37284992 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.371809812 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.372660327 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.372674988 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.373652993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.374018263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.372025464 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.373138284 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.372801425 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.371904413 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.372959733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.37315396 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.374412022 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.372513615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.374189552 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.372680852 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.373027934 seconds)
  done (took 99.999692564 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.370828574 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.37084834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.370428799 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.37019647 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369628536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370269894 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.371146484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370015489 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368245852 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.372363505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371260342 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.370952625 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371783422 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.372444954 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370639034 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.370587344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372093545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371062532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.372197719 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372657185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372810404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.371916376 seconds)
  done (took 31.42098677 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373179542 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.375006953 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.370688395 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.375422553 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.375125459 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.375643377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.373668304 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.374371175 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373945939 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37262449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371580083 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374329344 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.37333922 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37117126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372515515 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.375086482 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.374163665 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.374161429 seconds)
  done (took 25.983992242 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.373409951 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.373439038 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.373085874 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.371352314 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.374066973 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.374616323 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371703349 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.373102912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.374495574 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.372683483 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.375933352 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375957349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.374698154 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372242449 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376175229 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.37253724 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.372835476 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37336826 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375223483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373320575 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.373229975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374742096 seconds)
  done (took 31.481168774 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375023921 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.374842036 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.372244832 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.37473652 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.374082 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.375654588 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.374054606 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.373526936 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.376540557 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.377154844 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374118021 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.375384433 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.376349537 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.375600966 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.373786884 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374138884 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376499233 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376161752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377139717 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.374768506 seconds)
  done (took 28.762404747 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.384537846 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377612186 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.376935799 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377377138 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378148946 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.379800295 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378484741 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.377832107 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.378052125 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.379406405 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379010023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.378448169 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379720019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377899555 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.378767931 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379921764 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380503913 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379464261 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3811063 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380074091 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.379415094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379740942 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379572603 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379984746 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.381014027 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379940384 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379725462 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379189684 seconds)
  done (took 39.883079484 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378122564 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.379463098 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.376998904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.376236547 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.377199153 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.377242976 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.378166422 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.378114965 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379078978 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.37773032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.37946554 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.379734596 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.379339717 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.379590684 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.380153658 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.379109087 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380381686 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.379651003 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379161219 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378885034 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.379702015 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379233745 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.379958138 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.380336509 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377851559 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.380301059 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.379844138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.378891787 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380108465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.379176588 seconds)
  done (took 42.632384871 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.40011727 seconds)
    (2/2) benchmarking "in"...
    done (took 1.39863342 seconds)
  done (took 4.061742894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.380080819 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381059373 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.380241779 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.378746476 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.3792535 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.380620699 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.381461901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378927394 seconds)
  done (took 12.302619944 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.376242858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.381514011 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.381261326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.380993222 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.380850092 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.375713644 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.384265245 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.386608239 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.378634736 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.378081463 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.380407773 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.381142398 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.379918775 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379835036 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.377938679 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380881726 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.385652421 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.380691741 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.383815843 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.383174425 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382467942 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.379082625 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.38283961 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.386059939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.378166149 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.387548147 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.386390499 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.389648441 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377957383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.383670011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.380536579 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.382914509 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.383709863 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.383513263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.382367753 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.384475106 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.387186354 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.386540145 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.387573103 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387119607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.383931878 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.38318477 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.379000582 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.382506486 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383063236 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.387808283 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.38498968 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.380991426 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.379384776 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.382646601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.388131446 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.378534299 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.382657243 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.383904915 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.384050305 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.389207942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.390640407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.382383999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.385845443 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.389769442 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.396241599 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.392122613 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386375292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.387490316 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.388042574 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.396974262 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3899359 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.390200691 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.386124387 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.38623603 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.388692249 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39742576 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.394340739 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.386910625 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.385147292 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.386380892 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381140801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38659427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.389699443 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.391559093 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.388549295 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387467047 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391246616 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.395670214 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.382640822 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.388596279 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.387945973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.386701715 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.382911707 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393143612 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.392016816 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.387062834 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.38308635 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.38673047 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.386941013 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.390751488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.385033501 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.38673519 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.390195113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.392372867 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.391596096 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388649859 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.392201323 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392821815 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389675059 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.393101654 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.391875606 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.384722336 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.39440991 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.393123422 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.389972414 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.387900528 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.390190921 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.387900311 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385158665 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.389889456 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.389263071 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.385958995 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.391328927 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.38886883 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.392630102 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.403287465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.392078704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.388633619 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.388140939 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.394940811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389525053 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.389651087 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.391261522 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.388520767 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.388971461 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.387557825 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.391303034 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.386028511 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391071411 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.386271059 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.39001055 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.389385773 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.388712539 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.387159058 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.389454913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.388157781 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.389630697 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.391592687 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.392993175 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.389710478 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.395854731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.391550649 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.389543448 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.391549525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.390779847 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.39174957 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.389816364 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.393111334 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.387735653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391458637 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.387543151 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.393928899 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392057445 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.392056999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.391157383 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.386641693 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.389354198 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.392157978 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.390663527 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.391106957 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.392569813 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.391724277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.393086219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.387990454 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.394118926 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.385708467 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.39009103 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.396995298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392645651 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.392241297 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.391771026 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394002874 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392219772 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392732183 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.389308873 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.392837472 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.393009116 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.394684154 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.395405669 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391920204 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.392301143 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.389589444 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.388804143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394933816 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.3910044 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.397887054 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.399033278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400791815 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.388914543 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.39478219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.387964547 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.39415467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.393241772 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.398690261 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.395936257 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392364123 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388945333 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.396477236 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.38985767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.395610265 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.388773924 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.394887071 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.395489191 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.394495029 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.394664035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.39122839 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393316832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.3949467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394755462 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395271388 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.391583078 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.394570877 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.389853103 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.392454662 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.396588623 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.39552439 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.3981806 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.39798727 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.393004581 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.395432597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.394532639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.390112202 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.398552431 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395065551 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.394183119 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.4014035 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.398285116 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.395513844 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.401992888 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.398210844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.394265357 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.397077363 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.400589568 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.395875191 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.395588876 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.401103968 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.399246507 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.397897262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.397253944 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.393349596 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399125042 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.40042183 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.399613936 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.392384865 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.398661366 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.396123092 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.397876352 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.395162948 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.39467207 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.395642172 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397182924 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.399832202 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.39762419 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394528598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.398975867 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.397194128 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.397367279 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.395447772 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.401489013 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.399931903 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.396790178 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.396608337 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.395810213 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.401273732 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.393991772 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.398024797 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.393665175 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.405091925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.410193182 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401017881 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.401573592 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.399759997 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.400349943 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.398908268 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.396641885 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.395713367 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.395565736 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.394833727 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.394766805 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.398675201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.39471215 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.402228525 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.39618573 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.398211422 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.400351168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.400574776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.394257116 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.399670272 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.400227249 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.401341763 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.393944199 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.399598924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.396709978 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.398263001 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.396223485 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.397855663 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.403516575 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399928253 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.397644543 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.39779237 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.398574796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.394334475 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.398255151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.402552354 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.397481406 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.406253207 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.398526407 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.403445021 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.399583561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.404002017 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.403668076 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.398144665 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.405004962 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.400915141 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.39400929 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.396797894 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.401698795 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.403787875 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.405863972 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.397274083 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.403336406 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.40047654 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.401844105 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.40333323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.402577985 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.40284919 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.401939649 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.407055529 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.403941835 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.400012988 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.400942987 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.403302158 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.402730726 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.402457884 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.396505088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40389156 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.404783721 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.400460354 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.398846057 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.398988886 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.40348691 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.402536492 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.40271484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.401024444 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.405470658 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.406019604 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.406016963 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406553963 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.403376142 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.407137459 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.408374897 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407291164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.409464893 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.399803369 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.405793786 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.402622089 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.399610662 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.400790482 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.402295741 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.405691328 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.400074449 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.41161471 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.404658429 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.404064949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.40205073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.407100096 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.400621995 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409032494 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.419121065 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.401918176 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.409737309 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.407752934 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.403549311 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.409506993 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.407899613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.400804039 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.403674901 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.407423748 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.41007868 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.401615584 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.406008458 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.401872734 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.407471816 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.405732244 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.405017438 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.406414254 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.405874963 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.401405545 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.406502289 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.405751645 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.408956335 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.401712516 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.40418886 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.401249952 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.410166292 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.408913397 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.405320702 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.409545879 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.407071708 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.403546103 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.403579524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.408473789 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403226988 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.408663327 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.403205054 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407931695 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.406155287 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.407496024 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.40406869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.409757384 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.404662974 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.405189065 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40854716 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.407885476 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408187596 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.406297557 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.409890685 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.403811136 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.402355489 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.410312886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.404147244 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.410848162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.405447931 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.408474744 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.404499469 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.408165935 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.408584026 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.408880087 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.403829027 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.404957052 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.41281298 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.410350911 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.410652914 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.408958628 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.411907478 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.406608159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409210871 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.410831288 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.405290777 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.408303947 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.412054097 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.408443782 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.406913683 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.408288795 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.410667269 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.41183933 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.407914164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.404909108 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.415518695 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.414540722 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.412016517 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.40647097 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.408093202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.40725994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.410468588 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.411789727 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.406865459 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.414063339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.414110405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414002213 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411113192 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.408662376 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.407977426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.413323525 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.412384374 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.408010693 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.41064334 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.407034527 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.412188315 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.411482347 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.409688833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.404985824 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.405753215 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.40885473 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.410639459 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.410200064 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.409568321 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.409928748 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.409778624 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.416264453 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414214811 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.411889446 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.411944732 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.407375056 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413848419 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.40833514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.411889411 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.411234234 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.408311941 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.413549279 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411939804 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.408460516 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.414356615 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.415593891 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.409800027 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.408151483 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.409877831 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.413381269 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.415357326 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.412775377 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.410079959 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.40999644 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.41497245 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.413148428 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.413492517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.409854459 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.422295753 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.419796593 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.408564893 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.411332926 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.413506574 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.416970277 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.412490866 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.414252127 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.410389606 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.41209952 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.41963043 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.415330633 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417626348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.415390218 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.41217013 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.417116842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.412087178 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.415254359 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.413470817 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.417383493 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.415675025 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.413308022 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.423654226 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.418526825 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41802887 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.432342335 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.415561074 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.4136185 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.416185451 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.410488603 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.416025461 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.41322763 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.417313521 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.417115874 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.415055074 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.417038336 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.411089086 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.417273915 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.415669495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.421623557 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.416138028 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.41150502 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.41196742 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.415411547 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.414948109 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.421104435 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.416746248 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.417442424 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.418889768 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.414863183 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.426008043 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.427388161 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.420084216 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.418467638 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.417764272 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.416900485 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.418238274 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420142636 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.423540025 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.419515627 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.41952492 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.416062153 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.420152425 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.420437887 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.415933294 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.416559274 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.41557038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.418369476 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.427094907 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.431820471 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.421138106 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.417135896 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419810972 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.421031545 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.414918114 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42099249 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.419653639 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.416462649 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.416023751 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42259618 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.419854962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.418827997 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.417951088 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.427210504 seconds)
  done (took 835.86582482 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.419067577 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.418111454 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416380213 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.417721945 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.418770937 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418034854 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.417747358 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.418729273 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.417777961 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.417787881 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.418755683 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417182959 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.417637116 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.418813694 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418668362 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.417784317 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.419664459 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.418667841 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.418810708 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418620528 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.418323442 seconds)
  done (took 31.081428551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.421191013 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.419134591 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.41939812 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.419703688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420624401 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.420863614 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.419179302 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.420617981 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.420812825 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420337935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.421306419 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.421619926 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.420924011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.42036814 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.419474971 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.422000536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.422736182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.419595914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.422094976 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.420221196 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.42146739 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.420710736 seconds)
  done (took 32.552314679 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.422876924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.422423382 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.416772831 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.423008506 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.423648884 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.420733055 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.423157654 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.423230513 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.424001233 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.419008006 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.41705016 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.417830395 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.423080033 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.42654011 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.419845911 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.424493174 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.425170577 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.425433746 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.423959602 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.422801198 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.42670421 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.427039103 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.423456094 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.417815604 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.426706846 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.426125852 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.422970417 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.424721437 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.4196614 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.427837727 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.424820078 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.418951967 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.422675246 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.421549494 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.421123048 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.42926566 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.425058601 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.42400814 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.424118161 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.428286212 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.44032269 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.424990837 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.427039933 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.428758916 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.426152848 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.422282186 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.430397282 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.424228491 seconds)
  done (took 69.652978519 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.426328053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.425756447 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.424376505 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.424653227 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.426334569 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.424916932 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.426261437 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.42537508 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.424143088 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.425216696 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.427175582 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.424471017 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.424778755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.425732449 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.425714477 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.425064953 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.424892246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.424305848 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.425331296 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.42493918 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.425402575 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.425402759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.426222488 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.426283517 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.427294857 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.425840738 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.425308918 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.42702671 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.425774015 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.425445099 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.427131568 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.426752402 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.427218061 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.425374043 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.426345078 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.427267319 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.427242612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.42689033 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.427939103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.425976162 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.427248282 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.427821932 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.428083399 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.426256131 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.425051642 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.426562013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.426825152 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.427496029 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.426970372 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.428285526 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.428150377 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.426557664 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.428453089 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.428812721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.430105922 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.429303118 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.427775533 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.427635657 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.428858718 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.427343798 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.427451513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.43066116 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.429067638 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.429450046 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.429469055 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.42939322 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.428447241 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.428921298 seconds)
  done (took 98.324847297 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429260847 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.428862573 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.429143808 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.43002651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.429821198 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.429353564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.429619083 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.428779779 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.429318224 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.430021429 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.43004504 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.430946098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.430314264 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.431427435 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.430768891 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.429890739 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.430824378 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.432532543 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.431823039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.433494225 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.431531798 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.431271166 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.430496202 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.430995656 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.431407722 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.431521256 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.432083381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.431934203 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.432175144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.431007845 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.431887496 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.431852074 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.432223375 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.431161302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.433806437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.432510356 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.432144327 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.431645814 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.432934981 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.432256277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.433366431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.432218073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.433071767 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.43329165 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.432180524 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.433587434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.434383952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.433925239 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.43418884 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.433533445 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.43219167 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.43400138 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.43192181 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.43306629 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.433260076 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.43300282 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434251031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.434791076 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.435775172 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.433275882 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.432638054 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.433153809 seconds)
  done (took 90.084900777 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.434960933 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.434377466 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.433555663 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.433093039 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.434898748 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.431946211 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.434295176 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.433973174 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.435007401 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.435565648 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.435358013 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.432126613 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.435082294 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435438197 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.434228842 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434253129 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.434290459 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.434050579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.434951344 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.434857432 seconds)
  done (took 29.994313174 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.434660259 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.437119161 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.434755617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.435496249 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.436182311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.434746012 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.435794553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436077545 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434906051 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.436902928 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.436044088 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.436599709 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.435822718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.435086001 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.438027147 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.436146637 seconds)
  done (took 24.285348719 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.435885346 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.436054893 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.4358167 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.436247735 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.43550179 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.436078226 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.437979252 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.436305236 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.436124528 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.438061256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.437497791 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.43719963 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.43743889 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.438178886 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.436925312 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.438109463 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.436270772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.437750732 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.43805357 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.438347775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.438831785 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.436993864 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.438189187 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.438657456 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.437239529 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.43759767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.436689901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.437002794 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.438981937 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.438838142 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.438391295 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.439284907 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.43710771 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.437170056 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.438443059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.436695586 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.438179374 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.438472603 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.438537242 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.43898808 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.438468528 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.436975743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.439871709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.438810941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.439181866 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.438710306 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.437911116 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.438797497 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.43818789 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.439077625 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.439764344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.439915341 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.440201075 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.440094775 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.439416735 seconds)
  done (took 80.400218767 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.440024296 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.440587033 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.437948441 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.438649252 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.441122206 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.439155953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.44028309 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.441854422 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.438781529 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.440281059 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.438557123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.44052517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.438440655 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.441546409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.439220539 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.440155154 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.439262537 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.44094623 seconds)
  done (took 27.231439316 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.441665171 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.441084051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.441409188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.439472798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.439380962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.442843085 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.441061708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.441582839 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.441307466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.441043142 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.440450926 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.442347808 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.440747536 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.442316636 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.442311551 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.440853492 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.44125745 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.442571499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.441386327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.441800975 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.443110041 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.443633498 seconds)
  done (took 33.028469809 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.436119278 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.435635581 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.435981434 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.452691529 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.45088109 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.436711954 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.436352445 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.437237509 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.45838864 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.479036649 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.472049032 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.451054805 seconds)
  done (took 18.698331449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446212194 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448587958 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.443862725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445286002 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444937517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444865664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445385604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444912898 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447527759 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444773077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444016293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442901227 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444140149 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442208797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444091019 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445242777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442396426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44383861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44274799 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445188016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444225307 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444839573 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44336903 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44297353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444013484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445416735 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445346516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44356597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444738871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445439458 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44498963 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445128525 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44431978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444935169 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445269603 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445100363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445475474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44547513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446622746 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444315341 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.447609166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447205138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447139063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444946353 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447254443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445775851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446711726 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44518357 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445336844 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447092788 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446717157 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445789112 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447315625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447047677 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449642733 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447844885 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447062584 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448472023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44818071 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447339389 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44743818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448198256 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447320328 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449146277 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448987999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447807191 seconds)
  done (took 96.736628257 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447029833 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.447256254 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447451847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447737257 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448017476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446690725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446776063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447192184 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447496533 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447029888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449182996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447610838 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448078563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448824652 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447127716 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448143356 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447959403 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4478012 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448788379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450615347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446948412 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446868206 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448295107 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449297161 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448114318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449571696 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448238678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448583864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447257528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448815411 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446692507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448177655 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448226555 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.44891521 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447947722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448105396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449183391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448560556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448760701 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448632336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449513279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450880157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448252812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449337226 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449968783 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450307268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448492738 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448684557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451087095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448992291 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449427701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450676202 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450312713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451340421 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450226348 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449828994 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449534859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450071449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449342593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450950553 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.451567878 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450912971 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451055504 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450448984 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449683552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45012911 seconds)
  done (took 96.946328129 seconds)
done (took 1958.853477983 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.61256516 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.565668123 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.44461215 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.461734489 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.445380643 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.468143402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.456692348 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.446892063 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.445458009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.446166793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.4465441 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.640426985 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.440617077 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.447324147 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.44620949 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.542621555 seconds)
  done (took 29.080693858 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.478582377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.454345293 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.578037638 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.451151587 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.477284894 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.661012771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.512269429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.451494885 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.643197215 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.472341853 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.444672426 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.474475507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.45241275 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.443591557 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.473059536 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.661880657 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.723118382 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.447015238 seconds)
  done (took 31.624918271 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.961327381 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.458626587 seconds)
  done (took 5.744008646 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.474179907 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.450272257 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.45352322 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.451337482 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.444445516 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.463710392 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.45288242 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.447759736 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.449732005 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.600945078 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.455007746 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.464757099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.451372533 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.453805015 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.454734379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.498930181 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.611288841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.455981847 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.454653422 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.45707096 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.450669155 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.548635018 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.500789408 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.457404381 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.595090928 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.453149912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.461923578 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.46045635 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.599939855 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.456652638 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.452089888 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.452664683 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.455887796 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.446114537 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.950434657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.453642381 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.462481299 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.482774936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.457621149 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.613846363 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.45602856 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.460291654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.447528858 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.952579886 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.578150844 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.586237813 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.448652499 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.462638359 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.457642567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.527567496 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.454772279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.456171174 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.515961255 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.328430201 seconds)
  done (took 92.127214467 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.473466096 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.447666962 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.629283728 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.472422031 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.449533213 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.448470916 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.448265288 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.770524957 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.500323211 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.448427786 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.77558803 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.065741316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.462150204 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.531385485 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.427878012 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.544066899 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.448544012 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.447309189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.450347766 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.454950698 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.033211638 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.448908149 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.449070571 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.540094366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.491269864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007059442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.455239562 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.454740559 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.469314843 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.448181712 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.0190171 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.464849428 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.545556891 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.4504783 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.740750684 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.871457166 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839440409 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.466044813 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.454887744 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.449233131 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.459721302 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992673234 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.859623766 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.455223719 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.450548144 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007302255 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.456399512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.449913378 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.461366631 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.711975799 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.449295364 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.451631069 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.454142901 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.458256749 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.449705206 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.503894161 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.573949387 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012518743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.456389172 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.45180497 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.498212445 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.45066818 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.458797112 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.452506471 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.454839502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.853631058 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.632397959 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.451065971 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.850873874 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.010500821 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.451810006 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107916343 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.452427405 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.460076281 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.456133877 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.459799465 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.457686469 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999497331 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.47533729 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.452033797 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833938441 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.454090122 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.756364287 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.471986293 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.451568521 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.074269166 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.455575616 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.471887919 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.452676709 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.477519238 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.460619093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.458993853 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.747500061 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.476956867 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.452845466 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.455791827 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.479701078 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.454575743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.459095456 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.45516798 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084431686 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.453489988 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.45377031 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.454198098 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.453562815 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.461897267 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.456587222 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.454467142 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.733104446 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.455322526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.477190137 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.455252263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.470087111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.466572666 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.545294902 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.459804402 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.80283796 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.456279831 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.455641404 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.459737139 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.455700068 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.486572823 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.455388561 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.458399178 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.364849597 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.725929127 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.474846513 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.45591711 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.457826603 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.457171451 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.461915724 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.46224635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.521585194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.458866488 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.294568582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.461584975 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.48942812 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.456449929 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.467325854 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.456860417 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.469602594 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.459058568 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763098083 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.749603873 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.688062378 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.459293999 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.457319958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.291818203 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.489503104 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.638768113 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.479671581 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.45666421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.711291215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67437079 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.456042422 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.456827675 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.457382291 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731065041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.471670394 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779299351 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.051694824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.457320185 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.458010403 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.297519601 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.183608035 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.458737497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.458908299 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.759781982 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.476725474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.458084213 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.45844772 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.459409797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.459702711 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.460758457 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.464637629 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.459255205 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.458944688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.759370923 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.652610358 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.477228127 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.468574601 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007249646 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.49690261 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460588833 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.472735752 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.459409488 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.458532778 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.571930177 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.460309723 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.501745008 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.461103798 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.459160386 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022850693 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.47418856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.46003668 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.653345895 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209896202 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.464031919 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.461129997 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.459708968 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.392677081 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036496219 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.523922618 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.809659609 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.469485409 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.501601889 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.46071875 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.555376172 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033960278 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.463788124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.460476125 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.17368983 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.461526724 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.978425088 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.460518834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.46090838 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.102524322 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.463804818 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.463200336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.46261156 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.462387199 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.773220036 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.461935913 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.515437862 seconds)
  done (took 527.965358235 seconds)
done (took 687.86497125 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.46336336 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.469489149 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.445694808 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.468512367 seconds)
  done (took 11.187412893 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.504288246 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.467680988 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.474173693 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.466857128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.478645538 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.467482028 seconds)
  done (took 10.199841782 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.463302818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.468728842 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.470674244 seconds)
  done (took 8.743884463 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.709753267 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.489455187 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.871120483 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.484392869 seconds)
  done (took 9.896603807 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.475968626 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.477122907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.476338837 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.480433109 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.50473212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.506267126 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.482480156 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.480394497 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.50313005 seconds)
  done (took 14.724953853 seconds)
done (took 56.09358675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.632309394 seconds)
    (2/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.489492999 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.462993966 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.660808595 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.446353556 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.444879777 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.537851718 seconds)
    (8/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.496430835 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.750475826 seconds)
    (10/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.286444613 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.497089035 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.122379016 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.528174102 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.767753192 seconds)
    (15/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.12616834 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.490882536 seconds)
    (17/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.534520599 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.5759609 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.486168204 seconds)
    (20/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.628224051 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.448178787 seconds)
    (22/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.524342129 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.481538246 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.537856553 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.507680616 seconds)
    (26/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.736419251 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.457518197 seconds)
    (28/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.651564448 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.639949341 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.470914512 seconds)
    (31/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.715798585 seconds)
    (32/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.448091738 seconds)
    (33/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.447395967 seconds)
    (34/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.684768566 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.500248524 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.347813683 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.568121471 seconds)
    (38/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.497887223 seconds)
    (39/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.538046499 seconds)
    (40/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.246328491 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.449258472 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.530266842 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.45127075 seconds)
    (44/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.448670511 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.496460787 seconds)
    (46/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.616792131 seconds)
    (47/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.538452828 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.63102952 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.448349573 seconds)
    (50/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.458173065 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.488267056 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.577013006 seconds)
    (53/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.499513895 seconds)
    (54/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.738522935 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.695479041 seconds)
    (56/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.4505241 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.298035881 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.641848454 seconds)
    (59/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.562742637 seconds)
    (60/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.449786735 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.569196855 seconds)
    (62/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.501796584 seconds)
    (63/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.457881811 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.535752517 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.449804106 seconds)
    (66/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.448765176 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.450231844 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.494950909 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.630929804 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.306531283 seconds)
    (71/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.711051765 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557179598 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.658567011 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.658620329 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.515192005 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.468296303 seconds)
    (77/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.544973115 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.595817094 seconds)
    (79/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.565895033 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.470578271 seconds)
    (81/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.460746406 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.178381664 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.469975556 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.605304429 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.4515023 seconds)
    (86/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.188725213 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.553852474 seconds)
    (88/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.458160435 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.592694011 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.550375233 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.583439138 seconds)
    (92/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.563399413 seconds)
    (93/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.659524408 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.759089182 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.589587194 seconds)
    (96/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.25399579 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.601588073 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.595139426 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.501473072 seconds)
    (100/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.502629118 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.616859357 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.641161988 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.453232456 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.542252083 seconds)
    (105/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.508155349 seconds)
    (106/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.712109639 seconds)
    (107/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.458216128 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.637323432 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.537774927 seconds)
    (110/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.591130742 seconds)
    (111/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.605655736 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.465879535 seconds)
    (113/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.390114828 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.851716577 seconds)
    (115/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.453588422 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.527616273 seconds)
    (117/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.501503197 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.453438466 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.503849947 seconds)
    (120/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.455313643 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.167238749 seconds)
    (122/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.557564085 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.582472333 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.476531353 seconds)
    (125/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.621584656 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.634338968 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.61168129 seconds)
    (128/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.352094416 seconds)
    (129/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.716865313 seconds)
    (130/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.45500305 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.49150973 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.474907495 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.640287225 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561173519 seconds)
    (135/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.587097036 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.349816456 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.552848306 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.455124056 seconds)
    (139/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.511070913 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.356785199 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.650497074 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.232292607 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.458251501 seconds)
    (144/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.536748126 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.754916595 seconds)
    (146/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.602559154 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.536120133 seconds)
    (148/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.568728243 seconds)
    (149/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.503913095 seconds)
    (150/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.609233394 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.598896863 seconds)
    (152/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.511476385 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.752946775 seconds)
    (154/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.634822149 seconds)
    (155/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.503212992 seconds)
    (156/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.738667169 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.539555007 seconds)
    (158/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.314178891 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.596497897 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.510169443 seconds)
    (161/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.560665553 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.597018406 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.309960427 seconds)
    (164/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.512055109 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.565417431 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.584284265 seconds)
    (167/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.575932866 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.668510488 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.597953427 seconds)
    (170/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.327828429 seconds)
    (171/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.459743898 seconds)
    (172/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.457226107 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.588022677 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.586857607 seconds)
    (175/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.510982509 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.196177102 seconds)
    (177/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.554843605 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.607572479 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.56958222 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.60578543 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.639664052 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.67371655 seconds)
    (183/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.457645503 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.226373363 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.610664756 seconds)
    (186/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.457164979 seconds)
    (187/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.673495702 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.674906745 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.460173322 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.476807442 seconds)
    (191/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.60051085 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.386789657 seconds)
  done (took 367.944153607 seconds)
done (took 369.285690486 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502869232 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.562945132 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.484309518 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.484238672 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488219645 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.491260671 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.502987566 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.485473907 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.494785908 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.496712526 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.490790345 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.49153638 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.498778859 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.493723265 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.518359457 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.485755577 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.486122201 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.494100474 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.496644845 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.49997284 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.487500685 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488359407 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.507515126 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.48800354 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.495618306 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.496708841 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.492349275 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.4895262 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.489829173 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.497986398 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.479112471 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.495040349 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.499206524 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.49648726 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.489163419 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.494018548 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.488337564 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.566032773 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.503169782 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.494788808 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.49395428 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.502814628 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.496307141 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.493716043 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.497522925 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.508377862 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.498413691 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.505257845 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.48060343 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.485970759 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.507306295 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.498285565 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.49332642 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.486988055 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.495402156 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.504690063 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.497289262 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.506224687 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.493232826 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.492380764 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.523652827 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.507267938 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.498848778 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.499291344 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.494626007 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.502712531 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.49726166 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.502657778 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.495353594 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.492971752 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.49090508 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.496711502 seconds)
done (took 117.184463761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.619130739 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.482418147 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.631220035 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.495756348 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.655987461 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.622852003 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.492621857 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.493212778 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.493411085 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.321093401 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.493923298 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.502471991 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.484472344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.494930585 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.62204275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.495821925 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.493728272 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.211698027 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.49658215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.634820854 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.488769212 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.495871449 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.497059235 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.326962051 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.484324994 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.487671142 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.63672263 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.496852293 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.219702704 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.486894982 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.488032722 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.214768031 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.636136305 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.514517108 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.506128814 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.504759318 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.658286953 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.499841117 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.621297775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.621423603 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.633010993 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.535752511 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.48607273 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.491003603 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.500716793 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.500438442 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.496532155 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.524965873 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.492541404 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.496163963 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213238721 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.506176548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.503948999 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.496714113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.497561235 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.518097831 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.496975502 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.499398471 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.640586732 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.498620169 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.620894994 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.33103776 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.327046091 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.497459937 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.491040551 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.498286906 seconds)
  done (took 119.278655428 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.561262239 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.568927044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.613362753 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.494522666 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.545965862 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.613496995 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.49635215 seconds)
  done (took 12.255377268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.499894728 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.500512427 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.543753005 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.545350587 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.499418772 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.651088763 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500109563 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.505194681 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.497457397 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.547960562 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503854954 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501847737 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.507130706 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.494075523 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.543040606 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.505423841 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.608508689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.495125493 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499087526 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.648272094 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.499841461 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.508688315 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.546754869 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.506899261 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501861916 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.502311812 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.273522946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500689265 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.49935397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.502124843 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.499995692 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.550191834 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.501986892 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.493819858 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.498541276 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.612006399 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.502306869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.499526136 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.504945211 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.498860086 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.50497898 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.503355706 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.50406921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.500207113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.503593443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.519520119 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.505230259 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.501845655 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.502749289 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.505657173 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.548519506 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.503674302 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.500361333 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.501482414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.553495135 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.510796559 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.503109282 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.502253753 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.507075695 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.500389542 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.651670938 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.54508532 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.506847692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.545955072 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.502976542 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.503354402 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.506077672 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.502001066 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.591149074 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.502606958 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.549800155 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.502329671 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.687319503 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.524239113 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.505362568 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.501995081 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.501133588 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.503482361 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.497081596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.50573449 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.503132771 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.501160618 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.505434842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.502280003 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.503769582 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.65813521 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.609319276 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.503678728 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.512150434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.505832622 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.503592262 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.552743403 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.505169945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.502547877 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.55209523 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.615104188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.554338543 seconds)
  done (took 153.876147317 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.513452755 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.514117158 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.503648158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.527268088 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.500743773 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.499408162 seconds)
  done (took 10.42584949 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.502630199 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.508169654 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.504394104 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.504867497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.506295286 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.509279225 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.512381588 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.502018432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.5090997 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.508817096 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.50959074 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.513035149 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.517980607 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.506742307 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.511417387 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.509130335 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.513295622 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.504886563 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.508087 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.507214272 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.503112024 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.506607857 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.507872227 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.504577975 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.514836119 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.509983893 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.524462178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.511342358 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.508136906 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.507420645 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.509261169 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.511624946 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.505113129 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.508071497 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.517344 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.503950817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.51053368 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.516518667 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.507378045 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.51150686 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.516235554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.508122095 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.51073478 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.515877513 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.505670018 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.508624533 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.520225762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.526207203 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.511864565 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.516996487 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.518601786 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.509293716 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.513406414 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.516391019 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.507998312 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.508297808 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.520081903 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.515978087 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.510384134 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.506494988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.511566499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.514248851 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.507895937 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.516502917 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.50821705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.517552012 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.506129057 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.513252784 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.509902409 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.510061224 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.516652676 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.510305325 seconds)
  done (took 111.149913502 seconds)
done (took 408.343273542 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.900261391 seconds)
  done (took 4.271671499 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.614313467 seconds)
  done (took 3.98571039 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.529696534 seconds)
  done (took 25.907418949 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.612560906 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.507366542 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.502048207 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.507621136 seconds)
  done (took 11.503686394 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.933084204 seconds)
  done (took 4.304997038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.507167468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.509839503 seconds)
  done (took 6.391041593 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.825528936 seconds)
  done (took 4.197929336 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.86828743 seconds)
  done (took 4.248026184 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.505861738 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.516991748 seconds)
  done (took 6.40232697 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.481851506 seconds)
  done (took 3.85435152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.964083987 seconds)
  done (took 22.338002882 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.511360414 seconds)
  done (took 3.886437369 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.56175711 seconds)
  done (took 3.936174877 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.558811016 seconds)
  done (took 6.931573869 seconds)
done (took 113.531220976 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.500503484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.501662615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.501102583 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.502183708 seconds)
  done (took 11.378765294 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.56886683 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.567621193 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.572997999 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.568637918 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.56562327 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.568065423 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.541369813 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.541040097 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.566987651 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.566580936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.573819073 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.567009105 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.567867409 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.541512385 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.566793279 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.573045354 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.568913274 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.575860832 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.542117453 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.567347895 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.51723648 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.569269844 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.567926865 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.517414144 seconds)
  done (took 38.818185669 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.032585308 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.586881479 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.664121861 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.560126365 seconds)
  done (took 8.219537103 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.594937729 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.599561797 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.616872006 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.656179466 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.678454242 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.615202233 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.544177748 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.538659278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.524079006 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.598998077 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.649570476 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.587350957 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.685285924 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.516370833 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.801763414 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.51620842 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.517827744 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.597294807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.65058615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.66770699 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.518671683 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.596613095 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.603587155 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.589127307 seconds)
  done (took 39.842741504 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.523298047 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.535989978 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.515800835 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.531850563 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.516495161 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.517693543 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.517868219 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.521048862 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.51556309 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.515978136 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.517413431 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.530985298 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.516537908 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.517608353 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.52474146 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.519120944 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.518963225 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.524474106 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.52562643 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.517881295 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.517954757 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.524353844 seconds)
  done (took 34.846490172 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.506629466 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.505067058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.857117688 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.762272572 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.507421226 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.512418311 seconds)
  done (took 15.029409482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.593782814 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.747063297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.512995166 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.925945589 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.008358938 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.513552724 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.512791313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.790074055 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.157607316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.16608815 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.579379073 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.590557141 seconds)
  done (took 22.476639979 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.515041965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.506581687 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.521087443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.524384229 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.574979243 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.517357317 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.519561687 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.506253551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.581163061 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.5794242 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.518067475 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.577562223 seconds)
  done (took 23.821974775 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602715975 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.513895347 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.521636775 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599599704 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513771516 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361172218 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.602933417 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274960272 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.519230526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788803827 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517061144 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624224041 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77070085 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533585088 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.516012218 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.492859763 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745740043 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090153285 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517467261 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515360332 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54893941 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515554104 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.518161568 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.762433562 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365243901 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516379857 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.776297842 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.516031126 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849312151 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829284301 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827970212 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518218597 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790710179 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213685818 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613604667 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76083875 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532975367 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517389859 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.5235308 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.522145468 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538171714 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520844855 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827236138 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519439671 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516598661 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518007392 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292678284 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.522910485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.51622961 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516868278 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832398629 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61693481 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.5219473 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51725296 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550105758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517326569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.523678726 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651363792 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080945641 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519612248 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538871042 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.526586448 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.521541454 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519961632 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239547968 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.529774771 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.523600959 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523069883 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517309324 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520003762 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541595549 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520303935 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.54204204 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518829298 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353865739 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521369012 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521078662 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154554177 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525022986 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.525907852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751093279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519151777 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520206204 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.519270765 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520017712 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.322576329 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526027422 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.497079485 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563693835 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28231612 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.763903676 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538264635 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551008851 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744842511 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.497640892 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520748623 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.523295204 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522881144 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542614052 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288245065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521113452 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.525338958 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780726866 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.731652754 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533960893 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.503802803 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061177877 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528689034 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.548207724 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.531056886 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773712971 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.227772625 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844922493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524186036 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555626378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.522798574 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380720141 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535165406 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.531737661 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.524039636 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825507804 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.420798399 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52281341 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59208624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529042854 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.523193235 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524215085 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524465375 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.523479784 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.763117691 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535868195 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.84463437 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.527113935 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523884411 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.526572769 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527926493 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.525795575 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.747732277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542474743 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803700344 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525094912 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524825715 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524600729 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.747538603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.532325997 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.529904967 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788267686 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540843265 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.546775242 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845439258 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555127852 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633643855 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555360444 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.535579863 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.786439157 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.531014244 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.530272543 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525770204 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527393675 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533424162 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.534276064 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519657256 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233960565 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501548955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529374006 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.525302397 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.53986382 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593583374 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53190206 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771761799 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.52443453 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528249502 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.531866185 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.528640548 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752669278 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840879657 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.531193427 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602990181 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.062401482 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236217537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545214717 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.526512455 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.525580256 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.525843869 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527435062 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528378233 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526617032 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772980046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844659678 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529635782 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236689372 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535217195 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.535709867 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.533432297 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844252681 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.535908165 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528624611 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.538720279 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529170048 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54712085 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.848543829 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664622561 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.542568772 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.528767159 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.089361591 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53438043 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528188201 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529894953 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561152511 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538744427 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437093501 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791392801 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523725748 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845524177 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532825211 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.546297276 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.528663779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52887072 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546830447 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.542803713 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538291726 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.774260342 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.533241208 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531567159 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087664148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373237287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182811905 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548277275 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.540172941 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.535768692 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300615556 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529490283 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530242992 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795135971 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303463099 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531655172 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070370964 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.528569197 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.400255493 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848027651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764320277 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543635322 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.532062967 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851088036 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.742054397 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564204722 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547139173 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537723377 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.508087173 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1510199 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532564753 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611251707 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300639259 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531599188 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534990304 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.577986128 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.551165607 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979040262 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531358959 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534430452 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.535511617 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541475924 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45115058 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.535902078 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533927341 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258395097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.538216985 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.080469747 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532436517 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.780933934 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.847477951 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.844165955 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.534059147 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.539043201 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.788359061 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849101082 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535429636 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.534215185 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192910105 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.407510031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.540291031 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534212226 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392643143 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536815904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879821146 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.534225789 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.543136088 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544506192 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.535573757 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534586763 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.533307542 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.541449974 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505620968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12605575 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.551093469 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538358441 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.560988247 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542316555 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.791631769 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.548945168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248340746 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770616706 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54803369 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56658221 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.540741602 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541785498 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.512838135 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.536633189 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53566437 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593746893 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.759474081 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.539323501 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.51205401 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541470916 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.745774065 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53697808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.535793958 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796351464 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.537170558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.550380092 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376291529 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568945637 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536903565 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539730819 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531279395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580724574 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605450033 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787442591 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.85399102 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856822976 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986856421 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53691643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53959613 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.551274306 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632565766 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537031039 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.553889637 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.317941503 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256813646 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398452274 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255541461 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864955903 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.54063236 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544795555 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538427535 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674659254 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53969625 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812456403 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539324526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.533936402 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559358715 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547604869 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557675337 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755222781 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.814349524 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539904819 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542142494 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546451796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.540679917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857939668 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.75104178 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133955728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199991048 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54462757 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.550537731 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317180466 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815038578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539799738 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540661194 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540727259 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.555666421 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542378046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.545154673 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548591359 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676696886 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857220385 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241955531 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857811339 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.578040319 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.059539527 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550034934 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.79613571 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307210639 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788319637 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26178073 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408531532 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813231977 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611270133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789040828 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.540241726 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676370285 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.553624102 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.542724609 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543329102 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542656625 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.540138744 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860640207 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260669259 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813062195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.54639428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.540004956 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591936265 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.789501815 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.765741971 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355442085 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.766321034 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863112864 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.548718529 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.548070412 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262325621 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867966758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545250801 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.547838162 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804128468 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543624181 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570430388 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.061024748 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.542376973 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180927252 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.436758098 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564513872 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557299051 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383841854 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262678639 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.560762687 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13909052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550352162 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544846794 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825122035 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.551291115 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.558909527 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8350096 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.548492593 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.563253648 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799984161 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.260829985 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.428860616 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.563773639 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552725766 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.547963166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546040491 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620096043 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54510528 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554090499 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.021563436 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545218678 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545693322 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558117479 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.54640745 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545532141 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.551982171 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546528016 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.551848189 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.535281143 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.538264639 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.548446715 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681558199 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165027839 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556394369 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.223841828 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.875535806 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803916852 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.551639827 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.528599142 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.551766301 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548286628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54858291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548477997 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547253481 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207007698 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.555725058 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.874685412 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553049744 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.759029976 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759786963 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.554119685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798493148 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553611083 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575778344 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.525043159 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54896396 seconds)
  done (took 1063.317976815 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.568162198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.574396915 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.571811237 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.63151014 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.586514197 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.687117513 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.555080542 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.603034546 seconds)
  done (took 22.18597422 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.555870065 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.552526904 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.554073715 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.55327885 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.550002559 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.090548558 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.552429596 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.553550224 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.565963545 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.557527556 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.551830392 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.323801056 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.576310841 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.546916025 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.541708167 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.553017897 seconds)
  done (took 35.593378461 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.004813391 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.89116587 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.205490468 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.568061554 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.621797103 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.562167183 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.98131385 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.576180762 seconds)
  done (took 29.823012299 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.557758661 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.55768756 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.558815237 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.558700412 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.557866331 seconds)
  done (took 9.201276038 seconds)
done (took 1355.927820144 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.555149279 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.555668364 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.555377864 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.555620517 seconds)
  done (took 7.631549312 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.527437396 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.528711319 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.528338845 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.540065032 seconds)
  done (took 10.536326023 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.384832957 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.25660085 seconds)
  done (took 6.051798917 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.082710463 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080134706 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.075169451 seconds)
  done (took 7.649232953 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.841530676 seconds)
  done (took 3.253239416 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.507982834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.545843677 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.25184509 seconds)
  done (took 8.716972097 seconds)
done (took 45.24942923 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.552067812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.800189243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.83626737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.55017083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.707415565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.836340433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.396152099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.546977719 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.559559781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.55514926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.553424371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.710511803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.307379803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.81667708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.309727588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.801067022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.711067768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.562087203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.557373494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.559432887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.396344421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.551758123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.562415763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.553011438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.709913161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.703802221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.552696742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.801447827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.552008087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.55622476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.693696128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.561403844 seconds)
  done (took 88.838161874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.548167945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.56233828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.549029504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.568558697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.585708776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.551323951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.568806808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.567950547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.552030976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.547720532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.566830702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.565248616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.563079866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.548367699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.568043173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.5494296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566328148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.549823645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.551087357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.550462746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.550018965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.569640099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.549906706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.550105737 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.561981215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.55208542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.584277883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.554702825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.550491199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.548722441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.568578101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.570881943 seconds)
  done (took 83.308117683 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.549200736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.549972953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.584864003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.564281323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.561799423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.564734725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.554570506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.550850085 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.562208923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.559809912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.551308941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.581308897 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.553529973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.551118104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.554070997 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.552030024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.565772228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.550972448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.550460333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.554189049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.554409073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.552470212 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.557164507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.552544529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.565583076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.564102526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.568203302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.563670056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.554195824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.552202642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.572092872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.55248769 seconds)
  done (took 83.293282157 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.793266137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.566623243 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.570422037 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.562737146 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.571729725 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.567763576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.5629242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.799492316 seconds)
  done (took 16.411892445 seconds)
done (took 273.263616091 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.563639439 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.128228943 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.585081369 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.569973909 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.578819425 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.585664645 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.800157858 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.583330107 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.807020147 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.57856857 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.576768335 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.562827698 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.48718601 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.718419585 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.472123466 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.561937414 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.576058338 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.574369936 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.224452767 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.875057581 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.583260107 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.556062679 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.472735577 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.576513471 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.544048229 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.650585685 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.671283613 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.802040409 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.733236207 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.65055473 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.156222701 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.567330798 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.582693944 seconds)
  done (took 71.375265833 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.561791374 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.566920796 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.571316624 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.569830005 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.566645981 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.569409343 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.561686705 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.570445774 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.570504985 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.570491904 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.570126587 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.567930393 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.568165311 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.567757821 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.566484371 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.548232394 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.561617725 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.566679564 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.562716222 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.54887269 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.566599488 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.57158946 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.569598959 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.567392493 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.571706198 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.570313642 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.5685687 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.570080903 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.568842727 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.567695003 seconds)
  done (took 48.420177699 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.572029936 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.20662356 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.383711302 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.570458118 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.563836336 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.568406998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.905097531 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.573480242 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.568016583 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.567617493 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.108940317 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.575111555 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.599814743 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.388540566 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.567729209 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.57399632 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.573213996 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.565723066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.217771129 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.575035706 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.90357074 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.57404749 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.905907235 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.573990124 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.56864492 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.566450287 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.570219774 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.447542792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.591252728 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.113073167 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.519499488 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.906341743 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.374994356 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.445797074 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.520802243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.58216942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.573966117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120633817 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.568907283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.567604277 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.904649918 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.568812051 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.401913768 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.273003646 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.590399376 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.574327784 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.466425931 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.142519793 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.856590689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.573838655 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.442128283 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.571101674 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.577905734 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.569282089 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.855794736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.570752785 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.568717337 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.501457819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.594243077 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.905244653 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.578217203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.568267991 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.222435818 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.574430952 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.220264968 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.577818084 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.57702402 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.570536672 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.421385328 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.579236206 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.295740026 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.590800918 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.576980496 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.118691403 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.215492547 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.529351229 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.572625962 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.22156677 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.408987821 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.929468809 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.574697867 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.442069329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.929275438 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.57508129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.580922281 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.577859594 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.578173551 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.642964767 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.905214069 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.213875077 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.284533209 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.516037423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.931984979 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.57940952 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.571928692 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.508042289 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.598453644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.579183441 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.410917196 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.30544158 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.594165199 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.579925354 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.278589369 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.59554977 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.911002684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.578328647 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.445234236 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.574111093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.642913696 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.581637158 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.580041531 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.5769399 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.910327744 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.575967445 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.580691078 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.27758336 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.150970988 seconds)
  done (took 219.244772499 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.567320373 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.568368578 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.56919292 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.566257604 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.567944438 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.575182913 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.568138379 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.567738604 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.574228628 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.568088521 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.568258381 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.577583438 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.574365845 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.569429617 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.5696207 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.568965783 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.567295879 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.590242444 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.569034788 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.569149646 seconds)
  done (took 48.84644066 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.582556691 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.227023566 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.202861568 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.582967473 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.578970725 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.573892368 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.640315691 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.581488527 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.578383623 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.924308469 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.780403137 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.584617128 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.579014361 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.578315038 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.204484422 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.560070071 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.925745238 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.229551111 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.585232322 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.230454626 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.560901888 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.583958466 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.573215665 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.230651653 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935777221 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.914832952 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.644586867 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.23351487 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.581470387 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.580187784 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.231797539 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.585387636 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.578735725 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.221210756 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.584833865 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.597051027 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.579779061 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.645087835 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.64574358 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.931368727 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.238827075 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.923401151 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.596102358 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775400793 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.584369714 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.560342535 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.241955614 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.586589669 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.562021389 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.5844962 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.590342137 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.217026805 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.579216745 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.21593302 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.582436463 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.585287474 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.235009707 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.217218868 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.208911575 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.784221965 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.583199557 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91698968 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.583256399 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.243848299 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.5869083 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.586054109 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.586334451 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.785599155 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.242304762 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.917293262 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.931199401 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.932347426 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.587092221 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.653458336 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.585665919 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.931540763 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.653346629 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.045695066 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.931652163 seconds)
  done (took 143.756753556 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.878772129 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.713284137 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.999970253 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.228266757 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.132596341 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.728714694 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.705961134 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.844331003 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.598217245 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.668160445 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.323112089 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.690047171 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.369914327 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.68307062 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.695905839 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.718289718 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.026980953 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.576870093 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.26710739 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.295383965 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.593987058 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.694991518 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.132456212 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.796229835 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.590605645 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.178104614 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.596687838 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.173817311 seconds)
  done (took 59.337560069 seconds)
done (took 592.39763263 seconds)
SAVING RESULT...
DONE!
