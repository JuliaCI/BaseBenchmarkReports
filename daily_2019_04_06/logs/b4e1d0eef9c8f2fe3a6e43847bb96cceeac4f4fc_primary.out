cset: moving following pidspec: 16791
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.321866887 seconds)
loading group "string"... done (took 0.591873991 seconds)
loading group "linalg"... done (took 7.236833961 seconds)
loading group "parallel"... done (took 0.169348761 seconds)
loading group "find"... done (took 1.149230271 seconds)
loading group "tuple"... done (took 2.03624777 seconds)
loading group "dates"... done (took 1.292152317 seconds)
loading group "micro"... done (took 0.239296143 seconds)
loading group "io"... done (took 0.964556312 seconds)
loading group "scalar"... done (took 39.656666255 seconds)
loading group "sparse"... done (took 13.012592511 seconds)
loading group "broadcast"... done (took 1.017421462 seconds)
loading group "union"... done (took 13.974339181 seconds)
loading group "simd"... done (took 4.741353246 seconds)
loading group "random"... done (took 9.508858191 seconds)
loading group "problem"... done (took 1.930169615 seconds)
loading group "array"... done (took 21.604546985 seconds)
loading group "misc"... done (took 1.952289369 seconds)
loading group "sort"... done (took 3.238047428 seconds)
loading group "collection"... done (took 18.045108423 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534384578 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141167479 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117724528 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138493555 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18319668 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132269459 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145385472 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086106283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025426486 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167377621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139279714 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.472179517 seconds)
done (took 5.038119306 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.239988926 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08651089 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096192934 seconds)
  done (took 0.882815049 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067640094 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126737019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080439878 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068497383 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067127466 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081085369 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067624041 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066313681 seconds)
  done (took 1.264285581 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075536453 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070006235 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08493085 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067951515 seconds)
  done (took 1.003958405 seconds)
done (took 4.17466411 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.889202738 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238807904 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194509212 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.449258509 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146871292 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186692926 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66371119 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337986208 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20853274 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100779934 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104366084 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.374481586 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107255809 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678411142 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076010116 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105172582 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159973533 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419974682 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082032139 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083452384 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104374034 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142507636 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102506057 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077697355 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168369719 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070179678 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146466301 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095699786 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069201062 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243243921 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190099071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68888319 seconds)
  done (took 10.447471472 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100165225 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11727348 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069387147 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139700223 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101012847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086529931 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071767824 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083037988 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092505481 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158972793 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11402326 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106240344 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081670634 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070672672 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100701546 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211719221 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108433647 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085245808 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088078103 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075896488 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12166044 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083668848 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093727533 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078744102 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152108046 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195397838 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113673395 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111567542 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069945458 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080853114 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131531286 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141501433 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066520316 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082420136 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139675541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111032679 seconds)
  done (took 4.555463852 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.01451511 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15973798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091538296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151018814 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114362228 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084709859 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109794395 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083812422 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100539504 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245549996 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.136049076 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453159771 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081330637 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125112702 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086821079 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068213247 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085200429 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067650853 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.492808847 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145347701 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120976283 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085619723 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090011321 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071187065 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367349582 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068832493 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066780788 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085358172 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060343153 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144442973 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068383135 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.203608934 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088902855 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088225564 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118368043 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17948977 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097623152 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121824082 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08192751 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067235064 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168213468 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073866003 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082686277 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066798548 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105479681 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10463078 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119428966 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083635972 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068116927 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18082743 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067272587 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09948994 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.867889437 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17137293 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077939465 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067042648 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284906426 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101404498 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068302679 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06477131 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255040007 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151992758 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067438515 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084095732 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067019936 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067730381 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381466425 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068430456 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.722166653 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072065858 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080266345 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087822468 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070221482 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09179902 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075469909 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101955082 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067889233 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070181322 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084036204 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066649128 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084184274 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066169322 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099447373 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204471748 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067719113 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067603519 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08222729 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086498718 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112327434 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070640909 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082407817 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100598246 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084273281 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068255679 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119758973 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067571005 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102032673 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084446093 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114751298 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082007522 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125268897 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068956738 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114644372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075406846 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115621207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093811342 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068804759 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151943184 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06455499 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081959844 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067990122 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065078718 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085188932 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068409343 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098016075 seconds)
  done (took 20.890048436 seconds)
done (took 37.612234619 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293621833 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092105476 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090697404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07523219 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091434647 seconds)
  done (took 1.422272206 seconds)
done (took 2.175731644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121360054 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116544578 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064181132 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112360697 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064741363 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116207819 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113589708 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081120805 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115260304 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06702292 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111800533 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064805372 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063847264 seconds)
  done (took 1.99299643 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08376785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084905314 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086055658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082172573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079118298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08311276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080686209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105395177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080963444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087739184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06506606 seconds)
  done (took 1.668423357 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082901353 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083971868 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085611536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081361884 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079179015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082563719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080568354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102715957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081500067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08992096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066646465 seconds)
  done (took 1.669144874 seconds)
done (took 6.074539803 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079757622 seconds)
  done (took 0.826133436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.689336712 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.305666841 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083472419 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133907652 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222194026 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15201229 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.423080479 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109073919 seconds)
  done (took 10.046155855 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092220573 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099678423 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072544607 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086890446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069284955 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085552702 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072284521 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073169901 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086586988 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069836774 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085304973 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069724878 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088185928 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072952263 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07240414 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084500268 seconds)
  done (took 2.094842612 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095834694 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094825633 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092072239 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076038022 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089536416 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073980725 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092737236 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075036152 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088002019 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074836695 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092310279 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077058569 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089863544 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068896016 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093018124 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078805148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089887496 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078234716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092766033 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079064462 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092747287 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066099605 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087881081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075384226 seconds)
  done (took 2.872948181 seconds)
done (took 16.593153007 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130236916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076265868 seconds)
  done (took 0.959557666 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08164492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09804307 seconds)
  done (took 0.939641006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082584505 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081779909 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089274914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093804076 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067035884 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081581572 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102282169 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067798857 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067288846 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082844478 seconds)
  done (took 1.575707362 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069161833 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094241854 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071078503 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097201628 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074239478 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080790295 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073196398 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084175271 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078648771 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079287904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072039067 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098483299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072795819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099726892 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073708645 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084196636 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087417696 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068492472 seconds)
  done (took 2.221769387 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066376878 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068238329 seconds)
  done (took 0.89635972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0676377 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064720571 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082277357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067853327 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078847563 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063904281 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079654503 seconds)
  done (took 1.266618412 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402458572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109324815 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244515931 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0899542 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103981933 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2618502 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084004542 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072195458 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088889449 seconds)
  done (took 2.256383304 seconds)
done (took 10.875542578 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079819096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087368326 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110653173 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414886449 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105864862 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067432011 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142557572 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.202792139 seconds)
done (took 1.973225251 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124371983 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612670176 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400724464 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212249124 seconds)
  done (took 1.991093497 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377666017 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094952437 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076245631 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069004487 seconds)
  done (took 1.388218317 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066554455 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070492724 seconds)
  done (took 0.906775394 seconds)
done (took 5.178178971 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067292087 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103348802 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066933169 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066373364 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085453847 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065113303 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066497239 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082545169 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067684382 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068611628 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08337662 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.072230662 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083713143 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066745749 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066396838 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084451646 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066243176 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066596823 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085416308 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066757285 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068610537 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084298893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06677898 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0663272 seconds)
  done (took 2.57137148 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086301211 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084017812 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072936184 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088698619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071421733 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088079676 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072226125 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067872466 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087459358 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06959641 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086852806 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071444718 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084547091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07158073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084668218 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071359453 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090734957 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068214448 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070215716 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087014511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072703982 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083014711 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071830301 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087869604 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070977672 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086268626 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069799373 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083578572 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072908249 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086318228 seconds)
  done (took 3.134825425 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071962061 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065034987 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081387218 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071290846 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064827286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081626887 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065347072 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080894948 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065450361 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065129831 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082047945 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065378829 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065294807 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08138932 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065962996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084050964 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080998162 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065619351 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080773842 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065703567 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068276264 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080194938 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065464193 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081007498 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064762955 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065247468 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08045544 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065042318 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065808368 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080849768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068118826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067691794 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080081721 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071625937 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084119954 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064602248 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068767915 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07988349 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065389747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064894665 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080256594 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065211521 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064944852 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087266346 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065127625 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082455752 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064929333 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066630428 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081151434 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069571879 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081940178 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066819258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068352835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083487218 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070548827 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066114313 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083527161 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067199552 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08326599 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0670266 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066398974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082090758 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069631183 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067899034 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097954342 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07476957 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082653483 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068815537 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067745518 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084717252 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069025289 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081269612 seconds)
  done (took 6.034977538 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116584169 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091052991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082636191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067287489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07985148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065354608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069121114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080889695 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067105655 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086901212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06568367 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066428598 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082850887 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077781874 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081372506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066766882 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086716356 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063170146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066022868 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084910279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065966069 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084480136 seconds)
  done (took 2.480077023 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183294985 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087813256 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109644173 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090460364 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068793458 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090379026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07056921 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086601094 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071783895 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086171374 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070514717 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086275684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069335063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084619295 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069762255 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085618575 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071439814 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085325334 seconds)
  done (took 2.346856012 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078114449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067447458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106517269 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067631923 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083837151 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06970667 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088730857 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075853922 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085385535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068480074 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090803624 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070078265 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085239568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067520216 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069624363 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083145287 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070465886 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083300762 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075330338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087965836 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072468831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091253714 seconds)
  done (took 2.519448773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081812997 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069201181 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101094882 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086168883 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063932468 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066151533 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089270782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067714092 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089459337 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069144824 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067412523 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08140452 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07206797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082936944 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072681419 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083295097 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069162685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067302677 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085260897 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06367621 seconds)
  done (took 2.310442976 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087159967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084782469 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069169634 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092732537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069426954 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0847234 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076738997 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08460688 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069558787 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108794191 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068898192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083925215 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076818915 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089169319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068832714 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091440707 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076387878 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091940551 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068816579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084488329 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217329835 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068894314 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092039252 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068585501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068656068 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084583969 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068868642 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088718583 seconds)
  done (took 3.172177355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067380606 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067621478 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081213824 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064981974 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065175067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081038577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066336276 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064998177 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083203768 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065141624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067284072 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082769187 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067310992 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083470384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067363398 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067546245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083030927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065120289 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064924724 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080705074 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067579281 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067164103 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08308532 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065066124 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080426024 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06752087 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065485208 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081010378 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067598513 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06523409 seconds)
  done (took 2.932213451 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077499415 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091412714 seconds)
  done (took 0.957442826 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065384972 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082006666 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081719467 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07161921 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087973776 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068874542 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092361421 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071983925 seconds)
  done (took 1.408062425 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08246303 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079624722 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086574732 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079491029 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094881208 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085487365 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156849174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085005462 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074774403 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082898814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081477986 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066819646 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090779028 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068307583 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089503866 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074309362 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065867407 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089472411 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070547591 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082607868 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069362882 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092047156 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069692422 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064625158 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085095077 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076519467 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095102342 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068888276 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087232803 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074530588 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072680345 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078950265 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067908314 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084390951 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066108421 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093152811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082245626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086409139 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075939636 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06946178 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093603007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063411871 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088607317 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074661983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095058002 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070384155 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.07083097 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08220993 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06809257 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08871586 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065262066 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070548651 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081361285 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076935474 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089353821 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080320045 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071781517 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088688085 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073112761 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088447003 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076614064 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088056382 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072036258 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069709692 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094236115 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073080439 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093787238 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063674003 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062187096 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082159901 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077574697 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106189054 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074392094 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084753445 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069547967 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081714312 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072088691 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071508083 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090118803 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075735129 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085589734 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075438481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092088522 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069384034 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072162862 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094765775 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068121729 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086534212 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067186976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101159333 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067846697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065925232 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081522041 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077467098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087296561 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068293136 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06511682 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090493324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062407887 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085059646 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069092482 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083679426 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077547086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088615745 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07376724 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092278544 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075931438 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069698624 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089163857 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066445661 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087155323 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068627406 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077002022 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081489115 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072427409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086499566 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070512494 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077913846 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08434528 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070630533 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09365039 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074975636 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067620756 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08263885 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072266978 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086766916 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073154124 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092801221 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068528792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064707829 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082039447 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073466743 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085955617 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073273116 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074282723 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089656675 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064786885 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083964577 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074434152 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09341588 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068904624 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07004362 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090573797 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070602742 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084103469 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07425412 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086076816 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066573021 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073408202 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085267304 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063630454 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087831743 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07045155 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066848176 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087388555 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071191313 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086424981 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068966498 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066669216 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088964927 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068810437 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082969401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068069309 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066328621 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094154686 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069962407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079733408 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065675844 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090933558 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065583095 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067869532 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08354613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070337723 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084937823 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066295243 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067185452 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085889385 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078330652 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088692522 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069029542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08941839 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078507684 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08370714 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069564825 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067627298 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085091505 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069321938 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092492264 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072668945 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088901307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070202097 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064760829 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089957316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075166848 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083616925 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065702141 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066818517 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087689009 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073348401 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087288183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069841111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066616845 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085028565 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071589557 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088747166 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0699288 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08583905 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074462738 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068920446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092728056 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070857626 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096220935 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073524032 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081887299 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073354818 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068017477 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090784445 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063902288 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082298831 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06740748 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069025188 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083717146 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071111624 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079224107 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075256663 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07481723 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084356792 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067479584 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084117703 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074433962 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06880952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087709917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07119489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090080413 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077886281 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083429738 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070765281 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077558768 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084692324 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063047487 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08932718 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067046216 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067746594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084422576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068059367 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090000288 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077871283 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092500635 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064063648 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071941301 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085424261 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069298341 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082148611 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074503457 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071953819 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087450978 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076974321 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088023609 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070758833 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089690247 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069458231 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070724498 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088164037 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073001542 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08743015 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072843714 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068883247 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089884352 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068779134 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084095551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070974341 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069634238 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08670671 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075183926 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086761665 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069758237 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071513255 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087455356 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070364947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08737002 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0689264 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072299058 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088149106 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070407166 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088962891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065656968 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076584562 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086401077 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07680316 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086998435 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066805789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074381195 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089469196 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075059844 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087663431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070885495 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087697836 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070048978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071715271 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094226141 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067974864 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09771847 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077255919 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087417468 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072069979 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069548291 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088591312 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069314662 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086930499 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070645547 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070021555 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086639122 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07461019 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088770815 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070519475 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070908924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087391758 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069774285 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088027646 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064333241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069146575 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086406577 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069991884 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096116046 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071009948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068459244 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086507077 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071444246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085934417 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066558494 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093769454 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078284309 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070008566 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094683414 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068651712 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088283649 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08005558 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081609052 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067930788 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067335623 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084681967 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076573227 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087340707 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079086707 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069357414 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086827364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067585768 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087509384 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068488227 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064330754 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084912543 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074678156 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067612807 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087140957 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070509395 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090345609 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071801003 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096489853 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069112337 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069635974 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087579513 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067538954 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085844392 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068468922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072197498 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088082919 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067410355 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066516534 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087211343 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070443871 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088052747 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069954451 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07052189 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095241897 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069657799 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089952588 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073744903 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085281155 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072245004 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069525638 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08764738 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069446251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090267601 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0733107 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07035108 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09579356 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069466227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08803553 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07063127 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066646495 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087611038 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06945428 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087677754 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069712365 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070574601 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093554207 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066673779 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087519772 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068679219 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086418503 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076258875 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070139056 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090646151 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077136046 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088146845 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072072008 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094435429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073345393 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072084968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088404077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071187502 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092872881 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06902471 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093094813 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070305533 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071178671 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089443562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067789696 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070276928 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087963268 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06934092 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092875953 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070856804 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086670592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068891081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068263213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088673872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073620065 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094721085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072293793 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073035452 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083061291 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067598334 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088748665 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06823354 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071456739 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090160673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076369532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089253942 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070704463 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069288951 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096504473 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076014317 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091300723 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067643773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072961688 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088670549 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072473289 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088591934 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07031902 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088311614 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073719491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071559656 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087200632 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077102963 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09034109 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071125324 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071281608 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087855269 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070273754 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082933849 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070870768 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070928229 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092720016 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073007687 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087832817 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080763497 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066753488 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088168684 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07279563 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086138904 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074102343 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081017312 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069267183 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068838132 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085881635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06408397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083961149 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065410409 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070673378 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084455576 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064180733 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094937383 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076565197 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069833519 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084484722 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067904202 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080347367 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063837183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067080674 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087078507 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070046109 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095207731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067495922 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066446682 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081285875 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068555693 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0879495 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071613252 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064981596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080630984 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067895441 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088045893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073453713 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067124023 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085435815 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071497482 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087427689 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066532506 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070990777 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083054884 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072923488 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099387866 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071346619 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08803968 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076919957 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094929334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070934835 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065470517 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088363188 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073222745 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087477245 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070697123 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071632907 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102975289 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072806319 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08659366 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069589735 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090084344 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068899379 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077957887 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08871407 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070643936 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090328451 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07056103 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094130133 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071258584 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075996355 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088448669 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072686255 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084704265 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068842617 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066518926 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084826696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070350037 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08737337 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073794535 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093819639 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06900835 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097769897 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078507371 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071507994 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084983184 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069725803 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0872735 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06600797 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071090893 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08652969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069655409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067562868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087196666 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070725892 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093266692 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071237727 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070452089 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088834401 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064604866 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089545719 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072427123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070189176 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084930194 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070743536 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088730004 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074437718 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072735486 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086445432 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071112162 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089476726 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07036195 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064873984 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094365039 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069120187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089998249 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069757968 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070020187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089445278 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074035352 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092922087 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071162598 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09049384 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078969862 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072024761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085382433 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068256457 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092580653 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068027101 seconds)
  done (took 47.411627641 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107479588 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082433229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064048229 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081221058 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075574266 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083223408 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063947556 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064409284 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082468275 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067112224 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081411714 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063834443 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089463909 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086452071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093187714 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068142559 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081671021 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064473305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08116388 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064846401 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090311063 seconds)
  done (took 2.474914567 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077058303 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090147895 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074805344 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095572199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068985462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090063479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074212561 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090459643 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095159943 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069181954 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095159164 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072537639 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086191747 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06875123 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08585228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072755558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095099556 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069855994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.08966392 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07426928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089952308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074128901 seconds)
  done (took 2.633178865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068762135 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067386686 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087382629 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064811545 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069556829 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084000535 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074279148 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.094695669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073452868 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068746875 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086824913 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068682464 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088980602 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065472866 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069147448 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085391903 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13396734 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073261679 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068365088 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090096027 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065042603 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089773351 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065410627 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065379654 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086734603 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073522213 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088929311 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068001972 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068329417 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086953931 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069383555 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066282024 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090210301 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069224765 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086613473 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06801335 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068704433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087978701 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065671819 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085098533 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069860076 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065369845 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088196999 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070339688 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067284422 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085990453 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071085758 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087640435 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065410983 seconds)
  done (took 4.608988596 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085082635 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129483847 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088073008 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092391376 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101436216 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093175241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071743398 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112514254 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066054203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085030947 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083544723 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103820198 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086026048 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072691037 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070588547 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08600432 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068343344 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084326467 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07100154 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085107525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071129194 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091953424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099064982 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081004442 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088288081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066510715 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084510507 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071973672 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097618369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071893543 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089897152 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073114279 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10063141 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072925564 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08495029 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069943 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10165196 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067083193 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087871593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065251283 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087190396 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072983238 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091373923 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083333512 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085504718 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072980618 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085606612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065355016 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098030375 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07021303 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093350136 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099914573 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071712348 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067098527 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09071881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100054737 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06828342 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064878648 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.0887547 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097383289 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065781472 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069879712 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099854394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086853471 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074689096 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09921743 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072937531 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088526339 seconds)
  done (took 6.649462375 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076099638 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09178262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081645763 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099970249 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092038765 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075098537 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092073935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074394872 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091551146 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07868658 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092138247 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112547027 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069720005 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094103713 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074229096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092804644 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07441249 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092536782 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073283347 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092846201 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092060548 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08211313 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092166732 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098934038 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10408723 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0879691 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074440411 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092525411 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082274323 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093324085 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103182159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074535397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092369242 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081944792 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.103370202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091470035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067675944 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092039035 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075035927 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091919708 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070560523 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099524791 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074231555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08817614 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073680582 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092456519 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099275692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085282121 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095340651 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096865255 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074159337 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09968702 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073873223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092413729 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09950206 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106431957 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099730491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099198279 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074394989 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100858279 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099823675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087757668 seconds)
  done (took 6.322884599 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087557502 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095337666 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096221133 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063737685 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066438764 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090382664 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066596702 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083983898 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076561893 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093364044 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078325427 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08934481 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074645128 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096523475 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089348876 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07467217 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089388086 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071707527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093719077 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071783083 seconds)
  done (took 2.499180525 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077213195 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10345234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069286283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072695403 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089699336 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072870414 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088796086 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070926635 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086339016 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071564303 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095823774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077832374 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086504049 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073694956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09507914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073645259 seconds)
  done (took 2.156454325 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079345819 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095974591 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082356656 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086733852 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066398438 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083731342 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068102789 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063657757 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0834222 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081295816 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086850851 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07044613 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086797586 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06709545 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064218328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089524769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06435413 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084022955 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068022829 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100021655 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078488187 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084723277 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069239616 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068692169 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087645442 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072216234 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086717741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065615941 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084815894 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06860024 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086280544 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075105199 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082366114 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066655106 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066137468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083282367 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068044869 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086063556 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071415672 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066820615 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085346762 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06820969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085974027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069281357 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082031269 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068530643 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06413154 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091704278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066271437 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086929492 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068691077 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088644261 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06976921 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078318524 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090956148 seconds)
  done (took 5.109938947 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082180981 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071136011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083319967 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066207688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089403186 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070154953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070867915 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088553 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069808208 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084211842 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069996189 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088504981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070037068 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071322014 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088695897 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072000589 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082375938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070130642 seconds)
  done (took 2.244944406 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073267491 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067813057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093811874 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069281756 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086481656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070636511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064497092 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086056268 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067149353 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086288198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069323318 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070567172 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085919305 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070593653 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086449726 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068744666 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069882905 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085157862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068325789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082660338 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071054226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066597406 seconds)
  done (took 2.518304688 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073261908 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094929584 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162534823 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107442595 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08388653 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099748738 seconds)
  done (took 1.480425945 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092322933 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099155558 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068948098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107810353 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075430937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088070833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070556399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088071669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077914077 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101197462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069742638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096447118 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096930703 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077824753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093916265 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075590354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088389459 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06954138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087431066 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10455723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070434036 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09594681 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070630181 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087443566 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070747935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096066037 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078357992 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101622999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087761395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079031401 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092952241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070608812 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097003903 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102171026 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072055608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096371987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070767708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106225773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075746376 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095934208 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071101617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094459554 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096242259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07537144 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096232683 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070496656 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093468586 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069173827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088434971 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111906497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07558761 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096385508 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093419092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078861735 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097582408 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112896551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083303018 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096240095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093465567 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083307317 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096320804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075107075 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096088538 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10107714 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076270892 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095840341 seconds)
  done (took 6.625687123 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085835072 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106658682 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070061274 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102275311 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096686925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070410349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08795143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070580169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088370013 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070490144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129167109 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07032062 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096791172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096580761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070696653 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088341315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07022914 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09525969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069771632 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112764925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087882571 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078354596 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096681695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095639896 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08292726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093631502 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070105686 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089254891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069627977 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088650799 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074427173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089511929 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096102134 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069906777 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096492972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07138548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088221945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074691491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088053961 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076243102 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097177481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105446824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070189816 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088211891 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082986369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088633154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069239507 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089134124 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070474361 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087902221 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082909082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101871232 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10200243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096749279 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07103759 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088312126 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070138457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088142586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070953119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09356482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077857522 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088256662 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112633216 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070042026 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088464971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077798918 seconds)
  done (took 6.520466198 seconds)
done (took 129.894007768 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.225697132 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185535717 seconds)
  done (took 1.271012792 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069831096 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096832174 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098375074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129211572 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087553908 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101827399 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11905376 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080153848 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067539018 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087069869 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068564659 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087797276 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132669059 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068050205 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086743425 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070080707 seconds)
  done (took 2.318906417 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103377016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196589235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109301861 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066591231 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099856333 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079558043 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086058523 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079144733 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091505042 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067788034 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078410596 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095976512 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066463596 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09544484 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073306223 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098225542 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066518476 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097738991 seconds)
  done (took 2.52258874 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104957901 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142071007 seconds)
  done (took 1.115248734 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.19889006 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12271863 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201154566 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412444174 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204709628 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274914664 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.171643063 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170768223 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154677221 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168587997 seconds)
  done (took 2.944922553 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099359867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169938432 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310133766 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137315983 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087896027 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115258557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137762604 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.109941276 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08259583 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100882791 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081950017 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097496448 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117085031 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076711177 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094008537 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078886663 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120692592 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075761459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097329778 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077026553 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118074579 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068777206 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094584055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075732783 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09768396 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079872115 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067132458 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087339407 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076282675 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095019698 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078875929 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113356196 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097499651 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129802101 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082807987 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.148780138 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078313665 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092643664 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076614436 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073676948 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09714639 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097206821 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.085710344 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096271385 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067473822 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077477649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08604229 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06788651 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098596216 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078980939 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099226288 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078709258 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.14839896 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.078505648 seconds)
  done (took 6.227572224 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.738671416 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110640417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094170508 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.796388935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089178752 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104565272 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.702201753 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116164007 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208571667 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756830463 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092011873 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101492741 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181577888 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214954073 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.895747962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279627378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630197198 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106615431 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110743762 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131866781 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137531885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172523778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146152957 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434482699 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078174997 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094152466 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140760977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077972039 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162964856 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088026351 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096087774 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157120582 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227874761 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153488854 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098649229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072775302 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094444266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150959874 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223937571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191622771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160615994 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070793915 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093759956 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142926771 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132596243 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07139168 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141753781 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154316905 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172456582 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076414963 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098427347 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144564694 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142548115 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.144206174 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103185379 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270093144 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283259397 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070438221 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120625596 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105763316 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215216854 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105241001 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197848279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139650273 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167593749 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091524555 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728557268 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144753737 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091177525 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074869542 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118237602 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095582656 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141745795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146871309 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.34936716 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166359002 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076291604 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093167594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209643933 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083862552 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092537708 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141043851 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076937362 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124483248 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16726202 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145871951 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147711554 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210631781 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14449027 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163199522 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076307221 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126914856 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076498218 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215208991 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.174030154 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141593205 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209240017 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140839302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144920908 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147722506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096447158 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152065094 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121939671 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083288456 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140315652 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191013161 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123436622 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084067643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096226732 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141612515 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12666891 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084648442 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.15913406 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147949077 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455439841 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144811764 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088933969 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086349918 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137031526 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159915911 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075783098 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22941537 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101323338 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165490864 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120055517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070827215 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122768992 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.14170927 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078357917 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122636624 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158459142 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078235692 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21487391 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189678804 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077188503 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211435582 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160047949 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07630334 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147265435 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120723118 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14524145 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097906528 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137478168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074665677 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762440659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141383441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12064223 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093732487 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.153431605 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09185455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083333307 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103872673 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06785911 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74789905 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084368782 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101261492 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102957141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075819288 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121178785 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134503153 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093381215 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137571463 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.175650362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097565049 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117639026 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081940101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159429812 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076291389 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103273796 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083330681 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104336234 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12196631 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074245775 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103671591 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145803446 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138413721 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.187333571 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540248223 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070012717 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104540337 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195091246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070718334 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258535505 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134992919 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.195153045 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139591005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080557849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281526245 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141573785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177618958 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105387433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150057134 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069735365 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134149986 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140079267 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092206764 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075048496 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138981758 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165471832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14697968 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.946664084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07194667 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202004143 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067733609 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170801979 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078709519 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099548875 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240611063 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092837722 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147938755 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143165777 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09565099 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086442436 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672734905 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105245075 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137406483 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09549324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.169378319 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164417612 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139459012 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141826938 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07716691 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.1610615 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188007784 seconds)
  done (took 40.385796558 seconds)
done (took 57.653650299 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259488312 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178867563 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.238277728 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142934603 seconds)
  done (took 1.784151801 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147612206 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104409813 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117171019 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086127365 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103277394 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086799297 seconds)
  done (took 1.536985603 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400825558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262473286 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228946629 seconds)
  done (took 1.786031543 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283167813 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213291886 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44547574 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296205789 seconds)
  done (took 2.23601299 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.180544641 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114708299 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068322609 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106476403 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158130758 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249989815 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126834713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18541533 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079908457 seconds)
  done (took 2.213010478 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195586005 seconds)
done (took 10.649696947 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.193195327 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.342877513 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.21331587 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.241438004 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122013216 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11210355 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.25524424 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.209262937 seconds)
    (9/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.146497909 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11245775 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.106912866 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.279314688 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096729686 seconds)
    (14/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080301758 seconds)
    (15/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177957776 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103872145 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20694749 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103509534 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087230678 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114619982 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137203162 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079832193 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.108307178 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108181649 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09642934 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.282963248 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.281066474 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07277249 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109383103 seconds)
    (30/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099842162 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079818007 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105159301 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099866143 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.109925972 seconds)
    (35/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.181615503 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094488943 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079204307 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.248421825 seconds)
    (39/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.087050392 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.251424474 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102218899 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118922048 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096263372 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098252221 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 0.167600256 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07946688 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08035383 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241822648 seconds)
    (49/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.227843943 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151626391 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.271222108 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.238253528 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.267169179 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107784268 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099359494 seconds)
    (56/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05608926 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069391589 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099282036 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073648092 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120112693 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137459207 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099336748 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.250891674 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066567474 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076305743 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104073569 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091420577 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076660535 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070982744 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069445928 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119131606 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215036317 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068821905 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123334215 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076344413 seconds)
    (76/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133574596 seconds)
    (77/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054693427 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158074906 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076939396 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.246569649 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052821043 seconds)
    (82/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.239393678 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.259149619 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.249933564 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072657972 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.117523861 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.254651804 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.142013808 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097443878 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152442049 seconds)
    (91/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098743852 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.070711061 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.25864649 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056767874 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092047403 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175338886 seconds)
    (97/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120262168 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131127996 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074857762 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056247879 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05418658 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.129334542 seconds)
    (103/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062356085 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199610672 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077170692 seconds)
    (106/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.075162215 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073052814 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120428104 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054672454 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073278059 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12000719 seconds)
    (112/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073938314 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112891176 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067567572 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.177175491 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09398443 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105140738 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054762329 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096845191 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05354639 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119874838 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111697446 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070782417 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194723855 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170229381 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.239625491 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071820372 seconds)
    (128/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056035625 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.121339938 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069445091 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218312114 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122133345 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071940455 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.162740176 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077874505 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091507143 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077644813 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12025387 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07017244 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074545451 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100289705 seconds)
    (142/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106546401 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09337544 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178582699 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.078754432 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078481542 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05447536 seconds)
    (148/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099937302 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077073241 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100142768 seconds)
    (151/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056324031 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168310621 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135512672 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117378504 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069264206 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099570007 seconds)
    (157/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084019309 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06878842 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091499013 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055650376 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068637019 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099310077 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070232516 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055485654 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169525303 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054406543 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100035341 seconds)
    (168/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.1135409 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.125008213 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0799861 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120251049 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097931934 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077491742 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.221336515 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078203197 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075305146 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214830411 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092247343 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114055061 seconds)
    (180/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17534495 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069619131 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078691731 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068941715 seconds)
    (184/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055807304 seconds)
    (185/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097433826 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077835418 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066908674 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.358857475 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078222045 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091466256 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056210395 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055549945 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093447329 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.130119862 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076560233 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078031065 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055235317 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077793525 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076625403 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054141548 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055628865 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087913075 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148065421 seconds)
    (204/309) benchmarking ("sort", Float32, false)...
    done (took 0.150800437 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065470372 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102519666 seconds)
    (207/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072198869 seconds)
    (208/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099140864 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.221374225 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093721224 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069237687 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055439786 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092879855 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07889044 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076176277 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078400727 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113843502 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09274327 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112657815 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106812469 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.237715367 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053469205 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07817408 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09715069 seconds)
    (225/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081199037 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.139564948 seconds)
    (227/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070314026 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068484957 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079119355 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068125391 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067459948 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112136386 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069283566 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135828019 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089867534 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163045528 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054887721 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.257313289 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05228726 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091742563 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063746032 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05536923 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097940826 seconds)
    (244/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064555841 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054327178 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091348759 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144244851 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099942243 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056739175 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055146182 seconds)
    (251/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108616105 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070610304 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055437976 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097890349 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076074573 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090186984 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106651353 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055536065 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092553443 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05753401 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075155403 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150584604 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077225186 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100024979 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12296862 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114309793 seconds)
    (267/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05579652 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101676685 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07531265 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082108403 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.078574069 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177872532 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140320722 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070983733 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078777471 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05470573 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204360582 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082160807 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067678872 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077944212 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055235564 seconds)
    (282/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116155733 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09355601 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076466435 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079153248 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067983933 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054064305 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089504345 seconds)
    (289/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053822713 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066973449 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076217324 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075707399 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053744484 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.244613212 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055825185 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093458691 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074965297 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0750717 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095620302 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.056045141 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172196611 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075810036 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139020944 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074759228 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054290449 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104781083 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137027032 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076213589 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.162398362 seconds)
  done (took 35.739603631 seconds)
done (took 36.646252791 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08232306 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115191663 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075750039 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11646559 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083879914 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10288426 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076322498 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082435377 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10692591 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085168409 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105363156 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057699294 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100612199 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078614118 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.10183494 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09648247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105243346 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076392669 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076512231 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091669718 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077870036 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091888438 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070782416 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057903338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104441038 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076203511 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075369199 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101516896 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068816274 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09242396 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072912545 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075829507 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091654437 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083449619 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098211831 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076642303 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07848019 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102924675 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070985062 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091002095 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076550472 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068556605 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098941808 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077125921 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074583956 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097577257 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076969675 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105473986 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09569799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094877084 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076901259 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101851488 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080310569 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076115731 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096114203 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077454892 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096992819 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096517308 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100696565 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071988554 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077353818 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101350371 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074228034 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075623107 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097898091 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077243927 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099860242 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073729886 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099024304 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073619907 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066874709 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097125855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071011557 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067018864 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098989348 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078366237 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088006892 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072926 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074104034 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094954052 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067160619 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068822137 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091747989 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073621368 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090757781 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056209799 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071963776 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094895896 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066479154 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075867606 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096103684 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075229173 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071045241 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103050261 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069456012 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097328873 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069750419 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069181358 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094356244 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073426406 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069499619 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095135013 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079126196 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09303144 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075718658 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083106787 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092114295 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075514853 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068317923 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092497985 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08566063 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102545944 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069176478 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094614517 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068661236 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077459913 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091728173 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068933394 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06897722 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092153376 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075314183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06903965 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095321935 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076955504 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105779241 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069291481 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07338191 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094882888 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069837099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074763232 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09227388 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069357208 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070946364 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089608049 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072547398 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091931914 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076901213 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072364322 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10096263 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071490182 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077864167 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097399015 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075474977 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097462043 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069181773 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062693231 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095072695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071448757 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071772459 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092279411 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071010226 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069013115 seconds)
done (took 13.619190888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067532052 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167762264 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126163455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096523621 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112570144 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068339666 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102285527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104798764 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091593313 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127355543 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088659506 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109185114 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114132678 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089230339 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067911438 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073057885 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094602712 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.092071112 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128402537 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113010283 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120364065 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090881095 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.123865917 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.0930497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112265593 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095796094 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092123915 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073503689 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072342 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130007079 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114056792 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073029725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070229678 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127025746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120347267 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087714601 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091314793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088491771 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092332822 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069000415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117841427 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103715612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107810058 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082712882 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096105529 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070533589 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091147008 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08720837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114294256 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081700276 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111532177 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133621542 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070702661 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106377426 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066994737 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110879341 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105447553 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069950161 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068062285 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094159677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069233893 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072899723 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117055155 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11912364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073939448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109332669 seconds)
  done (took 7.380526491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08489361 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117748095 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085006184 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107679219 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067102318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069384428 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094045758 seconds)
  done (took 1.591391201 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06844158 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091110442 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113724959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092741161 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114281147 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092005501 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104372483 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071224149 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111158889 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071271178 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091713531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132635624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072211526 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.100996692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093583484 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093503059 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095213674 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093771783 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073993935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118394563 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073543793 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090290066 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095622675 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070320167 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108849265 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070615665 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14192448 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07567845 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071510643 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098252814 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069369826 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140798515 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106468496 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081623099 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069775806 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108856373 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085996816 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092005542 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086869888 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099051292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085124921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071571826 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095762108 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069178196 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075271934 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10606617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072365882 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095156856 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073999691 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091540956 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094981304 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085436676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094325323 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076867717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071622491 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09992339 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079760654 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09335737 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090805956 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071883129 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111774398 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088079148 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10971274 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087818345 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097085987 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085355704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109034566 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073595579 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072275373 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097923897 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087714859 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092173901 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07216208 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081687929 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095731201 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094551991 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117155009 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070976904 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101667981 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068894657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069458962 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091768965 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091885332 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095621938 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069576437 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073449435 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096358787 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068718674 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069686221 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098223312 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069491776 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071751122 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097373573 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071918833 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096700378 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08796198 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071145818 seconds)
  done (took 9.605008587 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069388214 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069835353 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092869047 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069408646 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069689696 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091999111 seconds)
  done (took 1.44777386 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098767407 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09394036 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082521028 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097077657 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107078855 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105841234 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085021494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106977264 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086685662 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10451603 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083580724 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107146207 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089139846 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097619557 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083605311 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097288564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084162457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101324316 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080829152 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098569985 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089186071 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099449713 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078044987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08691876 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.099060695 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077866452 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105801611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084450325 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.1074891 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086891621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101126249 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075596266 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099778341 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087078068 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110232446 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076335797 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100522623 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076162759 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104643311 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074779524 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110917674 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077476115 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082400636 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099404428 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1091872 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075977303 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076273023 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10520833 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085978508 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099825258 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075763641 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.100238089 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074951493 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098250753 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07620468 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106918357 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073156426 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106553196 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075405947 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074634597 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0972798 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074407344 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108719243 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073770858 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105657709 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073634151 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096061502 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075431733 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098212202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075228418 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073012844 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094682985 seconds)
  done (took 7.523586252 seconds)
done (took 28.513557289 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.64689541 seconds)
  done (took 1.622812339 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.792239658 seconds)
  done (took 1.769627725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.434171153 seconds)
  done (took 15.418402773 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.604531792 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.744806103 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807921491 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135391338 seconds)
  done (took 3.270764311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885498084 seconds)
  done (took 1.890458013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234286687 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223509966 seconds)
  done (took 1.447860396 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73434739 seconds)
  done (took 1.727256572 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.27792141 seconds)
  done (took 2.261196545 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319301553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180694884 seconds)
  done (took 1.494356796 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.528872066 seconds)
  done (took 1.52005531 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.585700473 seconds)
  done (took 7.584528917 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230004047 seconds)
  done (took 1.231422519 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266823344 seconds)
  done (took 1.259797418 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.085334302 seconds)
  done (took 4.080618706 seconds)
done (took 47.562972209 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078772504 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082684285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1050748 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080304305 seconds)
  done (took 1.336545832 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079166018 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075089779 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101951619 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07484426 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102874208 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076346488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102859368 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081054654 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076460815 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102243212 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077123095 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100501224 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079709786 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102345379 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07433487 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079807846 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104832488 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077097726 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104034366 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077070815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074857988 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102698245 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080202464 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099801256 seconds)
  done (took 3.10948832 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078465196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074798639 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102309556 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075693427 seconds)
  done (took 1.332483494 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078916294 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117792153 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093120302 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081955306 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.120529619 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115309268 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074137491 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073723921 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100759746 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081559984 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095814062 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102754493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11606078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08176881 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107106053 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069549928 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072387638 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115637789 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081805066 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105571835 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075077921 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084001106 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096899299 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09432893 seconds)
  done (took 3.243168933 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078531373 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104719222 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102788863 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090680655 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117277044 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067176907 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102766998 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09333881 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151493199 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068694689 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098758959 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069152784 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09955001 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068288953 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080584709 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136425476 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115309178 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09653088 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100837128 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.094626527 seconds)
  done (took 2.948715353 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075325167 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071360221 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090907234 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071669401 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079251068 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100607075 seconds)
  done (took 1.496011027 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068900153 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068749251 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09233086 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068347351 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073591528 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09209453 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067942631 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068497486 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092706954 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068873404 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068674209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090103985 seconds)
  done (took 1.928096672 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.430681965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070086405 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093655947 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067110495 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07293213 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09209616 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082064963 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06929657 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116869186 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068676476 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094110731 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072291733 seconds)
  done (took 2.33891245 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260600445 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080917919 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330351128 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16825752 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139832702 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15398152 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105236618 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13900091 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196120573 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13813088 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199417056 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224587679 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134529747 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166847409 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115477028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108199477 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20926212 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219803156 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105689686 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222912609 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20440596 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15592646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179436289 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127886726 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134731993 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151773501 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07328893 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105734321 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231331462 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161844577 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201202166 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138309223 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097912053 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228566127 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225717679 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197295029 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165238821 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08849404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160710916 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170135881 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255170005 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11405339 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191933805 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133965481 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106131052 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174377628 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148440223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148544827 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138618485 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116345335 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173640379 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236054965 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164733793 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113107411 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137204519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142140997 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145683848 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106673808 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241230717 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220127292 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158355738 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099514584 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101080196 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215557503 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162659799 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145136433 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15624015 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122839277 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171357018 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216683498 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150313133 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176680932 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18525849 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093957908 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151892679 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199551758 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15864986 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206203776 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180320453 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077177455 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157035518 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135068126 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085857127 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172996247 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079838654 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237794982 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129219527 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144411605 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143224126 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140167227 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116135436 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225373174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206082115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109890926 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095066781 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13407518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154355941 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180365221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117717857 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13922294 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150286531 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083325099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168423254 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104309881 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155834052 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081275546 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180043763 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165522664 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080807604 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159880996 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129141605 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128468548 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163734537 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219348549 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091564045 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10929777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199305721 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180426673 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132185359 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174374722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187268493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127419621 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130968467 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205307501 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238654687 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091732568 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220932486 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13434802 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08567284 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114865231 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153507835 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140420758 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148707951 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084849184 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17879607 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203330874 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104398074 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101822742 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192252993 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085485798 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108000881 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139904367 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127409847 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097102357 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126973322 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133910514 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167774831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152667639 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133880318 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151818073 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124791941 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222741322 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114589341 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129520004 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105553077 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096535524 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164098374 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189328768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106067545 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222303944 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155429931 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131052633 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148699807 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084989536 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167330513 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105520942 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072568148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197786877 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1379521 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112080966 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208514188 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131247443 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156626086 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154689361 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161895554 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159383837 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185468578 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107567347 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112998612 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140599396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153962089 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099917715 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096361724 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109025767 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130930327 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097991413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085432061 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171018177 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179125399 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099712017 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139882178 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124252453 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177935094 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102877493 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158433001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147214698 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120712401 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18425928 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209840946 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165920646 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126502449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173851937 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097294345 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076057667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117643444 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154690186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110400384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085619396 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14371611 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202026991 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15632767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16765114 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13751918 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149520381 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1854068 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09720824 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118383004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203812157 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152371853 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155211475 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092203621 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126358757 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174217457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13483078 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239981466 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144553299 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151972429 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205989216 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131314957 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082969205 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135134524 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166461047 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132064892 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205686455 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127576568 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090335151 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137257684 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108305417 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13168051 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156087158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148038471 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162502476 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144201395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185047516 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084180922 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144274192 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151239853 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149319308 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091161355 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147806094 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216099516 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097299337 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14526615 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210234198 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081699533 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151894077 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234647747 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199365462 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086022838 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136821803 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1491648 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156884363 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145808306 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195263611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140889344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167454851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116350414 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115527501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117791105 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103366973 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138369701 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12657253 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143309961 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147162574 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121120419 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160471826 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13903632 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138186703 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14727099 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099810939 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118527851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125851929 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20697288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150141015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230522059 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128071296 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205252782 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19762659 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101836186 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081240494 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106727869 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169198098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111058193 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162350851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123474639 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107327058 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1555002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198578483 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097100372 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095420472 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137987069 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16383898 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138440348 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125556728 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107217947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21995662 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130679778 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081336213 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1531093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132008227 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129589125 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233674696 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063513521 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123830926 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077649403 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107292992 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157827282 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186421766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109510779 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152564571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148160164 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149465388 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158788815 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129831123 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099144481 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140481318 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20686739 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157404255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116956931 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114809033 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18259962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187062288 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134045674 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122933077 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230740618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186129294 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219245172 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116925139 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143989967 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143714063 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111475163 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194995316 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110472847 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197808716 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110501058 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165566386 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133756999 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119821162 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157549435 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123613469 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108001019 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204142407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147978181 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109719376 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081680613 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146322958 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149802677 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13432219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102840576 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171243669 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075451314 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191112392 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200054694 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108822817 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134091966 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097812629 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109715868 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135829902 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131345422 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114213893 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1198207 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228538868 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117712169 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18143532 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197337288 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142590808 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167758407 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126739141 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66362466 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080846002 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212001889 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149709535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235737614 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125129621 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146972598 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139426143 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152186834 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177957196 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136015688 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209969209 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166609151 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153187872 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108611711 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133812093 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141979473 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095627348 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137236812 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143387565 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144062522 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129399812 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148822337 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15510202 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108987939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097022169 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214748325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144923327 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172403413 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195504576 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08681107 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147244424 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195036445 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082756291 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178111432 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191021856 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137079805 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127589157 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082802415 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132287733 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229555632 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075017534 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220160913 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151926535 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139005468 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141637804 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146334979 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187871304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136083457 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154991133 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123173659 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143652642 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146134602 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088167308 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1061143 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13439041 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141060371 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101354164 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129752252 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143544455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183772512 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099046002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098250774 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130297398 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173085807 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235401612 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116621999 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085422401 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171974214 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143944426 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146246247 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154738777 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083554246 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111150147 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084005123 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139373453 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142679139 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145062373 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105075579 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139135424 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22465932 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111940014 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225896018 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123169561 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134351487 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071479 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107797381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123825604 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099520858 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136428979 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126074558 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230351996 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099626072 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119284418 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120565367 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075909657 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110977516 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159956826 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138334906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150148649 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125602798 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065322283 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137609654 seconds)
  done (took 71.524912623 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133647968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104861224 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118000306 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172687228 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145644696 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23789634 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180567562 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222650158 seconds)
  done (took 2.410856436 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070040893 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.1175384 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105996229 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120118583 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092096665 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072195408 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295086987 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110291732 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067668019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116671849 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120362644 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092835703 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468664146 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068310043 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097512619 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085457009 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068672236 seconds)
  done (took 3.257058833 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425252719 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.629660428 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451003022 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074849941 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.854314136 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107509329 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.360087755 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161618561 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09179424 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429975892 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728195133 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147473698 seconds)
  done (took 17.553618491 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077111233 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071297803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112540308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087000741 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102064066 seconds)
  done (took 1.545458869 seconds)
done (took 115.017224287 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082652189 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.357422587 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056617927 seconds)
  done (took 1.544820713 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085541057 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0882983 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115141172 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087145525 seconds)
  done (took 1.481628033 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075644845 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078296502 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113635452 seconds)
  done (took 1.37013202 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285890072 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171454895 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093167874 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083919737 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07897522 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106976343 seconds)
  done (took 1.375980669 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073706241 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076262419 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101114078 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078125302 seconds)
  done (took 1.424861588 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077601048 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05440209 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056579852 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08418215 seconds)
  done (took 1.375149223 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091325393 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107928368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082779859 seconds)
  done (took 1.383687711 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108746514 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115022 seconds)
  done (took 1.327933082 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082375799 seconds)
  done (took 1.181241277 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092337846 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143704183 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.160915509 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140651888 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.170892515 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139880635 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08966927 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118109054 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10738299 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092373864 seconds)
  done (took 2.360567799 seconds)
done (took 16.548693673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079015305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393329023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364418799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119170318 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67378882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358133998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071175773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122961003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126505142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097011538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085379114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679562883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986581813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350729779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985355758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319488747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679292079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06920932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068336388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096031471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019453603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095333572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06911695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069383567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680241092 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373003355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096103746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323872213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068418057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098529623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355791296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096087782 seconds)
  done (took 16.168348804 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071013788 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14513199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078288024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0876215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100654754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072856752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101278229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072459627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155552675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071149786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117022038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071811357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101637014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072668196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091417772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09905606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072466807 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070805306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098119029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069427075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115323726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071100108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070524773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097811491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071192666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109134249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071602853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071412459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098417329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073512822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099246792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07227513 seconds)
  done (took 3.943755193 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11584514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155784002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07849986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133367932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117515279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101271388 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175219826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096979477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160614676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071578685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115294769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070778179 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130108284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071157475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115208004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071140697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070152778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097296375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069556899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096631867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089932261 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071352033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098295756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072176404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098055564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084540432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095398918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071742701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070477675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097902298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072890045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06967149 seconds)
  done (took 4.217434825 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074681672 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076301353 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111977288 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087072126 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099615339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075764147 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074965018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098812223 seconds)
  done (took 1.809366045 seconds)
done (took 27.244793034 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079471852 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071072939 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102098288 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083915487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102746776 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082647095 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071394421 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105569924 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080182614 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074853401 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104683417 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068958234 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099596179 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069702449 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07605962 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0972086 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083436752 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102959481 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083093508 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08314256 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100321991 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081111242 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104084057 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082891102 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109731396 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083352457 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085860469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103858813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073562934 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100105626 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080606751 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087926793 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.100599927 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082730435 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099295644 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072782744 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071177976 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099607572 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083044016 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104425042 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07445029 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105240693 seconds)
  done (took 4.809751933 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08983887 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09033778 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116657052 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.074552225 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102707745 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065244774 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11975543 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075105482 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.096808643 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092063197 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05872225 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.091218295 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075578808 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.064885046 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.09886706 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059725287 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060705377 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.085794173 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062852715 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061003638 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086814282 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056417637 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062072591 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064698406 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.085694837 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064590976 seconds)
  done (took 3.179024705 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076430814 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085733532 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118317569 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13188541 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135376468 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079948134 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10716643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089231237 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116247872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069551146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072722595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.127304536 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090625812 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103695615 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069894982 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117116314 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084997452 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07023002 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104330334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092875932 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114128914 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080058275 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.123326339 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084749397 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068692759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099676457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074870099 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111942732 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076275485 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080856968 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10288343 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073875766 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099750453 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082637575 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074243821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.100256513 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093472825 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106736403 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080207328 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069476678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101257504 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069764779 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116069464 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114506255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098960838 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078186351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07738035 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107350638 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069948324 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114846588 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07951647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069414627 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100364913 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069126797 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068823565 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111705401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072310841 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099128145 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078595682 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071658409 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.11073314 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073804233 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111972363 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070283713 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104395281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069286991 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069398861 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095664075 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093369048 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070029674 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139861025 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071915904 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099613745 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079068876 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104336135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074980923 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068826217 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112618188 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08175416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102921658 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078916791 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072095322 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09981256 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090695233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099966116 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07215599 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070050757 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104165207 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072617288 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097034911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085033222 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070932116 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102199165 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087079739 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097837963 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071679048 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075088401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101484512 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069291194 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109020542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07536455 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069333873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106936277 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068688308 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100056898 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079780161 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073158301 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095929702 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074034492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102740778 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0700904 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069812296 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100701288 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070962452 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078386511 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102971167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073081265 seconds)
  done (took 11.580438391 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192684432 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186075895 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072460345 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180323133 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076890633 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108185975 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182197139 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097726565 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098570293 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070793919 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070175494 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133557978 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096738953 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.139069751 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106485154 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068758963 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.122768177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10511867 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184712359 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178346227 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116999072 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076980477 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070551872 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099693718 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070943627 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108085358 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086997685 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103607195 seconds)
  done (took 4.328884192 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082517563 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.139347294 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074917612 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092558952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121701842 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068940621 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104419325 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070433887 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109645781 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081417023 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097423612 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074396732 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076163923 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10707114 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069686081 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107260614 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079893238 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070568869 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100450141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07426852 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109857974 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081378467 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101029325 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068074166 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075328653 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096807609 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066041545 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115184836 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068858195 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120207508 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06787756 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074674906 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115957929 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069485475 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097927071 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072313302 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071691055 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10148499 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070670717 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068093867 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096345289 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058600667 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067918899 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110328872 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076122523 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089901987 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075363577 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102893296 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075309933 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066900676 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100738059 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07182274 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072147504 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111552037 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073581788 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103195219 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073856487 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067241341 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105958503 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072796505 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065559508 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096433432 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07391693 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096005506 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077261771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07336218 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095855864 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072595842 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074709632 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103763219 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072000877 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099643198 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067457614 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070884449 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102487193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073727407 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073248388 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097009566 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06860538 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069327146 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085788317 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068781363 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05569635 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101154852 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067814497 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096072686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072378363 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074955357 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111176732 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070479343 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103362568 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069568832 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068240903 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100703815 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064681195 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099825592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087376049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113423084 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069060208 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067354894 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114380958 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074343948 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096120857 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05760142 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075457748 seconds)
  done (took 10.006208367 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097468215 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093495434 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098352785 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084796062 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126744276 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093410056 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104879507 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075281444 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07059221 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114934763 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068640026 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106230943 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069633959 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078314445 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127152912 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077688656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099897697 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079321191 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073082256 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139762477 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084770944 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112584509 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082890955 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098221096 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073557447 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080801099 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126247778 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081190156 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108787558 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087320502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082326204 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124303878 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088080022 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101130127 seconds)
  done (took 4.352418717 seconds)
done (took 39.36404845 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208520414 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.389845233 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180422021 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.062984284 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.228655783 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.187804719 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205506294 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.179068902 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.296989686 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.177272048 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446619445 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.804140775 seconds)
done (took 58.494037764 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.188944137 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.324334526 seconds)
    (2/2) benchmarking "String"...
    done (took 1.452953365 seconds)
  done (took 3.906682467 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.543715892 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148698487 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473194499 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.182660096 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.188004859 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.633218673 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.780569587 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.024401274 seconds)
  done (took 27.561329677 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.184379526 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543398649 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.48878371 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.476356744 seconds)
  done (took 17.826927527 seconds)
done (took 59.156131491 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.173664784 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.228161303 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.227677946 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169342122 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293022625 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217117916 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.497848221 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.190141088 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.18554855 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173808329 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.213508578 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194938777 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.193406688 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.509801345 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.186728604 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19990572 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.27392314 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.662847863 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.572687937 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210068818 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.205049534 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260458262 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200353974 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202999152 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.233196088 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.18723631 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192038839 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.203526041 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.382824798 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.192039029 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.272657423 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.676971387 seconds)
  done (took 189.9146072 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.185886113 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.206764918 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.319624114 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.218889549 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.674482119 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.387040479 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32627367 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.731283454 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.206215293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.196810419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.524752844 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.18709506 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.54907956 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158024099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202516311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291401242 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.379357699 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.533283207 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206368449 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.459571666 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21088247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.3931457 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.298039593 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.454261394 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.232051574 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.204644016 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.196307009 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.200424078 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.37671757 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354442553 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.204884549 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.23095603 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.753748789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050747071 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.19045879 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.228882789 seconds)
  done (took 149.658769831 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.453297685 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.187223569 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.187157561 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188992201 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.18761219 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217464207 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189583994 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.71291073 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.715361275 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.692438224 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.638525928 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253005698 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188152419 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.379554571 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187311118 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278150403 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20114165 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193803 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.20380467 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.214100235 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18896983 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188881198 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712861096 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204724671 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.2605307 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199226066 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189355982 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218632182 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582197225 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189288128 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218749277 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.502860565 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233848191 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189105409 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.457913952 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.223653399 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296451714 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190705243 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219940035 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189044595 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.455978984 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19006776 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189124536 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188975159 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.192275444 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743304081 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189668746 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.714992616 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194082552 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.063112506 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190016158 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190163506 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.468774989 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.606253908 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.189704872 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.18957826 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191933033 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191079029 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189820194 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221548925 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.482759339 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.291457059 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19543633 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.192827474 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220889389 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190193904 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.241631234 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19614047 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.630017578 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249553088 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.411488944 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716577864 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195356988 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283078646 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308941063 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191161014 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191604959 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191405258 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191776391 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296370675 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191282166 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190574338 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581984486 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197833263 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193098396 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250194983 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283344501 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191719307 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483411991 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190095736 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191719406 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875115525 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284210423 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193625195 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193201671 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193117027 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.583515593 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719332947 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.361116611 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199011364 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.535025833 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196415797 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.594197481 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697633811 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.742474519 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194138629 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29820256 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196986917 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193792167 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191884603 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222040772 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192981792 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250907531 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197615679 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588261863 seconds)
  done (took 343.273168617 seconds)
done (took 685.432418827 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.867582301 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.854144094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966078411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.856666521 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.834101609 seconds)
  done (took 10.518405139 seconds)
done (took 11.657040479 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374348384 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.377845861 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257045653 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379990705 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226953303 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39281212 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355125903 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21927374 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295270817 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.27358907 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297086818 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246614416 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224170908 seconds)
  done (took 18.063186156 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504671009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532857932 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263928172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502072604 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240026618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503862891 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394760527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399627117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3904111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215171406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209154296 seconds)
  done (took 16.298305691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50868762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507176179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268167665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515317439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242247116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509480918 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392113314 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404824741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391114632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215703359 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208641335 seconds)
  done (took 16.304214217 seconds)
done (took 51.80872239 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203380809 seconds)
  done (took 2.344677537 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236111375 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401436191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.221331 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.208934058 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.205703438 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205942966 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.207140725 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204285861 seconds)
  done (took 11.033049404 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20079366 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.205141048 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203814243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201524738 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.201539872 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201357821 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204794913 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204120877 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204043707 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202246414 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201965973 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202328481 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205153873 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205292279 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204865421 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202302801 seconds)
  done (took 20.393697283 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204085557 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.201731233 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201377212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202844471 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202791314 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201556449 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203292904 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202530004 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202104021 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.202015217 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202222257 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202451359 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202028798 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203878032 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202354636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204087318 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202152807 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202983332 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.20709894 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202384917 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203390703 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202906007 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203475981 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203349332 seconds)
  done (took 30.014060246 seconds)
done (took 64.927567282 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.174018637 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.786132332 seconds)
  done (took 9.104110739 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.205626346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.204572978 seconds)
  done (took 3.557463309 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205120634 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205938727 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205213481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205083581 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205494679 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206122555 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206680472 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.206640921 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.205536683 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206011412 seconds)
  done (took 13.202160245 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206456464 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206760783 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204160933 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206465418 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20622004 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203698909 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207009059 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207116642 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207361862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204996453 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207824056 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20374692 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206376324 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.202617254 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206932673 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203408761 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205233515 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204336364 seconds)
  done (took 22.844608526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206452893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.206307979 seconds)
  done (took 3.556438366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.204338558 seconds)
    (2/7) benchmarking "second"...
    done (took 1.20396731 seconds)
    (3/7) benchmarking "month"...
    done (took 1.203963707 seconds)
    (4/7) benchmarking "year"...
    done (took 1.20391078 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.20476885 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.203583659 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.204808769 seconds)
  done (took 9.573757584 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208117923 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384692479 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.461963015 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.769786843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208204403 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210965662 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064549743 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210779678 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213208823 seconds)
  done (took 13.877472406 seconds)
done (took 76.859226521 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.205259314 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201785453 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.062235724 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219178995 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220408429 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.499112284 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.206050742 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.32459748 seconds)
done (took 37.084125584 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212661609 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.903172275 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.959424019 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.217840317 seconds)
  done (took 11.22640781 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195637242 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.118555634 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207562134 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.206624782 seconds)
  done (took 17.877382825 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.808670384 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540328198 seconds)
  done (took 4.496537199 seconds)
done (took 40.959892582 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209187962 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205771643 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208336902 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20523216 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209221862 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.206218267 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.206727257 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207169593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208361949 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210377021 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.209352778 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.209778906 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209085542 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206320999 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206400009 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208842215 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20709015 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206888959 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.210613543 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207166574 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209993357 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20981293 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206637752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208391366 seconds)
  done (took 30.140562525 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.209502993 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207575103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210443252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209674541 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206977267 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208953814 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210407795 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207175102 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209420543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211023166 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207281302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.207828098 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209397789 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209232245 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2101812 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.20841543 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209338673 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208017553 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211153726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208451066 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212405373 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208883262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.208532916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212303849 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208511463 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209557976 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211607983 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.209317291 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212132198 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209471404 seconds)
  done (took 37.431521764 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.216703451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.218754528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21244141 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213980349 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212902151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210543491 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.211538893 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212866974 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212123738 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.211219441 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212498004 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212652105 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213501673 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.211939131 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211252032 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212413115 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210880542 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211994096 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212255575 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212734415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213558044 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213092562 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21272883 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213239089 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213613388 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213949804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211921277 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212324575 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213755706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213408362 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212800272 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213489809 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.213879078 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213609891 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213241456 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.213313253 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2176733 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220080232 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213258348 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213619023 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214386678 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213382118 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213584376 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21374591 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212883817 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21500372 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213983005 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214774955 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213898146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215049902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213326937 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.211507298 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213991679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21478483 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214184944 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214184582 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213153079 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214029565 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214427302 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214825876 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213357043 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214583449 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215529765 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214662857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.213442811 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.214391152 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214042949 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215172401 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215759267 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213787168 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215261285 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214572636 seconds)
  done (took 88.536458972 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.21467272 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213292391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21279047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211075702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212076107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.21536635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212475924 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215611299 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214244487 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215174442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215833387 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214430523 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212327984 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216042849 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216678559 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213671152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213872252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212198887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215723292 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216291209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215336408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213694314 seconds)
  done (took 27.86620563 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217260605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216572163 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214067874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216456479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214347217 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217304849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216913292 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217110733 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215791699 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214941953 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214986615 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215672477 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214013332 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214468822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214567627 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213499578 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216976112 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21409987 seconds)
  done (took 23.033439939 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214117775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214904502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217536617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213712446 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.214656775 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216231038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215190134 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216388601 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217486834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214141137 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217630251 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216619227 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.21714709 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214273509 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218379846 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214705032 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216959107 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214675292 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218667781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216001599 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213616515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21783425 seconds)
  done (took 27.904409989 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217411193 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217282259 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215370621 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216132916 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216368607 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217923463 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218016568 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.214478994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21667075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217656835 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214948829 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218992296 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.215963937 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216842658 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216260952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215927131 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217669136 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216858113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218143653 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216655956 seconds)
  done (took 25.490977512 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219550943 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219515173 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219706535 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221777022 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221376471 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221376368 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221934942 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220825932 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220366598 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220369548 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220301021 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220820503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220501838 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221820458 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221396606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222305611 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22207722 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222207534 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221825134 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221155964 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22219613 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221648012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223150865 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222959182 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221404012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221747404 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222532529 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224306698 seconds)
  done (took 35.358747336 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221994256 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221693721 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220642069 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220269339 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221097334 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220280694 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220910749 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219490484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222181799 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220038632 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224149641 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222263183 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223468036 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22255026 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222536392 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224894833 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224638866 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221339251 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221943311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221193949 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224324063 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222174051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223283679 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220025362 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220321848 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224336738 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22088452 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221260202 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223539551 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220524223 seconds)
  done (took 37.818842437 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241989912 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242875945 seconds)
  done (took 3.643644839 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220826731 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224075871 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224119429 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221231192 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222745917 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224379 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225789397 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223001404 seconds)
  done (took 10.946222688 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223944928 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226044507 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225354656 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226408744 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225090663 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225783444 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233535405 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239141425 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228001244 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224375909 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230852896 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232087138 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230383405 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226823119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226798849 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229175336 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.223288694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226408055 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.22689432 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224976702 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226486525 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22930693 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22936759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223767628 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226551486 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238354071 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234128247 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225402896 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227948702 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232828805 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226923762 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225107347 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227029672 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229403017 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227367427 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226467364 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23502728 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243044619 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233503241 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227989514 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227829342 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224810765 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229943482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228967157 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23039403 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227795542 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229786856 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224911607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.22549388 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230958389 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229906354 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225989608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224265284 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23290287 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227877838 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235554412 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238122297 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23035778 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.235570668 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236199345 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.243061122 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.235422995 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226691428 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227934598 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232502947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249603234 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236127925 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.240700847 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.221950824 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229300189 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235115488 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243529057 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.236454519 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.223864275 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228623104 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.223240513 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225361994 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224940305 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234324689 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243080441 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.23060832 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225175085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238516755 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251010805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227310067 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231046676 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231263109 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.226124435 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22911504 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241610176 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247495906 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228366732 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229998323 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229186098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233137537 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230430072 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229842758 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232094925 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.224378256 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230681087 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229480422 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234109927 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240782236 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234074726 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233736999 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234269485 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226697279 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228271796 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241768705 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22707596 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229717365 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232520438 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236005648 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230012803 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232167225 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.235783297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230546539 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.231429562 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23011179 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.230113587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240418271 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258810367 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229036358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230921133 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235972813 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239114246 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228045729 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233081138 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233863958 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230863849 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231624368 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234050077 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233956266 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231962137 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230242448 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235899039 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230550213 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231295189 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232560852 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.23517388 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234189023 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.233848112 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233851944 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236681846 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232649587 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235117469 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.241509264 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.235101602 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.233887706 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233720006 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.230346811 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236144251 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234518128 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234033502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.232817384 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231582439 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232992164 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231461817 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234884613 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23478543 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234867334 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234186648 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237373844 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.235359061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24137416 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234160181 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233735018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235253495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.235370718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234680937 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236201386 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.228394587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235809435 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.240758627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.235246253 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235090044 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240730833 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232245453 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235342268 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233418436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239550482 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.242395657 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234701679 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244542141 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234968889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236935957 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236694518 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235563287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237397421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23366897 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239672831 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244964158 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250733898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245266904 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237304728 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239307854 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235373116 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238936236 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243820845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232835167 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236384896 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235209226 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231860671 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234813949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239187045 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23231095 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234723227 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237663489 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236989038 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237231307 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235035979 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238337941 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239155604 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.234567335 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236847876 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2359851 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239000962 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235319911 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235263803 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.234816147 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237399702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239124316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24880959 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235775047 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238336825 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238063078 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237548626 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23497962 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.237830129 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239672086 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23832352 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243803848 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254633576 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239957158 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245023937 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255251884 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237244973 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.24080145 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240038259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.235149055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240259766 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246954936 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.236136243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239354147 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238385122 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238375246 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240526664 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247620735 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237397884 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.237319826 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.237977369 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242111834 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236492139 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240944925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240801072 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.240221657 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242188917 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239415402 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239734986 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240734748 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240088679 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.239144972 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240293076 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242350647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.246518883 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246266548 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242707485 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243058269 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.23990699 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243637881 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.240395455 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240243461 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238386018 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25229508 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.246913774 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24745974 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.242215411 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24067654 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247406886 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240780064 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.244051898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238639022 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240339875 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240529446 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239578973 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237946007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240540441 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.240319225 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242222761 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243317134 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.243964293 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242617189 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239803469 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240552161 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240039773 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241954906 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.241169408 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241391785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.244093138 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242722911 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240588043 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241587797 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249153237 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257503214 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242892461 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240071197 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.241352978 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240474217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242235583 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.241201101 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.244077272 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.24844501 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242828715 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251723085 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24198226 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253125754 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242019345 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244898707 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.249328794 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241027855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.240334427 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.243777036 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.242109447 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250099687 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260852909 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242514678 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.246272129 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243215579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242450912 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.242673897 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242531311 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243314572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242023767 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253218679 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26205917 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24729869 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244973762 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.240841944 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244488922 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246117411 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241962315 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24903566 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.243616585 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.245232085 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242743406 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245802121 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243420293 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24208092 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.244116841 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240438052 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245971342 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253265915 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260343075 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245920537 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.244993673 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256316812 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244526232 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253449188 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.258296962 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.24443341 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244610274 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.243700902 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.24762364 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.242576852 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.245870526 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244954251 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.2453511 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248388079 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24493981 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.248728676 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.243762759 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244367479 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244492465 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255010505 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266548492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24666056 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250630192 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243380686 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246743807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249337683 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243825191 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.243726827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.246383505 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255436732 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252193483 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246116214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246041462 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247612708 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245336443 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247382513 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245565556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246121795 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245449538 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248126212 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245758481 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251541235 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246604812 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245493432 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247146965 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247897455 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258333516 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.2472878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.247952185 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2473249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246611878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.247243006 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246427457 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245886728 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246213361 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247370975 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.247130677 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252970863 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.251245576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249204141 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.247043199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247075189 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247666264 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248599884 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24881983 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24893759 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24674485 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247905615 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248095062 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249112891 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245851759 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.248756213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24795756 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247002494 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250042262 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.253584754 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247514962 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245670781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248758731 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24968195 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246071497 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248944389 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258929971 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251402339 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255987478 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.254597289 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.251987661 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249067389 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250555523 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25520109 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.245841008 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248363296 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248447328 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.249897798 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247139575 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.250002814 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248048421 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257017276 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.249339533 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.24839825 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25846707 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.266068722 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249092625 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250343621 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252851207 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249902912 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246013578 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.250463817 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.247644662 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256730202 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267184987 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249629591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250580573 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.246657245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250796916 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253484834 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248829596 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251553271 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.246891121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25028489 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25102222 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250947673 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.248183489 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.249249062 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.248572704 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.252364605 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.256661628 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.246851322 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253383022 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.250712123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250388906 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251413552 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251387863 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.247679787 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249528537 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.248495226 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251335318 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251335916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254260629 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250324311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.252147031 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251866187 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251510965 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252800729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.259707311 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259091974 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249758174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250672513 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250965067 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254072722 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250497755 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253041485 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251159107 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.254512539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251629926 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252514374 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.253645665 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25410722 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269070005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.269671009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251044513 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.251567159 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258497395 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.252946762 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250696377 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253004418 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.256258795 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254552695 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.259485855 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253155627 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261505543 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269313512 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253327478 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257955715 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255148996 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.261785724 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.256427224 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254055774 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.251962571 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257552022 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269412392 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254177335 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261999767 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28371415 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27181096 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254062983 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.252660346 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252612351 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.252034692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.255901564 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.254096208 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25339203 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253596456 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.25332176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.254846839 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259724763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.252732796 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254692882 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.254961472 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.254388469 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25618968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250169751 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.253137574 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.255571507 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.252955084 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.25351503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254187699 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.255214167 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269188612 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.266154952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.254426284 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.254776198 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.252117383 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260116873 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.257487123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264976338 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.262658047 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.254979743 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.256518516 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.256502379 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255295841 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253275473 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.256019483 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.255994353 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254609143 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252703043 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.268455158 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264658557 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261509914 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.255767657 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2556256 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.256070206 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25764125 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256266978 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257418192 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259481672 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.255619757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258206517 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.256962272 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256307031 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.258459854 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26355221 seconds)
  done (took 742.136114608 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254043196 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253987153 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253788323 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254520012 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25361083 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255164128 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25334603 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255248882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254290196 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25356498 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253996658 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254670369 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255823367 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254776155 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254221683 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255124995 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255106733 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255084362 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2549872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255238075 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255090111 seconds)
  done (took 27.53769704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.258027299 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.255677805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254711203 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257833569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255175581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257379843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256468938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256851805 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258472017 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254495257 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257127665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257203196 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.255829848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.256122309 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254615698 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257774323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258028053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254661066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259256482 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254911991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25785923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255166107 seconds)
  done (took 28.837212197 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.257694538 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258085483 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.258280684 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.256122868 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258061797 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.257541071 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257739376 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.257708019 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259849861 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.259593398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.255990189 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.259843117 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265777006 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.263646646 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.262691709 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.25951753 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.40485566 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260905379 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256550528 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260257861 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.257627112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.266158006 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.258332032 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.257352741 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258234023 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258660332 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.260796652 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.260472686 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.259547732 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.261099631 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.262448237 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.259220328 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.258960752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.259544913 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.259228193 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.260207601 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.264052268 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.260954043 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.257294028 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.260646852 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.26920607 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.28193883 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261359821 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268445428 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.261645269 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263536238 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264051836 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.268119351 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.258094212 seconds)
  done (took 63.124221028 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.262544362 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.261431471 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.259073289 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261086479 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.262219793 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.262286637 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.261789682 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262238455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.259903044 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.259126965 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262266364 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.258819971 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259689979 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261918395 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.262088006 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25988606 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260390971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.259365671 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259342384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258842308 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.260354507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.262990075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.261702488 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.26026905 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262392189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260098634 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261398972 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261615312 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.259498726 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.260478141 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263288475 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26296547 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264281287 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.260324175 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259760467 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.262151023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264098317 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261048559 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263523964 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.260703586 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.263715265 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262916558 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.261138014 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.262764293 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26173381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261361442 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259302434 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260984147 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263361735 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.26376002 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26441315 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.261547808 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264657654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.258828268 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265391841 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.264417565 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.261734906 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262531006 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.263825139 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.262196525 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259519611 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26414979 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260884792 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.263441488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262208374 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.262796606 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.261307572 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.263132528 seconds)
  done (took 86.994832995 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263028766 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260367207 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265934018 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264678184 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265908974 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.265772115 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261490545 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258665847 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260399506 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262862995 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263743675 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264846647 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.261844998 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263420225 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261499851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268146514 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.265152417 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266740079 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266720012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261485184 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266400921 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262971717 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263060876 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262469717 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263399923 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266052195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263804939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264726359 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261172354 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266177327 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261890883 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263638295 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265292559 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264146415 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.264748047 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.265238976 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.262767521 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263618085 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.262473512 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260874408 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263860144 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263361802 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26459303 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265067472 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261045029 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264344126 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263168871 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262311011 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264749885 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26405293 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.268189147 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265471166 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266582564 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26700086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262627618 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263071464 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262991496 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265990762 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266386421 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263997609 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267236964 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266946276 seconds)
  done (took 79.570386536 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265822774 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265308051 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265838343 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264482624 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265377844 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262311136 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26611069 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266752451 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266876215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.267118738 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264672791 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263722843 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263959391 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267934652 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264821915 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264503603 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261552016 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262003432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266389194 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262962625 seconds)
  done (took 26.499344434 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265160304 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268516625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.264833881 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265876218 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268337915 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262568388 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26521428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26446476 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264657287 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265485634 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268243127 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266935631 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264421547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265597605 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266345044 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263551301 seconds)
  done (took 21.445908311 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.264325625 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.266449456 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.265151882 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.269734608 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265444162 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.26343412 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.266529293 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.261678414 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266025199 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269028756 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267100013 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264205782 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265191108 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265597575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.264179578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266424357 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.26411666 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.264772951 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269285419 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.267830704 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268109657 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264858538 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.267158748 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269507082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.263068272 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.264061777 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.263425987 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268157252 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.267374309 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267429864 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.266642789 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.2647586 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.261912352 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264136573 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269991635 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267374676 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.266454134 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.266183265 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269692163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267657242 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268935516 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.265879899 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.267798574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270498159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263582913 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267667593 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265743117 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.266150259 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.266332346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268700356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266403677 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.2722218 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.267163097 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268331681 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.267741481 seconds)
  done (took 70.860923585 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267414392 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273324269 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.263207053 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270155782 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26748348 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.272519611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267329886 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267360637 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267367243 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272356201 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266858278 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26755808 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26781066 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271815571 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268834412 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272362739 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269026128 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271371367 seconds)
  done (took 24.048211984 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269949083 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269160702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.274327477 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268132357 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268872507 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272530576 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272638577 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.273596265 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27215372 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272414827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270295575 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274606534 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274578727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27249045 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272125333 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269839186 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275298966 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273611637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.270724614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272282212 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272013861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276012648 seconds)
  done (took 29.188761459 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.272855914 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.272957442 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.29139506 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.313868531 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.302613247 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.273556415 seconds)
  done (took 8.93453086 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272286094 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275098677 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27239352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275948652 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274422693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271557919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273058685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272906539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272684519 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273190286 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273900536 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275802404 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276332119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272384851 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275796946 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278094452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273165572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271731671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273486727 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275961814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272939464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275180898 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274449158 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273532499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275885561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274798586 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273454284 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271753207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274067317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275809242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272879119 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274313526 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277396287 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271768237 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275949518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277481069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274856488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277428895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277446485 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274649443 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273793519 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27676613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276956419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274565462 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277014649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275516407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274829562 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274740092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275306451 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277527376 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277159499 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273092203 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278225124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276321135 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277633817 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278195431 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276652695 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274302493 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277463482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275328117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274844324 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278131521 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276130639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274424015 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27581338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275668358 seconds)
  done (took 85.362075752 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273852271 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275886022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275161211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276667286 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275151752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275417777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276058738 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276094486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277510291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276033274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279015834 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27458551 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275341185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275946317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275671359 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275624488 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276394234 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276703759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277845372 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279568971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275985677 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276789863 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277267274 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276856516 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278065334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279515806 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276055628 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277617198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277295216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276925984 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275408639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277172089 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277501217 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274745831 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277377904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276732533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273413843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278073788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276306297 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280743322 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277600663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279638391 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276438865 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276149204 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277273517 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276507615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278388151 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27870588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276817943 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277973069 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279920824 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278246066 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279369629 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279211638 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278412701 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278204831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277986665 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278148749 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277418032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280922804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27957916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278907784 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280948592 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27919546 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278383687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279757573 seconds)
  done (took 85.519128548 seconds)
done (took 1729.378021828 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.280928146 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.338435147 seconds)
  done (took 13.835206502 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.441707908 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392966576 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.279833429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307762275 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.278981651 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283019636 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.294476907 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.278320763 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.277630512 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278402593 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.278968633 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463747144 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.331123449 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.277987644 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279128956 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373747331 seconds)
  done (took 42.336863814 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307254012 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.28994383 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.396111954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.303495747 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.307541181 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.466849169 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.337591835 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282833737 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450085127 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.325490248 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.81470425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.30799511 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.284355159 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370326758 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302337046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46368672 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.523048648 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.815055318 seconds)
  done (took 29.563775089 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.72562777 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.295714677 seconds)
  done (took 9.236639451 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.295753445 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.277989222 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.278801078 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.306304965 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.303362383 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.319206814 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.313067086 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.312617894 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.327503561 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.314675139 seconds)
  done (took 64.264121748 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303323663 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.288424796 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283658176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281324847 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.2754838 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.280339383 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279513911 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.279754518 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.851334678 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.407469968 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297729964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.289141235 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.284842289 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.286217433 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284831762 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320513474 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.419501565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.279972025 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.278809263 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291882568 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284204186 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.424287086 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323020711 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.283709148 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409450373 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.876165107 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.289098222 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.292150998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.401587229 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284001396 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.281006545 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.282548852 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.283513364 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.850050639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.769322411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.296402309 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.309416754 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29381753 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.28430183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489457544 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.291306411 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289603114 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.277911314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.770304091 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446000709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.392876196 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.523817362 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.28592713 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.287141264 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347513195 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.288318019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.285234626 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.312330815 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.066405654 seconds)
  done (took 108.65803384 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.325166492 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.767114227 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44882889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.30416033 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067597998 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.977588662 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.282482732 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.559896431 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.285205638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279025598 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.555946044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78324599 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285244821 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.284255456 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.393478603 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.277574292 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278669803 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.034985362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.279567296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.280467522 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.686060112 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293103169 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293367072 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.350253886 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.31595317 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725610567 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.692166515 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.730500743 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.284373075 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.276163849 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.73147162 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.28432791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.326356135 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.278093858 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.54455281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.617839201 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599591941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.284371617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.293109258 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.276775635 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.299378072 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724269586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.608583891 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.277842422 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.280483911 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.730964907 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.276219751 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.281349213 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.280774698 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479322237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.212492452 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.279630738 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.695570996 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.279701489 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.619814422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357817299 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.312801543 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752884613 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276578831 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.362609548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286289149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277984512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.283940997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279405447 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.275438882 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.612947006 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.654284125 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.280161454 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.612837589 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724697753 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.278865308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807146945 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.091321135 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.307107067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.313498884 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277550884 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.837950239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771697855 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309943988 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277590008 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612525887 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.286398626 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.551150911 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.290957118 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293661882 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.705336612 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305925028 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.292477314 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.278030818 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.279003693 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.911326394 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281197597 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.538927117 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.295217109 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.279606575 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.282094988 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.310800817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278731889 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.282743801 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.285059525 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792554035 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.289479729 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.591374353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305133358 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.282588709 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.282529639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.281098874 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.28070765 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494936121 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.72290465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.286380159 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.280362035 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.27925545 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.306183719 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.55249356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.286284835 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587668485 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285543483 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279460321 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.287078661 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.005905573 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289836093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278954334 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.301324536 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.124014805 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.491917303 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305376865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.285405518 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280935996 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299742442 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.658642828 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284702696 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.310996208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.278799032 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976879739 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310940387 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.307958906 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875349663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.295155372 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281166787 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.286620049 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28381804 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589392666 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.554410129 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.587172738 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299263588 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.285772447 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957263412 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306029886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427581365 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298014091 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286616795 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.4800445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.527752799 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282993336 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.849797247 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.279516141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491010634 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.285056537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59656576 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767196591 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.287740015 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288583181 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97639589 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.955606747 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.902701902 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.284316428 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.552209026 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.278691811 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.737062229 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.280198843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28179535 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.710828949 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.286685375 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284388162 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.282197373 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.28036998 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.345304834 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.452400853 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.632342512 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.290479999 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.73226784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288351128 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286346472 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290315329 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.288646232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.633299849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32997394 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.287616991 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.31482138 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.281319491 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286208289 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.750748549 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.178405449 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.289179419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437769278 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903895391 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.2893707 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.285854926 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.871691732 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.572323632 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780587537 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.294803939 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.589444328 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.287825055 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.319553975 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000271038 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329695097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787694669 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284493499 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.284272277 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864478186 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.283545091 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.343567282 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.279336558 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.279604312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805525221 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.285763664 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.286294564 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.677605713 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280208038 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530664456 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.287158363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.331870009 seconds)
  done (took 1098.658391657 seconds)
done (took 1367.767990975 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.284753857 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286509143 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.273064571 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.286475574 seconds)
  done (took 26.346882925 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300213617 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.290476363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.290464871 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.290112732 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.29025764 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.291510645 seconds)
  done (took 8.978806259 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.386293826 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.284835334 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.289752532 seconds)
  done (took 19.186069836 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.501177505 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.517086635 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.649699557 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.399752636 seconds)
  done (took 10.295679231 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.294467807 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.293013616 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.293127895 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.297604 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.294236686 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.298395957 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.290820746 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.2938734 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.294907273 seconds)
  done (took 12.876490686 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.133911642 seconds)
done (took 84.037095733 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.678515394 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.498622222 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.117063717 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.820021283 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.630730385 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.230829961 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.359566323 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.784098294 seconds)
    (9/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.517585521 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.734060744 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.293056808 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.698785189 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.535246317 seconds)
    (14/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.328027887 seconds)
    (15/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.652418096 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.2990017 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.886644331 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.327048504 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.041737591 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.674789248 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.325137055 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315189286 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.41464943 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.658175602 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.351811648 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.123838774 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.924362066 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.35584971 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.667798704 seconds)
    (30/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.469496341 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.288008762 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.38293788 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.478523314 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.376987386 seconds)
    (35/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313405547 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.301325299 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.299030845 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.609552152 seconds)
    (39/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.027835265 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.929742865 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.302342225 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.292735926 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.7437123 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.425045589 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 4.373717119 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.391498612 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.311295643 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.867329767 seconds)
    (49/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.872599088 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.277191421 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.278285512 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.896545598 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.276691235 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.786954872 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.289372559 seconds)
    (56/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.910765317 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.69668699 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.415368356 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.349574985 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.935828738 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.29021254 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.555281218 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.486594455 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.274003452 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.072178818 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.319326134 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.653819046 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.130834803 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344314614 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.295706695 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.705773257 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.284450982 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.916552805 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220279943 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.318631258 seconds)
    (76/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.610416975 seconds)
    (77/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.851110406 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.290349835 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.378369431 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.765612801 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.447831748 seconds)
    (82/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.585778101 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.144748334 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.277759111 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.291392933 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.763815336 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.401556913 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.380799314 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.743437884 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.290586347 seconds)
    (91/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.498846478 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.49272788 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.028420071 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.167290515 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.148703625 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.290349056 seconds)
    (97/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.323740034 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.583492813 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.057624588 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.29585227 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.307063499 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.642081721 seconds)
    (103/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.646186507 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.294130833 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.404032928 seconds)
    (106/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.892003188 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42069633 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.338889122 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.605813187 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.657820411 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.846629404 seconds)
    (112/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.307934741 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.399663423 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.715965226 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.326170773 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.338839576 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.664500829 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.297260911 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.509409619 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.670216511 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.301838132 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.594708017 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36031646 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.343755127 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.306659522 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430482822 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.353286967 seconds)
    (128/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.584644977 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.644012038 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.939838925 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.029128718 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.357313882 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.39999302 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.804621688 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.319473213 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201526984 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.576889482 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.78004035 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.295938158 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.07818794 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.55949046 seconds)
    (142/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.28011534 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.360046456 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.29884084 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.155436454 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.396901783 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.852915394 seconds)
    (148/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.334310193 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.400176904 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.376991427 seconds)
    (151/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.913383198 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.522995611 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.414655404 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.642421833 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072791761 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.322890534 seconds)
    (157/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.006887079 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.242410932 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.101867864 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.639169334 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.942666425 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.316909415 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.176094001 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.876864649 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.393907017 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.675641008 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.322700713 seconds)
    (168/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.638478281 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.409227503 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.297705843 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.145082605 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.168551625 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.788008537 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.597971314 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.612124208 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.314390115 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 6.297835844 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.722338476 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115665379 seconds)
    (180/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.29165796 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.182658647 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.290560911 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.333086763 seconds)
    (184/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.196599447 seconds)
    (185/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.419374228 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.397479948 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.94762401 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.688948774 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.321102071 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.784430457 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.14447113 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.710928324 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.45543225 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.629597457 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.327826782 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.684149061 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.571056218 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.341041796 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.352903079 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.485139979 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.317838237 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.356551056 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.410313777 seconds)
    (204/309) benchmarking ("sort", Float32, false)...
    done (took 5.314710934 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.342123212 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.36462927 seconds)
    (207/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.385071608 seconds)
    (208/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.325210318 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.869622994 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.299455387 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.571793205 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.540703029 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.338158689 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.84283623 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.51183122 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.702148151 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.290371867 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.302183839 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.292039781 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.684730715 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.873914666 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.623928275 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.327947403 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.32318468 seconds)
    (225/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.421737744 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.115319237 seconds)
    (227/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.315823977 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.665007654 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.282905835 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.340972124 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.644449609 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.328335949 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.279860322 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.286457691 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.336458435 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.300476136 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.294736573 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.139319172 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.611604949 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.422567063 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.683784945 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.18826342 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.392889001 seconds)
    (244/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.756270253 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.714328067 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.306147715 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.301970972 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.325284141 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.285713797 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.892458895 seconds)
    (251/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.21014488 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.385349219 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.731506004 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.337349888 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.328087239 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.506125159 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.382425119 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.529094894 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.300285134 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.30890742 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.345834449 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.324033141 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.688120464 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.310670937 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.297584303 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.213634196 seconds)
    (267/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.903855338 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.409700687 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.384531149 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.480474298 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.671389413 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.300758587 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.379653115 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.350184141 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.908475729 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.66844106 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.302000663 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.488095684 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417721449 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.611771938 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.584553375 seconds)
    (282/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404707317 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.300335342 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.43438328 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.773662643 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.382537415 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.446206525 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.428476898 seconds)
    (289/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.91027267 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.405316841 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058617285 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.453693572 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054369068 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.877438336 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.194951103 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.086250153 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.35034593 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.325980612 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.30811319 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.931058675 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.305627264 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326459389 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.42065256 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.325257097 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.601882494 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.015895391 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.290809172 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.408835022 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.300613858 seconds)
  done (took 912.924664061 seconds)
done (took 914.149477888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.332749198 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329235508 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.314425959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.33267737 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.423016315 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.339030659 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.321530386 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.313797831 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.356198802 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.359222809 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.312227005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.341772038 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.311598581 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.310379101 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.313311926 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326212538 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330960691 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.313947872 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.32860048 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.325668005 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.32818744 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.312392306 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.359821087 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.339808406 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.311152734 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.315874655 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.31471061 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.328539979 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.422916238 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.313854616 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.316696956 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.321281317 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.330763442 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.313257645 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.307824696 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.32924859 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.329056261 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.325635242 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.316861704 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.342476975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.721871126 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.31679903 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.314240677 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.314652719 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.313517696 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.321286664 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.310975647 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.319900625 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326800804 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.327834375 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.666166121 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.324993774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.31607158 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.316395651 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.324833795 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.31226612 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.317990439 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327885823 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.333544795 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330377669 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.327503633 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.318898051 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.316114031 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.332541616 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.322969555 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.708905776 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.309130247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.321823146 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.736533588 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.319758787 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.781597783 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324436846 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.314737495 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.324957779 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.348630691 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.336867997 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.314453976 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.312429066 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.321355004 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.314677037 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.324240399 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326378881 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320870613 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.313351761 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324011574 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.34225734 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.323228435 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.316278177 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.323983893 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.331146351 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.322565344 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.328393349 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321692633 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.310724175 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.324299425 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.321075993 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.315720402 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.317477766 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.319219338 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.327533347 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.732101574 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33407048 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.310833453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.313592588 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.313625075 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.329328036 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.738333219 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.319531024 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.338515056 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.363402611 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.318074145 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.328636205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.318869827 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328990221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.326688621 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.320208667 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.31208997 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.33370299 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.762282231 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.332538181 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.317927565 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.313808265 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328102334 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.316574418 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.313967875 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.343511322 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.318654929 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.330516618 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.441788864 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.327011994 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.348740321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.315105132 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.320696832 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.34823681 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328407314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.348234038 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.321863671 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33377452 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.333470195 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.315694746 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.328730516 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.328215616 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.319364731 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.324175118 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.310998867 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.347275719 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327209639 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331941098 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.339186877 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.438006695 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.313427485 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.335791309 seconds)
done (took 222.276237632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.375283636 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.313012706 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.422308908 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.313942686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.40876358 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4144056 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.31203056 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.313138052 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.309110108 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.687951201 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.312427276 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.315608889 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.307307652 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319153397 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.399107164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.316660388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.312535617 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.681201372 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.317079117 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.391179336 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.317185834 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.310739348 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.315803028 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.695029681 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.30863667 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.317528468 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.386310386 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.318854641 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.660814608 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.308262553 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.308483991 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.658082302 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405875184 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.333363256 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.325460897 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.320485692 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.414176856 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.339577771 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.398088261 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.395054028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.420594787 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.355032868 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.318720634 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.305157416 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.319240157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.321474975 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.311751424 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.34250897 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.311304696 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325389991 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.67910579 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.330399802 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.315567162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.314435261 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.314136138 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.348789437 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.319936303 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.316074993 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.410985926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.318893044 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.380899179 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.695011296 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.700932096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.32195692 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.314474584 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.316632159 seconds)
  done (took 147.35233455 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.390866462 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.392196445 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.431628903 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318485103 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.368997513 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.433112995 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.323397231 seconds)
  done (took 10.909290983 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.322480647 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.31928372 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366452803 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370038835 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.321195522 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.468778691 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3229993 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.327537813 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.314219201 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.375610627 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.323881194 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.317726187 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.328411685 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.311748194 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3719221 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.332586538 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.436868144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.31785051 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.318618009 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478747586 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319294789 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.327433564 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.368575819 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.337052963 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.323867489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.326199751 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.889573809 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321017884 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318850358 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.319956385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314681765 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.360004002 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321652998 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.316441301 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324015246 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435554512 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.321990319 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319143661 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.323321116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.318343862 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.321843084 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.320019623 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.323612951 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.321023994 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.321498516 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.345920572 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.323627624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.319387675 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32177628 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322390579 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.372406784 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323618527 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.323557655 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.322507975 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.374428157 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326470193 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324228978 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327034235 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325633446 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320895914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.481560912 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375184263 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.322463244 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372385707 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32537309 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325512234 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.32319474 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.323572323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379838542 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327156892 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373048062 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.322836904 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.478886375 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.352109361 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330433952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.326311568 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.325811576 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324181202 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.327846633 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.332762464 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.325759776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.328737562 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.333622373 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325329028 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324279794 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425512013 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438723682 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.319471144 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.338342282 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.328890034 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.32424577 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.374626503 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.326493907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.325041858 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376652741 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.442014791 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.377195013 seconds)
  done (took 152.172574708 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.331845372 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.33544225 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.32464309 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.340315917 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.325147701 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.328352626 seconds)
  done (took 9.243729264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.325922726 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.324348026 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.329507416 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.325660953 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.322748538 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332449091 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324528959 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327527802 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.333604461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.330957808 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.330267596 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.328108959 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.328468978 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.327946394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.331316631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.329341393 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.325623793 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.323752368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.326577936 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.324708653 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.424248641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.326672651 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332044553 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.331081491 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.331766153 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.328989827 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.336608319 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.326572126 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.329154564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.331898117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.330702401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332192306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.328534418 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337277281 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.331053288 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.332817223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333949834 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332532462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32998358 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.330703018 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.333881205 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333120625 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.332035688 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.332938733 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.333642782 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.338278391 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.334940924 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340703709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.331108744 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.335513067 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335495776 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.334513605 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.334766593 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335688326 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.336886493 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337292805 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.338094554 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.330859186 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.333615392 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.33149752 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.335579918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.331330618 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336585725 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.333360448 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.343534483 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.336036383 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.333410296 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337621461 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33361826 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.334154287 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.336002329 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.330929399 seconds)
  done (took 98.242296343 seconds)
done (took 419.162853138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.66097959 seconds)
  done (took 7.920135291 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.427356494 seconds)
  done (took 7.690537814 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.393618984 seconds)
  done (took 21.665987639 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.400589154 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.377853486 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.333607021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.328149107 seconds)
  done (took 26.706706674 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.946488129 seconds)
  done (took 8.210810732 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.33953503 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.325278749 seconds)
  done (took 13.931208786 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.339760121 seconds)
  done (took 7.604749269 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.659053558 seconds)
  done (took 7.930227353 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.35326556 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.330855013 seconds)
  done (took 14.216606818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.31238769 seconds)
  done (took 7.577883537 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.254640261 seconds)
  done (took 8.520791097 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.340040623 seconds)
  done (took 7.606296517 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.380205399 seconds)
  done (took 7.645291993 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.204422674 seconds)
  done (took 9.469755929 seconds)
done (took 157.961229997 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.326236298 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.330303415 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.329322837 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.330602333 seconds)
  done (took 26.582619765 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.368360259 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.36958685 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.369947577 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.378824611 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.371260529 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.369702658 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.361916441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.362379053 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.379653865 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.373869661 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.370599209 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.370246688 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.368947494 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.362744349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.368563794 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.372173496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.37901233 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.370775806 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36261013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.371966478 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.338017239 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.378601475 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.373083819 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.336845292 seconds)
  done (took 34.096223451 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.539661012 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.412538244 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489670555 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.387907385 seconds)
  done (took 7.09677482 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.389586363 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.390280075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.403011895 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.443055362 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.466365932 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.400454386 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363766286 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.356202859 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.337522305 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.392803824 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.466320986 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.405610132 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.489719877 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.336674708 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.525730059 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337180474 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.335396354 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.389074186 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.441431893 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.467632596 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.337722854 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.389654628 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.39493563 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.405011796 seconds)
  done (took 34.931886527 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.336155306 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.343800681 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.342725975 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.336495038 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.3372528 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.336441797 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.343611502 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.338436991 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.358400569 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.33801446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.336812831 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.336843632 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.336300805 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.336485737 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.334355069 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.34880026 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.350009599 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.337040747 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.341591314 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.345012567 seconds)
  done (took 28.083910446 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.329330338 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.233291886 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683407978 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.585973695 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.332442491 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.329295128 seconds)
  done (took 28.762403587 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.402241589 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.537988125 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340548341 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.693204177 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.780230802 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338750022 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.337523865 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.576190498 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88114166 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.882252421 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.394264434 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.408519985 seconds)
  done (took 19.84238019 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.342380236 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.333637351 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.345069167 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.349042393 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.393954558 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.34022399 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.345919254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.33370395 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.396417457 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.397480991 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344984411 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.392735398 seconds)
  done (took 37.585834639 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422320747 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.565594184 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.301902943 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203951714 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.744152816 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547450392 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.208409346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.765566257 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.337408402 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605999893 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334001294 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426110081 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591131149 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332179416 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337420246 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.354790816 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565842142 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841397535 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336850414 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.300835458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363235115 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345059826 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.487352917 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.365711529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547814737 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474393812 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.59201818 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335495609 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612710432 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351435623 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345533603 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337587674 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607783097 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995968411 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423340748 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344771562 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19124673 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.048928733 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.331472542 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.398933941 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255484911 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339781319 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347711071 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333451619 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.269913745 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338641019 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773705908 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.341949961 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.045993514 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338280684 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348861434 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43206509 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.340968993 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.157638081 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41687644 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336593911 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.336793277 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342339244 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906965167 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.847954713 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348105101 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.274858862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.807782019 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.39637769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970783216 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.439943513 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.342778139 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337297567 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277872681 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.37384711 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358938442 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475873424 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.357801967 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996981706 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082474398 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350245871 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276152358 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911127711 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354844787 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.272471016 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567315369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330591751 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279069843 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.299129438 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274111052 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067649055 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350130572 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.783295888 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347234181 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768719444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.349056886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356928301 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363081749 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562397479 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.225687765 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342440134 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.30444499 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476089221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363365422 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.770022095 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28024438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.341087894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595834162 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.54936653 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353423883 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.835625181 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541118962 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339294777 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.358045783 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34690546 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.351984059 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.917699591 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354732449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874056576 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355550556 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338452044 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108841254 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352202594 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.443508516 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341172651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584419902 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.142153511 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343298552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417815523 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340679233 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337760435 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.382756638 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859257233 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.338065545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.337713124 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348284317 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.353048316 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.346582404 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332790448 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.341535696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346871848 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.3401473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562761639 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340942317 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612959154 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271700065 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476744195 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434508448 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.563439469 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.554305843 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.342200233 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595591267 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347816889 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34024992 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352523521 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355840946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437037928 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358366648 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.350772953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598860623 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.345144608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343388521 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.375669407 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34319706 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347648108 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.346237999 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269094132 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912580313 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315803166 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338995397 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236145536 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.350705977 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404352526 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342730036 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350210019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.150232043 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315491037 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.339229921 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.337796261 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566646544 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3453524 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.352466852 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421775349 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542397469 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916592505 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358779275 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.276567019 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.051928824 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.036029163 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340339768 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270649453 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336497624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348212238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348020572 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.99112261 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916950146 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347663724 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.270876105 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.351260955 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34936163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.346373477 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342472582 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.137847803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815701866 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348021538 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.355994381 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48486589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.349308364 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.277638294 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.344230048 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34649137 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343890214 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343121243 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36855899 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.289923793 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84422736 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598692768 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.07978473 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359054306 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.454324952 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.37221442 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.34750209 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333501766 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362617399 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.342179011 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36875246 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.353499607 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.341959816 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024559888 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910211481 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13804906 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872434255 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280516662 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.346706489 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346472366 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782723327 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278337643 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910545083 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530718063 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783076238 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329774515 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538728545 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.567590302 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112199151 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35722583 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573489312 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276225715 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.345387633 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361207263 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557302115 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380371326 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346091139 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.282201911 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.627200338 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580611218 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283958358 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42512517 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779273668 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33359467 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364920605 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.342845033 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.721086229 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521776966 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.053629928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.547753752 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34285305 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376298104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832471051 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343289499 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569554724 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985325305 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351927353 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.548881703 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287271851 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353078755 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350908959 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.346340948 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.653272651 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344911712 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.602721171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353497259 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280452234 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348234228 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882046534 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.206837034 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.353144555 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344380704 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107550236 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35429145 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626777213 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.362651699 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.135273578 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349438906 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280362663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278077327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.039010786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342932932 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313289798 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849859181 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.770173457 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.409001308 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373681219 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196879727 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602971795 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36040393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920900121 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571828325 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.280592944 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366864936 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.448089451 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34256786 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.335411638 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348983769 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580314786 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268580377 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572968593 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.367274616 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.255307249 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.345471122 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564728603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34866822 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360927213 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589335032 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.058061821 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.358566406 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133446068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371328515 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360139938 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.268911328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.816207314 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354590458 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430030821 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35969195 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.361675348 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.358656652 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522549603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360511371 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348769392 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.362932964 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444241293 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.904849776 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.145008518 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.355995909 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949422683 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123612051 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937351314 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365620154 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350269816 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358248972 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289767122 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496850806 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574570438 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621481043 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472155455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.896044959 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376808541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361687165 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355372679 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566671426 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621239312 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244909728 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362448998 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367007357 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.351050744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361967932 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.563441234 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858019838 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925671059 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476422172 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352892516 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784016449 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624353027 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35093307 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35184675 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946522209 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.373878285 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.731106299 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.360365514 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350812759 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50189993 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360281927 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014597298 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359683759 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.510778333 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.122476505 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.318515494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607721717 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.850315795 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.366397393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935235457 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058790136 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620321727 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418933315 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361555667 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.467210907 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499664772 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.350836859 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355553623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353885916 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201190666 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.05693204 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.360974994 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940299411 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621315017 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.350633323 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.35158333 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377290246 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.359459207 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.577522977 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096718798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581993761 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363512381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357744934 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171800595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935392977 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365668884 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293579622 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.357409575 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591155379 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58847827 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373389289 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.806911237 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.064744498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935534092 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.331487691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37523515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364714164 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06290495 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944109204 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.153409962 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866870467 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918343788 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353470671 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64525955 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.359281258 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356935005 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63078711 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.355701979 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356746169 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367492812 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.938227178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131187104 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.375887089 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.342265334 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.293846307 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700427859 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044203662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302013351 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355847203 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.539899338 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359601908 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476583359 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365501368 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.356496633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369623492 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.092688652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634426021 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.359550559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.348677285 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.345833468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360149128 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366280259 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596821715 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361276737 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.020459798 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.707992421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611034304 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355085708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.342778458 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.358990807 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355780995 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.385279864 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.586333032 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.000918883 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929213343 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.359424381 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.370165884 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361433008 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.574926952 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570112989 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360977194 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370247256 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360869322 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3754043 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.261224114 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.864274523 seconds)
  done (took 1602.964501218 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35459792 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.374298513 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.366942739 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.412422333 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.384939982 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.44955452 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.372678289 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447582333 seconds)
  done (took 52.456053405 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.357514323 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.615359299 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.384529492 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.372191943 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.36895119 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.359462745 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.806479768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.370172602 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.36518912 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.366381977 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.363740159 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.369556891 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.993681215 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.369003222 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.365195589 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.349494164 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.365926056 seconds)
  done (took 65.841482588 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.3698335 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.36149556 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.45429726 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.359303547 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.559689757 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.36288731 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.45444845 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.398275025 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.355077949 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.716247771 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.0152522 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.36471185 seconds)
  done (took 80.067989248 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.366400357 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.366933773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.366629485 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.366111295 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.366177346 seconds)
  done (took 8.129481042 seconds)
done (took 2027.709259418 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.611595261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.060695175 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.027777974 seconds)
  done (took 5.384097712 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.500852296 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.548858833 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.695508183 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712578028 seconds)
  done (took 7.748509236 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.633945566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.720473683 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.545877402 seconds)
  done (took 6.184347403 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.763084125 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.356273433 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.479076154 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.35129284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.354061665 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.358205407 seconds)
  done (took 20.348671813 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.363260442 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.359874163 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.35783441 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363118038 seconds)
  done (took 6.738890418 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.342139831 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.107157826 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.347309145 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.363814594 seconds)
  done (took 18.445462208 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.108495246 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125240056 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.106860407 seconds)
  done (took 7.629532447 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.369084512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.198351469 seconds)
  done (took 9.863428589 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.658703586 seconds)
  done (took 2.949241744 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.500825014 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.631441646 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.397563598 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.344324023 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.426210991 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.230116193 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.017245972 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.58710205 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.32557286 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.555285247 seconds)
  done (took 28.309823793 seconds)
done (took 127.108569291 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.143171987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.37806428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.558410835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.115840621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.589868497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.563021662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.977202438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.080580221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.798993838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.614266097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.113175684 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.58775239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.713983876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374121893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.709992524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37371688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.583127846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.185695644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.842876097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.002494508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.981048753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.751617109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.945104038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.772164551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.586694389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.506545221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.327820786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.374037106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.015885608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.36982824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.516085114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.184078811 seconds)
  done (took 190.930720434 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.357491512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363749404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.372017043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.359972084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.358617312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.357461372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359285281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.357079807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351650598 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.359323242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357717491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.357880589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.356106154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367857228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.366235638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361334026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.366896027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.363528065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.356453108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356802552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354624541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.368034669 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366275694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.368735651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.366387352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361603304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.35647623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354631189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.360359799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.355913531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.361221077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.359888347 seconds)
  done (took 204.834460674 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.356950237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.355093851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.35846324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36194109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.364156832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361690736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.360802601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365697986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.359115211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.356792562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.361466039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.356528995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.359216068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.371376179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.35904285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37307959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356631703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.358132299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361143847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.361971748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.358740904 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.365329772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.357675985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.358410182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367782641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.360816036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.362737438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.355487731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359185498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.358779687 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375991127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.358381787 seconds)
  done (took 204.855624185 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.559442089 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.369606913 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.369846647 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.307924896 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.371615991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370075324 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.370695362 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.561123764 seconds)
  done (took 14.578717065 seconds)
done (took 616.49140412 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.739914626 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.459347836 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.569974368 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.389640629 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.193196199 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394277227 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391322356 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.561256777 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.308358084 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.563643681 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.619255119 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.383775694 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.751346578 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.38505948 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.642906317 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486712135 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.231862461 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.341782747 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.70549781 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.9728306 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.643345534 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.880589318 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.561894404 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.301647301 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.7589707 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.843542028 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.087555024 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.259441131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389302803 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.710693249 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.066468928 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.326112798 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.450661487 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.430518963 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.48297493 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.474286497 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337339641 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430872037 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.570238211 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.654710949 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.96039797 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.119470303 seconds)
  done (took 93.127794214 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.359537429 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.358226687 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.353807247 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.363508799 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.362208678 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.360155862 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.35718667 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360267546 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.356739583 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.359629 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.35755207 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.35798585 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.360653992 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.362173867 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.361159754 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.361106205 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.361520864 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.362080742 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.365106204 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.358638857 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.354741914 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.356700481 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.359987822 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.358123403 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363372664 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.357807262 seconds)
  done (took 36.650101857 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.371860629 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.615365838 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.79279892 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.380307167 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.36976426 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37437851 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.448228574 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.379733294 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.375694227 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.373393221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.529360451 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.382091156 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407775434 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.79624999 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.379051412 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.373846922 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371049745 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374262677 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.621188901 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389188522 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.450803048 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.376425404 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.450856077 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384004681 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.373073731 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37108568 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.37802012 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.873063071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.377602531 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.523940009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.135595884 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.445980266 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.823849357 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.803365229 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138610966 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.376452768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.371907855 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.527089639 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.374994001 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.371980276 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.451392273 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.381384692 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.799066658 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.011352904 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.393338495 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.376069242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.893984312 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.534511316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.619065862 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377317509 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.82243999 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.375199214 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.378020124 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.373056204 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.616224196 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.381500578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.372848825 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.910360746 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.381793626 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.450506746 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.375957216 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.372362062 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.632636809 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375257094 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618783924 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.378254124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.384847425 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.377222554 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.802265153 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382351191 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.021615227 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.391894295 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.374716968 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.528762683 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.622511285 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927750936 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.381467715 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.637455518 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.841596985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.453199787 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.384759953 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.861627273 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.459411033 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.379351596 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.377710144 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.379958542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.376995364 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421514766 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.455702797 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.946374947 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014486818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.92769207 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.458743141 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.389174158 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.376167877 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.912506719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.382433778 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.376839828 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.798479024 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.027975749 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.395842364 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.384653807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.009867179 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.399493493 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.458941431 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.3884112 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.809214451 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380980732 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425143889 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.375058758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.38259689 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382183075 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.461679149 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.381336537 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.378538675 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.000682622 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.555357069 seconds)
  done (took 180.396628757 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.381124715 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.378574035 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.381464105 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.39101497 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.380125804 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385797005 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.383192723 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.379838137 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.387378263 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.381190639 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.382746056 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.379906778 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.382687169 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.395676647 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.390681354 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.38891319 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.005931532 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.381459512 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.381050047 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.3813216 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.176630119 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.383393416 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.382635803 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.378335432 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.383799288 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.383510664 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.387976886 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.383462629 seconds)
  done (took 153.477352199 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.389080003 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.972154712 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.391498467 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.523666331 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.413140609 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388316259 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51999569 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.448549818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.393532056 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.389528091 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.387365654 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.700254391 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.392581618 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.922121582 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.578870443 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.526097424 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.919953627 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.392579004 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.3878298 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.388294127 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.520404586 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.397115326 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.70308227 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.974116605 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.39386218 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973692017 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.38301738 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.388996428 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.390143882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.974780799 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.39223168 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.705476493 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.469764804 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.449493893 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.977336459 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.923031919 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.925830378 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.539604188 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.391431709 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.390446117 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.390874198 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.378014324 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976143054 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393308024 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.391040229 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.972721774 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409903835 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.392164303 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.400725548 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.3915447 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.450514158 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.451590195 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.709913374 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.986044448 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.470720028 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412252229 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.521677092 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.77921543 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.396098025 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.923699805 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.381305973 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.978319393 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.397179387 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.379545778 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.391781258 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.397267729 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.53924578 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.520935691 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.926513012 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394660601 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92810541 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.545110472 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.391816009 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.391238246 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.393892335 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.978045023 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.92715008 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.544770791 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.528187443 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.582219233 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.38538931 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.390764823 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.383497444 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.468568472 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.391774621 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981066894 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.930019634 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39675869 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39611551 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.394144351 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.394613245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.566608853 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.98503395 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.471948273 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.921318099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.72631201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.712525625 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.397658805 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.452984402 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.396061087 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.711247194 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.399060274 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.452169021 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.845664183 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.713427646 seconds)
  done (took 165.992636298 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.642058621 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.557543135 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.484836418 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.509864308 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.958574598 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.968042974 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.584669893 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.517860285 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504850809 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.640380865 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.584794766 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.490343041 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.579172821 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467971505 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.124067098 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.46286547 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.490245597 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.523251657 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.50495699 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445201014 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.047061051 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.681794683 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.567145287 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.520359827 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491805975 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.194611514 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.940529419 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.927797011 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.566191502 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.68562744 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.926099932 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.509927844 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382660461 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.073550224 seconds)
  done (took 66.881688344 seconds)
done (took 697.821111546 seconds)
SAVING RESULT...
DONE!
