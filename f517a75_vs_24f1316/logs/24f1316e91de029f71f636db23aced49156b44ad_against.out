cset: moving following pidspec: 7445
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.250645782 seconds)
loading group "string"... done (took 0.465324589 seconds)
loading group "linalg"... done (took 7.607709917 seconds)
loading group "parallel"... done (took 0.173825538 seconds)
loading group "find"... done (took 1.190014669 seconds)
loading group "tuple"... done (took 2.110719378 seconds)
loading group "dates"... done (took 1.342203689 seconds)
loading group "micro"... done (took 0.248314969 seconds)
loading group "io"... done (took 0.656639694 seconds)
loading group "scalar"... done (took 41.807999839 seconds)
loading group "sparse"... done (took 12.658385806 seconds)
loading group "broadcast"... done (took 1.124672278 seconds)
loading group "union"... done (took 14.154000602 seconds)
loading group "simd"... done (took 4.883296938 seconds)
loading group "random"... done (took 9.996138329 seconds)
loading group "problem"... done (took 1.988476497 seconds)
loading group "array"... done (took 22.472825964 seconds)
loading group "misc"... done (took 1.420032075 seconds)
loading group "sort"... done (took 3.589156248 seconds)
loading group "collection"... done (took 19.458811541 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.514804058 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139513795 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133398509 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14720052 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202762167 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144382721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158104245 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113985676 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.965508245 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181252566 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154752929 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514274597 seconds)
done (took 5.115682749 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223928142 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094148357 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103344987 seconds)
  done (took 0.866282882 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079300364 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144948174 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094679805 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079047538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096789807 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079446428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096282489 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079346081 seconds)
  done (took 1.345101576 seconds)
done (took 3.198645755 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735788062 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280288152 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207276319 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464391672 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195760676 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214040203 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685764042 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346722243 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252450813 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099523283 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144399894 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390238714 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135965468 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688097386 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092478276 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126476862 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180109302 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459183663 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08261842 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109843982 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116712467 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141697596 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132412557 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091184172 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184442823 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083901164 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.200207106 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108878166 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080633918 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289080923 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202033148 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692216428 seconds)
  done (took 10.926388989 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111544758 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13412583 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097615524 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137762291 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134879029 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10098565 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087260077 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098274977 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123733441 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178628763 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114250576 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136248519 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094811993 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083979408 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117100448 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247377648 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123243949 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106490712 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102858318 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105589205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12319416 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112987389 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109266719 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09344926 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16604951 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221948729 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113405496 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128019067 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099747413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115809308 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147269914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144877871 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096087354 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081006744 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172857979 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124641218 seconds)
  done (took 5.17659493 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187905811 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120216344 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168846587 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164445489 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13999389 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159588176 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11245909 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228364051 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.116420903 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165922497 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144206213 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117350293 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080335284 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098434061 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095628323 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671880885 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122823323 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155204476 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114489123 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102560559 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082931226 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129779225 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103366857 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080920724 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099493761 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.107657421 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.321897056 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159962338 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098777446 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144567499 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118982796 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083086024 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133864382 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202063236 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11393983 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134364646 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095824723 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10465929 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178370175 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097354964 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086597119 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098357462 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119648934 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13401586 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117501769 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099544255 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09619166 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203245566 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096907886 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096998062 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.948517619 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18145837 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091353863 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097330723 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323647087 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098281541 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097378254 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077326894 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.260379955 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182550059 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093909197 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080553083 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098138109 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078576872 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099014699 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384197634 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098758966 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.909699274 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088797071 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10693972 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082854012 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097421894 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103500692 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087241684 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1150518 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07952522 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099063055 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078292682 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096758001 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080819856 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107847176 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101602339 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080373139 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094808801 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148233137 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095463488 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09931687 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128726372 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100111437 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078572809 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131026027 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098957731 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080290774 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13291759 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097913652 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091771882 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099763243 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142406122 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097722392 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.158347785 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095740474 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127911953 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098250098 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114213122 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111733903 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098418082 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084558167 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095574983 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076875933 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165494282 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082081292 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098717169 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080876236 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110505336 seconds)
  done (took 22.76174527 seconds)
done (took 39.540816605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331292757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104484933 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103135924 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102517255 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099632546 seconds)
  done (took 1.487466349 seconds)
done (took 2.210562603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286974331 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171769633 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094462594 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166417443 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09309496 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173373022 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15922809 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112675477 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218163394 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07772184 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163802062 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094095668 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076719571 seconds)
  done (took 2.637642889 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09534984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114614371 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082734529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111398761 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077659537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111726429 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092835266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118402854 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10972507 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085709079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094052332 seconds)
  done (took 1.816308127 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093957351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113309255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083260139 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112419084 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078377056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112308786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095023817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118579391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112013656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087563902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095225825 seconds)
  done (took 1.820122409 seconds)
done (took 6.988836347 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090571614 seconds)
  done (took 0.804444508 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.927357597 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.854946616 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113787072 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15030761 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300086936 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193210774 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475190257 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125227271 seconds)
  done (took 11.06355599 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.14580372 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083645916 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102354569 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086685392 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103261463 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103486841 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083421138 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10121475 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085586907 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102172377 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085698344 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104225365 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101274786 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087092772 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10517673 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086737841 seconds)
  done (took 2.35164975 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11914905 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118504003 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106218943 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109026371 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087737288 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105134145 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106884376 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089839177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103546432 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103414201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09197036 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107875791 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10691677 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08117991 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107943411 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109923788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087085128 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108676868 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108969125 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092862155 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108334724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098093887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088833112 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107962347 seconds)
  done (took 3.284768594 seconds)
done (took 18.223114842 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159952695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109743476 seconds)
  done (took 0.995014464 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094743631 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112813112 seconds)
  done (took 0.937654009 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097393899 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095440767 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12139414 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108825623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080686576 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096319323 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118981092 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080453643 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096275229 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080491289 seconds)
  done (took 1.709531961 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082822322 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108943746 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101993491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094417928 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104789397 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095237846 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087385848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099986822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110006162 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07741579 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102863411 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113603185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085587375 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115790541 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104615622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083866781 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101694418 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099170423 seconds)
  done (took 2.504149128 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079156572 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096768443 seconds)
  done (took 0.906929197 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081076913 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094647979 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0824906 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096316657 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093780957 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07671979 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094410886 seconds)
  done (took 1.349841118 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472047088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135756122 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256761075 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085777199 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120691311 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304594489 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098195959 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084593931 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103500655 seconds)
  done (took 2.449065541 seconds)
done (took 11.582862744 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093025061 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117966343 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112144425 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467049702 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107580228 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097258931 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160768345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25206612 seconds)
done (took 2.147574591 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148314402 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325446339 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116494357 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068920713 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097667097 seconds)
  done (took 1.349351926 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079470145 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100557361 seconds)
  done (took 0.914608454 seconds)
done (took 3.155237146 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080049179 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097262815 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.07769477 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131530522 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081523291 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098138986 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079568461 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097420036 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079171888 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097860398 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097908314 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080964492 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099287867 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082350771 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095524141 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078321121 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098732728 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079130613 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096523911 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078922796 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09937447 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081196302 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097256121 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079249007 seconds)
  done (took 2.935354985 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100185064 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098329397 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103253421 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084721451 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102486237 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086961119 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102689653 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09665244 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085594661 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098916216 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100975074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08379621 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099423999 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084130686 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099845299 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101728263 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085626329 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098377071 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083037517 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10138094 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102784938 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080580311 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100572979 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102370119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083903036 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100944038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082696644 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098361912 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102825692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08338221 seconds)
  done (took 3.576457806 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084266741 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094249094 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078469234 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10254347 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077267763 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097536159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077795118 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096095722 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080619983 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096924296 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082065507 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097463506 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079506631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098956403 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081110859 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101320846 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110135379 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079735127 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097240944 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081544183 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101373836 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079404173 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097530661 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07969714 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097097418 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079324476 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097014181 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07962888 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098070275 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079660301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100126497 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08400282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097248539 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086564213 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100741479 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080037797 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101514416 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080147384 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098560205 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097232955 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079127153 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09791287 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079934736 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104822703 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079840034 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099487421 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079777194 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099309349 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080671542 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101356461 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079497766 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09765001 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083319589 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098142708 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102150357 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079337325 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098611463 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079567684 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099532507 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080283497 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09697422 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079756632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099929133 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081152406 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113476908 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08635173 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096957989 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082093082 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098219404 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082488272 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099081089 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11265545 seconds)
  done (took 7.282008765 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082888825 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106554388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081058839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098709082 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078200658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09885008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101681776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080338187 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100034175 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086969042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098178942 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08137303 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099840495 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110023482 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080769338 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100789737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08697758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095478753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080715394 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101634996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081360449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101580994 seconds)
  done (took 2.782364983 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208748349 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10477067 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142457879 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108980854 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084721855 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106386331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102315857 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086311512 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102133639 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083024108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100743481 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102994463 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083169574 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100647986 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101182084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0854883 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103244072 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087996389 seconds)
  done (took 2.64899246 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092894648 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098472411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102796861 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098239856 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099074958 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083862122 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103457367 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107634619 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083570777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098726904 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090897852 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099912198 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100839537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081974697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10159048 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081956029 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101276582 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081496074 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107307536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10369372 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104777725 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0907737 seconds)
  done (took 2.871006381 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097270107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10136759 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117600551 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083708188 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095543078 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080794324 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107274133 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08318353 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109480771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102790609 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083635007 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099652328 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090711412 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101102412 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107135831 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082569933 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102899631 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083773444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102796447 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07920463 seconds)
  done (took 2.669340402 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103402006 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10021175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099438154 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092661995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100508728 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08356979 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109920468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100952746 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08283804 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124860429 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100683457 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083022606 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109245417 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10630524 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099127762 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091870308 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109521808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109658646 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083349111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100417863 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125553653 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083671162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109322142 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208700844 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083572687 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100076539 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10003691 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08890678 seconds)
  done (took 3.650812405 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081712444 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098984358 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078364738 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096935875 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079499194 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096275643 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078367949 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097381332 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081756177 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096955032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082262527 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098642806 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081897486 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098522017 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08507868 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100225378 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083082598 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097097252 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080427676 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09683966 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083491917 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100945484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083114889 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098208234 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082129334 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101078926 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081218145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098827492 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083006704 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098318063 seconds)
  done (took 3.461421169 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090857377 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105619807 seconds)
  done (took 0.959287087 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078416432 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115505309 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078548975 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102792392 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086401867 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09965353 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107712314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086980415 seconds)
  done (took 1.517470993 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096167395 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111338022 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083752782 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112235631 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108803328 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0956607 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161667027 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101359031 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088811296 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100631046 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.097753932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101379434 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108261183 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084673082 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107491942 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090121544 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099538134 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089693875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104662411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100886339 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085150731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112567436 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087023655 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099565947 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085817783 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114351032 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110258189 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084853302 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104898909 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110762237 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090027919 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095178338 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082560055 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100872956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080638989 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10886243 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114431885 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084957858 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108431894 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084512045 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112640349 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095269156 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08697111 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105233046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092834818 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100331102 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083166833 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094665993 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097374157 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084249126 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095051864 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082086832 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09386847 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088923181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103560599 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112734759 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080050573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10113485 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085107158 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102884664 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087721945 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101617254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084247457 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098693506 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106752325 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085793048 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107752188 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077083175 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093080596 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080328722 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108708707 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123005128 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090285849 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101414158 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083143731 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097336036 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102823053 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084483836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107194001 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089731039 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100082566 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106919962 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09049337 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09946252 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084465313 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10780068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098671459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084866114 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09758933 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096702047 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099063589 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079842439 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097162315 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108450311 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085369784 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100545537 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081145621 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110116382 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077285331 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101838011 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083081245 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101096087 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108685835 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087813026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106526712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108296777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089156666 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100873861 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085672956 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097217158 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083328667 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10281668 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088613478 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093603091 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102848525 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084105962 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101133754 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089886122 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09808154 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082253042 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10750013 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106094526 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080763706 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096828809 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085753843 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099665435 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086384452 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107471248 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098197752 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077694738 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095646763 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086512802 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100888405 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086912529 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105755287 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102409162 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076656297 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098109676 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087472368 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108102905 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10080056 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083457836 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105141951 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082926109 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099175442 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088302371 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102047495 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081720203 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104817606 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101866234 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077594559 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105084925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085364284 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099370429 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085742709 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103503313 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102741594 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083950951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099230948 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087853979 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101579749 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08096906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099968414 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081076194 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108879875 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102028538 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07815901 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097189913 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090598671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098445514 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082229764 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099312078 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104456716 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08402766 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102145676 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085832535 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104760325 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098132372 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109156107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105859519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091029411 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114178734 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084723051 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105465376 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103640057 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084992419 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105199549 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093101431 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1098991 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109736982 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086932511 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100369843 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090063725 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11010221 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083919377 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099236098 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083988813 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10783741 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11085014 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089177444 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104731315 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082941299 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104316824 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107810991 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086892776 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102322312 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08328061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107108578 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082629021 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109356653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102469552 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092505449 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104202954 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078909777 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104454818 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098766317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089004511 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097227451 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080717299 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100849256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083951507 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099852371 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085779172 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095023175 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091372892 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110806832 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102885106 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08212738 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102822812 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093653535 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105215879 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088640827 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107743235 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10902108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097499956 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101819205 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089198812 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113143087 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104972683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079511449 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109608958 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083560589 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101790096 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082655083 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100280029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086867412 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110457195 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106136347 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076996563 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104029225 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082217276 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099489388 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079660313 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109160578 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106290878 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084118889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110228953 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084666531 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102898134 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086875627 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100672816 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102165557 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08412641 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104901008 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084071229 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103765343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082579261 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103562826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10007027 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081061537 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103134973 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086063436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100898736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088860285 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100514652 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08344443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103962934 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103170638 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084647445 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102004126 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08342063 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107089092 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086365042 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10462136 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08904173 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100003962 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110562791 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086398672 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111477035 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084982584 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100358472 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092654514 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107315663 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110461651 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086700313 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105958724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086957755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105863329 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089797391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113064994 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102414668 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094538982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11037148 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086131713 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10748104 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085543385 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106816951 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084590747 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105419467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104702501 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084235545 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10349708 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09157056 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107301764 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086137981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107653702 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106138319 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085491697 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107481432 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080176812 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104381978 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085585687 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104626377 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094002446 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107072783 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107194137 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08412664 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106567446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084617808 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100212445 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092655481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112635298 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102260902 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091654436 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100322308 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085215544 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112095934 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096554853 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082354312 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101973212 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082318826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112959208 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086928057 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113115634 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085738468 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104941138 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10116401 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085978424 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10153388 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077948235 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099432171 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087106029 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104551709 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082340696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101879324 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086157024 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102871174 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10948048 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083097032 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103664855 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084381069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099893991 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08311171 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103173783 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088951346 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105989108 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102934992 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082818194 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104892974 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087736382 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106357374 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085919402 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106355438 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1025067 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105753459 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106973032 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088010246 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096345888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08662914 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10301087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083225148 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101823748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086574278 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10531335 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103073934 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090556423 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101781151 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084538339 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102597076 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081187972 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102052161 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101824964 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083928563 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100680428 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085367597 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110410133 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081947403 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103999357 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08336298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101970692 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10603782 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084371557 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104108941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091951547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106474057 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105635624 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092409879 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108004872 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089994823 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105454312 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08642802 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107821116 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10088983 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091906491 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101905081 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084505909 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103506146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081058306 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102065228 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083877489 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101278503 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105988029 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.0851214 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101605126 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083111291 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099867271 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08514683 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105722987 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109813326 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086131207 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105052823 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078779318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099537794 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085336069 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10035721 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084851055 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104729401 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108065402 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08683352 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102289198 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082476078 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109810909 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090966317 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107563262 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101507913 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088686708 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103318841 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086151487 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104010094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083784273 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103810144 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107592095 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085497829 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102052217 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092463311 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106649992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085766158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104210169 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084056459 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102342801 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097305873 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085531129 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104557886 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09031813 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104890456 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083605787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112395767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102373773 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08418057 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106396395 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082902001 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109930833 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079095338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103958327 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103606267 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085825611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097184756 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082844092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099835538 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086573097 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102039802 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078728735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11162559 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109931542 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086306355 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102321135 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083502774 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097313753 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079034865 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10281024 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087077158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105564367 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111882247 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083603202 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102758016 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079097533 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102821859 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087663632 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107324705 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080558999 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098740298 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081853095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105779055 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109773496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082569332 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101602142 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086883941 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105832941 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081217136 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107171953 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099605567 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087842523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112828412 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085330004 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104100372 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089604937 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111240583 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103141361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0800574 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103494151 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086171083 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103047354 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086308613 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103612446 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116893371 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087689613 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101746018 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082577475 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105874707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083121875 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109593704 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10371914 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084527148 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108124197 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08565974 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112466977 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105347894 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090475281 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105242382 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087029798 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101680054 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08400186 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102133422 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081996371 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104833587 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103869519 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089132377 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110717516 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082367973 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112816184 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110813597 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089152769 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098738539 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083004274 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102590348 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079506762 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105129425 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081836784 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101166266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101606453 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083486582 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102793103 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090690342 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104578988 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085490724 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10326477 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077543987 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104258649 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105364501 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087962064 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09996391 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0852069 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104440876 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090756999 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107927957 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083999728 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104790126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105319774 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08541677 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099346519 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091213828 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101854289 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086597139 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102411847 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084381733 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104696406 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106084409 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090856434 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104653973 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087300846 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11523697 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106234112 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08217739 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100218983 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089241219 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101321517 seconds)
  done (took 58.206774894 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146114275 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081601234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098135461 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081733814 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116857415 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103197475 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082991493 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103095901 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08388709 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106567791 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082741354 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102233425 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113682894 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127035694 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09316737 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103652862 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079777622 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100329516 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098482592 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081264871 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109167268 seconds)
  done (took 2.905214792 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103784913 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117325521 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114320326 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118493719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090517465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114685719 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114615064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115069852 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099177207 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111001526 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118705896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114808214 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092015899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111211572 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110570165 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094205594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119343744 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108969858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116038566 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096540522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114676761 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115172214 seconds)
  done (took 3.22117852 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084600792 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102364382 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084764699 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098029156 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082718098 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097598661 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089106144 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101060677 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087719274 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102262386 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083245131 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102966938 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104282111 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07951272 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101927745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082118445 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152437303 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106963775 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083673058 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10442792 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098236852 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085924155 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098793598 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080424051 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101923062 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089521635 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103523417 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082417881 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102413916 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082667754 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10334871 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08114934 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105715009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102936094 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082802034 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101326709 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084209656 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102348936 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079608145 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101460968 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084628399 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098414152 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084359297 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105179695 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082113342 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101713528 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085470372 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103348101 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09770069 seconds)
  done (took 5.458201361 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104201832 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162172054 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086869499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144559733 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12047132 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113871569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087802952 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143416057 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102274809 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082928147 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122857009 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120468191 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103717075 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089672798 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110576533 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103801666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086955474 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102617818 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109336425 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084158419 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108661138 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091133253 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120799436 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118633938 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108303459 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08386613 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103897129 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108921258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098104894 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109886194 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109836412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091017074 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121719759 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109096232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103355173 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087742473 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121975731 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104857945 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087353111 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101479288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087119406 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109634266 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11000961 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122581244 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086620365 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108962152 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084074603 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101632003 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117280715 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086478895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112667077 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120274083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107837614 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085216291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110234327 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12255041 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087479318 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107040931 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091437378 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123144742 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106249358 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091942978 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119816305 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106519791 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112866334 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099210575 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110551922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109055454 seconds)
  done (took 8.162728357 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093537521 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111525744 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121497138 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12196985 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091175254 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11188025 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111214193 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092183876 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110848215 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116569981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111324462 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134861005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086583575 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116324403 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110592084 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092295147 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111630398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112325941 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09212352 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112169528 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111116415 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121166692 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091744949 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121158566 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141159102 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10615086 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091544567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111061318 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121229174 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11121216 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124560771 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091764255 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110939138 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121490698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124972807 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091914585 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103495275 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110620857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092403338 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111437635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105161233 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102313641 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112084234 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106417515 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091646291 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110964877 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120283542 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124055187 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1150796 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097108337 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112661672 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121707484 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111194722 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092536352 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120885845 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147802979 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121141513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121911564 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110724084 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100574971 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121094962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129160729 seconds)
  done (took 7.691295321 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107523497 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116849602 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118716489 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099807367 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08396716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10942974 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083081738 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102656208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116222362 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095240555 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117999208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109031392 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113146906 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098639134 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111825722 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114163923 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091595048 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111345534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116258202 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110002577 seconds)
  done (took 2.952073684 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09358981 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124676218 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08608794 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11346433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107836567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091556254 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107999112 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108375072 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086660679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109187479 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099534679 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122033158 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110294563 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095315114 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121733689 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116193967 seconds)
  done (took 2.518164266 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096491054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118253086 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121420695 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086789596 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10908807 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084456609 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110497832 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10250977 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084028447 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124575669 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085878848 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108637529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105143829 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085579622 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101150959 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088251925 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101519528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082805612 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106107527 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11959308 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096780278 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104635701 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107907846 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089210041 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108418399 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094208134 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111109874 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107199852 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088161599 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109863196 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089457302 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118746904 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106568598 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088219097 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107975902 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086775296 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110573825 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08975982 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113434497 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108287147 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085087545 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104571477 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085120569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106993056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080548172 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106292884 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101316584 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091620591 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10378989 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085326069 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105126772 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107670682 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086432126 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116499004 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088418096 seconds)
  done (took 6.343994736 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099470763 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108970555 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081470573 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103596016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088319317 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108086754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109207997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088281358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110815658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087255727 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111835297 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093859758 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112116565 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113936691 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091743152 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114982042 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085046325 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112177089 seconds)
  done (took 2.656866442 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091788827 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105973726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094023686 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105969837 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085024529 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108736606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080875537 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105452848 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103391371 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086084739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105744522 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088377662 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10406713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088568601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105412608 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085468969 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108795415 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103527581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086494024 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100821913 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08851643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104506539 seconds)
  done (took 2.971621294 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118850537 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125417736 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093079666 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.2285386 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104148941 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132448277 seconds)
  done (took 1.637285118 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109757487 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121778292 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106212388 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107582723 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115431898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108001854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087880095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107977322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117815213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103184044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107967245 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11839248 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118277899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098200078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115120792 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114748195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108159439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087614394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107210974 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129881927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088835264 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118892137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107718893 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087731599 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108876128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117565119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118441658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122414441 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088433021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118301569 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11420793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087668354 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119025669 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123665886 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108936417 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099225378 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108344561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129459127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114375374 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097916346 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109974928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116243887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099218285 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114619974 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11901618 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108585508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093162787 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108879318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107861871 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135365261 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094780409 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11758321 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114909333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119088554 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118011364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136202785 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103163086 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118158636 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11595482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122251038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117835991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095315353 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117507894 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123105883 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115905129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118221348 seconds)
  done (took 8.171460314 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102256448 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125434749 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108123807 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123894969 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097078104 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109055659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107939491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088314727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108598355 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106588809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153945005 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088555239 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118585031 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117985132 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108771266 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087998655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108689455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118205502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087915302 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136339139 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109130319 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117856553 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117611956 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097005796 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123203859 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114804692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10832793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089551019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107738353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108953622 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095137413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109843987 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118271184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087614679 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118455006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108653824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088868504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11583774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108942916 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115640735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098352566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129780154 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109241711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109301501 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122263385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088731666 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108813302 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087575577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109247084 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106985297 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103111336 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12323252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123098063 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118626134 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108886774 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088407275 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109358066 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108338733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08932813 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115874246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118716349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108085888 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136906624 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089167924 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110489972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122510376 seconds)
  done (took 8.052908132 seconds)
done (took 156.038043982 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098664994 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138887834 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10117443 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174070795 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106447278 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11935873 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138494812 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098179057 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107583612 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086495213 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108180698 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08883429 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174544418 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085475315 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107324916 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107674141 seconds)
  done (took 2.681830315 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200535995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256563935 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103838094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107888315 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089683007 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110223975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105209612 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091290767 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109495328 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086621943 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109641377 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086544418 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106123842 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086780275 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110949404 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088808339 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106859754 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087786749 seconds)
  done (took 2.890047734 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113906658 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146866615 seconds)
  done (took 1.112548473 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118427699 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180806279 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321796676 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.162080215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111048008 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13166394 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157376509 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131843264 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198542071 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124439732 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123591656 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098166827 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14120387 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115617917 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094409025 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119050202 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142869904 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09447074 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116152697 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116041245 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117202971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107312195 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11575458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094186524 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182228839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12003772 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085622713 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10743393 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11605445 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096051195 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11418591 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125470854 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098859456 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177160143 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102860659 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176665434 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097820138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114837798 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115965211 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091879904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120379969 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119179891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105612524 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119143517 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085545538 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119627021 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106544087 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085900724 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115062846 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09785091 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117001972 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113539184 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157315081 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11862155 seconds)
  done (took 7.584230804 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797984108 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164808571 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09100679 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887899734 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139560726 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104265214 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787097366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134689262 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234664953 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768271304 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140290994 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122740788 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229386579 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23724486 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93150374 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309522447 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675226887 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10887508 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156127954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153837951 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11987904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138917637 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131795004 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431313741 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096305694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113039841 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117865058 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099965504 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161453726 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127333278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115415201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180627374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269512553 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187394637 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11739733 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09015706 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112804376 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169883082 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269315262 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216923733 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181715313 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087937476 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112553575 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122220417 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111275614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109460865 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164547677 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197153878 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175226926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092199963 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121656233 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120879918 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120480754 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167005474 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121133765 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29417462 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326814988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11255948 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121585027 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10613282 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264730359 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124147835 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225392519 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118088303 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213152668 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112000742 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778768201 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191669946 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09002453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118587777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11933977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095109141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122121145 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168315611 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394273139 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12556692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092501786 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112650073 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210994733 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126169035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112817556 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163738955 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115560657 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100455217 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125693141 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123532176 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172549541 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23170748 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124838478 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120407395 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093713284 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126083174 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116931867 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213140342 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22152942 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162675912 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211728119 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123695215 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163900236 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190813423 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098895544 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195797235 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098240754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127067127 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123675131 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218574539 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146711005 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102349846 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117488856 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120193405 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148832261 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127282028 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098680682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19351391 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459846455 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169120405 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110133398 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129018439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099191612 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161996644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11918238 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257887968 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122949758 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171068766 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120346372 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088466987 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121162037 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166804292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123985532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121557213 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101559619 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11970204 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236978888 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221105549 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124320624 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222005735 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186110879 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12022694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173084217 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122155555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168568836 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121614885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121891205 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096130222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787178073 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12406197 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098355481 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117706139 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188899852 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111501391 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103470637 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125887783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109433241 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752496553 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128624723 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121650075 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102203685 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118770821 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121218448 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096505357 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117183684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163656505 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232772341 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122708965 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120478942 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104447327 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182900373 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096371332 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126535621 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125503244 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126639219 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101343698 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116464061 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126470987 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171591997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164013249 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22238029 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596281751 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091761481 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126449213 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230898612 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090812757 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293048709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12080673 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228442081 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165865924 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12191992 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321445228 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167397619 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188283616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128754628 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175141592 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086709467 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119382694 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165923437 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11319371 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1183939 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165355707 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125982216 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102720667 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962772897 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11307996 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227438877 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109339041 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173463315 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095092408 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122736815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294272027 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112575773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108592495 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187069265 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095150938 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126469036 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.733413027 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10452656 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123920265 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118452039 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224173312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165509489 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098244539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120002815 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121990395 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164786013 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209378093 seconds)
  done (took 44.27055493 seconds)
done (took 59.386233234 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277609017 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216937775 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259468244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168994746 seconds)
  done (took 1.871190006 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171020528 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154081801 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120820784 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109106561 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150271221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084993514 seconds)
  done (took 1.664111092 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353731388 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271723737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239011237 seconds)
  done (took 1.744794628 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290906837 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.255059155 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355567405 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421272744 seconds)
  done (took 2.321184268 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20974885 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133221037 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111543961 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105605678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198338269 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251128833 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141178562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203856105 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123046641 seconds)
  done (took 2.404546316 seconds)
done (took 10.883201008 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.246733582 seconds)
    (2/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.243581047 seconds)
    (3/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.153179044 seconds)
    (4/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093977697 seconds)
    (5/286) benchmarking ("sort", Int8, true)...
    done (took 0.22193993 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127756555 seconds)
    (7/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.214717328 seconds)
    (8/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123798216 seconds)
    (9/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096851713 seconds)
    (10/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117501742 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220986525 seconds)
    (12/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120471026 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100866281 seconds)
    (14/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.24502558 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122982691 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.232548415 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.236079397 seconds)
    (18/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.158709869 seconds)
    (19/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.206781895 seconds)
    (20/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.2325544 seconds)
    (21/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.16771542 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092602835 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11292388 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.216394151 seconds)
    (25/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.222061938 seconds)
    (26/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.225175515 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176726874 seconds)
    (28/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100147328 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.089882618 seconds)
    (30/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.162911148 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.112074757 seconds)
    (32/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.194003754 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.22735484 seconds)
    (34/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088813865 seconds)
    (35/286) benchmarking ("sort", Float32, false)...
    done (took 0.174226584 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189034566 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113188446 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116951997 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.208485819 seconds)
    (40/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067487914 seconds)
    (41/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168459018 seconds)
    (42/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234821965 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139996562 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159442595 seconds)
    (45/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118604645 seconds)
    (46/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.202569551 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113665466 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.145597757 seconds)
    (49/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18575302 seconds)
    (50/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110664039 seconds)
    (51/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067183938 seconds)
    (52/286) benchmarking ("sort", Int8, false)...
    done (took 0.189429065 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11693682 seconds)
    (54/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.184951931 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109709139 seconds)
    (56/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.133528055 seconds)
    (57/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123392963 seconds)
    (58/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096787244 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.200274397 seconds)
    (60/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067298392 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12361223 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088667742 seconds)
    (63/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091036549 seconds)
    (64/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175411847 seconds)
    (65/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149679346 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121398447 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129123346 seconds)
    (68/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.153762593 seconds)
    (69/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120077026 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09338836 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115078223 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083088387 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.150486413 seconds)
    (74/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067016977 seconds)
    (75/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11338731 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112832483 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089602059 seconds)
    (78/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212511757 seconds)
    (79/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093410847 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138243806 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09574083 seconds)
    (82/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.179005689 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.11048373 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086954407 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137826238 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138605222 seconds)
    (87/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227516604 seconds)
    (88/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06679012 seconds)
    (89/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068267072 seconds)
    (90/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106695504 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097451165 seconds)
    (92/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156938667 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092317458 seconds)
    (94/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113699916 seconds)
    (95/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116045054 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103342848 seconds)
    (97/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149990637 seconds)
    (98/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078759582 seconds)
    (99/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121337007 seconds)
    (100/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088906816 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125487982 seconds)
    (102/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167706078 seconds)
    (103/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1576642 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125128698 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.123788378 seconds)
    (106/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158547371 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093776987 seconds)
    (108/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117376574 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117877325 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.161575645 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100526264 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088025645 seconds)
    (113/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112310028 seconds)
    (114/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067529988 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110766473 seconds)
    (116/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.119429076 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109460136 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086852259 seconds)
    (119/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184441774 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138175395 seconds)
    (121/286) benchmarking ("sort", Float64, false)...
    done (took 0.149035655 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.183051565 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119229478 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186803802 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096046925 seconds)
    (126/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121532047 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068143461 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115808589 seconds)
    (129/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095265255 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11707356 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174949447 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106714185 seconds)
    (133/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.101221927 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.176601707 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127265609 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11818076 seconds)
    (137/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09518082 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109477438 seconds)
    (139/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087446903 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139365298 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09041724 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165141363 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089691581 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086738207 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11786053 seconds)
    (146/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075561655 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095567646 seconds)
    (148/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091546581 seconds)
    (149/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094868244 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10999952 seconds)
    (151/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1293891 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15005903 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115519594 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098089093 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093954047 seconds)
    (156/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06895299 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111783361 seconds)
    (158/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096298972 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09416552 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096336873 seconds)
    (161/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174761047 seconds)
    (162/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088169425 seconds)
    (163/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111122989 seconds)
    (164/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121137157 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087202767 seconds)
    (166/286) benchmarking ("sort", Float32, true)...
    done (took 0.23367483 seconds)
    (167/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120925513 seconds)
    (168/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066723305 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165865521 seconds)
    (170/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067677194 seconds)
    (171/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121835664 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095283826 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.144709944 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113791126 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091694921 seconds)
    (176/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088517122 seconds)
    (177/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090540642 seconds)
    (178/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.068165259 seconds)
    (179/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092900909 seconds)
    (180/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091018203 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088324615 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116538806 seconds)
    (183/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068673329 seconds)
    (184/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117988205 seconds)
    (185/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06704595 seconds)
    (186/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067985402 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119530737 seconds)
    (188/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089360863 seconds)
    (189/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090687439 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06816928 seconds)
    (191/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066552611 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126519695 seconds)
    (193/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.154707458 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111509493 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090706792 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.224948286 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086406079 seconds)
    (198/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112174025 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08832161 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14328982 seconds)
    (201/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068260903 seconds)
    (202/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11005528 seconds)
    (203/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161289443 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112857484 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111971556 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094979784 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120399662 seconds)
    (208/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.131460926 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109844671 seconds)
    (210/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.14094364 seconds)
    (211/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110466346 seconds)
    (212/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189871938 seconds)
    (213/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067942364 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086893587 seconds)
    (215/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116764625 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09237592 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091233177 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.308692344 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111928043 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08687782 seconds)
    (221/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090708659 seconds)
    (222/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095521593 seconds)
    (223/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18992938 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138433069 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111432964 seconds)
    (226/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092472029 seconds)
    (227/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067987491 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11200819 seconds)
    (229/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091952196 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113623786 seconds)
    (231/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094942481 seconds)
    (232/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.09043437 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086099463 seconds)
    (234/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171706544 seconds)
    (235/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233960051 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06917387 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067143933 seconds)
    (238/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114333848 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113612417 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.151955275 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092879924 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06737242 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093384979 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111181544 seconds)
    (245/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136870891 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067788795 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125446667 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096856905 seconds)
    (249/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.090678742 seconds)
    (250/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087221344 seconds)
    (251/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066521612 seconds)
    (252/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09103211 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086839435 seconds)
    (254/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110214071 seconds)
    (255/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076727992 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182417352 seconds)
    (257/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079006176 seconds)
    (258/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092491325 seconds)
    (259/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08817401 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067387735 seconds)
    (261/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117725664 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086523492 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119014389 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108329959 seconds)
    (265/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067924842 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085984146 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090022288 seconds)
    (268/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08997936 seconds)
    (269/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112360635 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113792575 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157619718 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119059119 seconds)
    (273/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094232437 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13637581 seconds)
    (275/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068500346 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116612408 seconds)
    (277/286) benchmarking ("sort", Float64, true)...
    done (took 0.233977592 seconds)
    (278/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078080029 seconds)
    (279/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066946907 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117102062 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140555129 seconds)
    (282/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095331634 seconds)
    (283/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116149111 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088629884 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067292876 seconds)
    (286/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091985749 seconds)
  done (took 36.230393869 seconds)
done (took 37.114929257 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100670843 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148559416 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096375487 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136848334 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124651391 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091884857 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118597129 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098745788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123555594 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124479423 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098715375 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093123184 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096903525 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120972106 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096400789 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139900896 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125049455 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093909819 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119421461 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086635354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118976098 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088937375 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111871704 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070775612 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122154379 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094789572 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116583736 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12044356 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08733167 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110706721 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090738009 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117866718 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08713984 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124128564 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093996138 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118879012 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096931294 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120749456 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112379499 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087400153 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118593754 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086920907 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11708374 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095027308 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11561738 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094104881 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119294427 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099584697 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140008936 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11658573 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09550629 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122616136 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097404757 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118142182 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090707645 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120134141 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091790057 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140731006 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119853242 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092876594 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118941475 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095257683 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116581555 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095448091 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119964731 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121744733 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098693721 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116116618 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097913509 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116960293 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087103949 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119586741 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090903493 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111619064 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096908773 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121467708 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085153699 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117443957 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118102627 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091434428 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110270532 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090084982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113042926 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093146799 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1134157 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070451338 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115072122 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093529594 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110331352 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096399136 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117748387 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09412605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114869711 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099104799 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111065181 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092173655 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111239449 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087160689 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113899755 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091685931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112058157 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090136314 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12055499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089445092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118220025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124008473 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087207404 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11835038 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087069173 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110561146 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103192895 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122549044 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087868532 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117763611 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087276717 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119350456 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086648152 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111180543 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087061872 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11086051 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093210084 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111827599 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113914921 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094498952 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126468486 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087219154 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114875632 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090634686 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11081203 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093136822 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111811424 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088175948 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113663504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07814745 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114663173 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087988712 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118654691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090582318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119524591 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089917156 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121009634 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092654125 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11763623 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093551856 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111253098 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074950186 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116640232 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090221903 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113418604 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087858143 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11455516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087929142 seconds)
done (took 16.994205825 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087138442 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184295606 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151496512 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142564917 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108563799 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111747335 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123135519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118782453 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114003823 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142976231 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110279085 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132701659 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147496094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086931741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11273939 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09208056 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11322329 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102954452 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146132303 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132862932 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164125871 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087232847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148919343 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136114074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121341561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105411443 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114041418 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092012975 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115808165 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114866027 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133042065 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115813436 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088731969 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135072283 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105060342 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11993447 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08794678 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11977725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087271583 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112077953 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14201215 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13386655 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092392868 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118156745 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093043882 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114917231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090337221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122034585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099713765 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116871406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126636713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15667674 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092293481 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122206079 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086752904 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123995595 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122424669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089830667 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112236718 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090710586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112408243 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091337118 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128493274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143769743 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092673631 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123221991 seconds)
  done (took 8.635151464 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105118403 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140377502 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105698724 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13034479 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112566627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08873649 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113154577 seconds)
  done (took 1.735852236 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088992785 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135470488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11262766 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136222366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133267573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112457242 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123781136 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08888203 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133060066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090066408 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135149217 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151463517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090261257 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122102126 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138404278 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088584687 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138240509 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089371293 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118235587 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112274453 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116681905 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135915996 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092085126 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114223753 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103611635 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114956438 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163092056 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094865325 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115329287 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093211122 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113175882 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151898211 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10346321 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125518524 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089147328 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130792799 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129272086 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0874202 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126817066 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094905825 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128799877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090398937 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116303844 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088053816 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119245599 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099609728 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118420077 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090457519 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11761555 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134326161 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089883835 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146374661 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089864111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118074525 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091871005 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120234506 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098129094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115594506 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133713498 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090884706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13181931 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106075683 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128061419 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131369623 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092491797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128248333 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10372077 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117672565 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091447377 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117754667 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106108591 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113477 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091621905 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125502728 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116814037 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113091418 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137954012 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091321389 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125537192 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089256241 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115562226 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115071749 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11304028 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118556506 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089873177 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118234998 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092980115 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11400491 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089113543 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119050555 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088509443 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116319115 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095118725 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115294738 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093420009 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131940401 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115515953 seconds)
  done (took 11.879743871 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090584865 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115046133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092142009 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11494995 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091164869 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115903767 seconds)
  done (took 1.572517482 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115664971 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117830315 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10465296 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121608069 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156824581 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104690545 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131334723 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123918776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109101682 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127993773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129431362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106110738 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136760551 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122415068 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104436388 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120754297 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105711733 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126889877 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127927281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097371537 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137390435 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121964677 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097514398 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132729793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118711779 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095812383 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126402813 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102994744 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128429495 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124267047 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096362772 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119895 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098798308 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124459204 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130369081 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097038444 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121214226 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12021098 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100288602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118964781 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104531649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121940823 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128371924 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095224908 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124362911 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121734833 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094716073 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125436513 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103956594 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120200751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119357974 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096030393 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120995443 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094213735 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124599778 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126148193 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094885644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130741506 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12139775 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096939604 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119233355 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093733678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124733445 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119188548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105116018 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119924849 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122463 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096884234 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123054809 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096718742 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119815549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094372129 seconds)
  done (took 9.26210323 seconds)
done (took 34.024443516 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691647966 seconds)
  done (took 1.644786862 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815662185 seconds)
  done (took 1.769945716 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.992503906 seconds)
  done (took 17.976066284 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495445808 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582553162 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995479226 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178273985 seconds)
  done (took 3.205558898 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942145213 seconds)
  done (took 1.917069257 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283305609 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236325986 seconds)
  done (took 1.480092445 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769463802 seconds)
  done (took 1.741254138 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366173402 seconds)
  done (took 2.324226713 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327425317 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18442915 seconds)
  done (took 1.478916218 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.55268304 seconds)
  done (took 1.519194639 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.740472325 seconds)
  done (took 11.712610688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268772588 seconds)
  done (took 1.254968985 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300760213 seconds)
  done (took 1.277145432 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.497511761 seconds)
  done (took 4.470547339 seconds)
done (took 54.735794519 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098825049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127169917 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103526833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125007841 seconds)
  done (took 1.42166864 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101611505 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122383249 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101509733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122382705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126913221 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096226715 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123691189 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102153525 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121650637 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097780699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121753925 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121104785 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100062814 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124010483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093581588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12504805 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099783298 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121671838 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125245324 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098296738 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119657765 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097651506 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12586462 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094907503 seconds)
  done (took 3.661316739 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100562263 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120264343 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097135576 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119121128 seconds)
  done (took 1.420803761 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100401124 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13160104 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106162656 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126499425 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132113248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106865153 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117275475 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093178591 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119900448 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100245579 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116479802 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140576225 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107406955 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124688665 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102235453 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115334534 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092069035 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131042623 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125422412 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101473816 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118259002 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100733033 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11589676 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110499868 seconds)
  done (took 3.716544979 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172092057 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12774808 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139146398 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09607835 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161025104 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142043042 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088488125 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142281477 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088586446 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132617209 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118861947 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134450831 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130378117 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08897564 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114756121 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088362296 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129642917 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129753362 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091853299 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128777994 seconds)
  done (took 3.43151264 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099286281 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118248631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088573966 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117104664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100100305 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121880045 seconds)
  done (took 1.628888497 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091043201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115671295 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09036925 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115124153 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094730786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115645232 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089226141 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115428679 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090602722 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115753714 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089503075 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114074775 seconds)
  done (took 2.220401511 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.506098228 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120874787 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121128803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089869727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124714988 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089424073 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130055735 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09295051 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141812693 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089503718 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116914272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091501285 seconds)
  done (took 2.698557007 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236381925 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127354673 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284740516 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366086774 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156879049 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165117713 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280767418 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162721045 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198701963 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150237023 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231066583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19682427 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15290412 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191770608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139042513 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146064452 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189501628 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252246288 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153508888 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212546371 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206267074 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167696164 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1805989 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151738286 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112915677 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194500083 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095429524 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130270216 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207859955 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206146636 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19003987 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162284004 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147400734 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238384546 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249652429 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196742103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279987459 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134332379 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142873732 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166251869 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266294359 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139605167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233208594 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156292785 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105546288 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220958563 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165680535 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176988652 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146267747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138879442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198511458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239949401 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193661085 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139434179 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298495626 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149156305 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157703629 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190355473 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252727961 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227153067 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191075421 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121976956 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189646362 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193091796 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185290768 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152161944 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210503734 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147185736 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184083688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190349353 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166775736 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177297526 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207675226 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140382531 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170099684 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174449943 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173553966 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25919576 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186151012 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123179494 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170068138 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149477494 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10571282 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195256409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125949075 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216007981 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144062349 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163800602 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209835166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160300067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16223975 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219505714 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185757653 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148333747 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084205372 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154572164 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155454443 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176189183 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140138231 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160330266 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157341083 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103540241 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194706293 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098773699 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185682287 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118957138 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175075059 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18407591 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127795267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162216786 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153651022 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15033804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178347573 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201446038 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141358262 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134084793 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211291092 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177173444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142358213 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179106258 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200985749 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144916316 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149360131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226308572 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218239835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141425399 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203149601 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153875678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136283758 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133861265 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182773988 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156884542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163464934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106734481 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210063011 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207367209 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127121108 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138991694 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196801163 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133392136 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10464559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155006158 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149058108 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138994029 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143267374 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144894389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177558475 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180224776 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155240276 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167684748 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150639508 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250922058 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140367482 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124052592 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150054466 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121678606 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195161648 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226235497 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10504649 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23142985 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172514567 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199445431 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170179921 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135635458 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179454437 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131577451 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094305905 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222475198 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169114918 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163202056 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198810054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222353754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18336649 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183778223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166570563 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201276072 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138975514 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158404098 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139405534 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16037886 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159161197 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123716588 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.113555799 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135049852 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150255625 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143282747 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10623342 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226263727 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171143403 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190086987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159700617 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150034696 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181802363 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129612354 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178079606 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177269666 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146572816 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227475091 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196079835 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186568551 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146188698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225603475 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094250486 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124837303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141704512 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170915318 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108014491 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137410276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162136449 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182349178 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180783267 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198894677 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206059365 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173796132 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218294987 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096433091 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168550759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185206149 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176998282 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180837917 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142275301 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151234429 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17770248 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154360373 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228465686 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170340439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203545995 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20633909 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152699082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132732605 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151032735 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178501235 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154830346 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177608865 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14692472 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1118614 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16031354 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131181865 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161942407 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212444733 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163374112 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190103468 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150426308 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186923916 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128246794 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163149756 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161327882 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166683477 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081982987 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176234154 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231298916 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148033699 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167483285 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189803536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132550712 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308007697 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236679519 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197749443 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138038014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155755054 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162387699 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163086515 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171640701 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180107414 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159856855 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18857641 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160017891 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135769967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112752875 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151249005 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154184426 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132794359 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148921103 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178969538 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110886592 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217780555 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155658676 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160250684 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174564889 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149567503 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118165348 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151412497 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243824787 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18529886 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238876034 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124969514 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206542826 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208417127 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126472066 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105039998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134924526 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179888567 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136165173 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192320601 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18787871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227471698 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182259766 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178573458 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140492568 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121407583 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15784429 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169739166 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204509926 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149238894 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14813503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202758934 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139055605 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132430368 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166386574 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285981587 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14575825 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196989924 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079719537 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305372003 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101113867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13318204 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164213519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206350278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136924788 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178997945 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172916946 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162650391 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164580486 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150313387 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19265487 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238892915 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202167188 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183162185 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134850471 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157594972 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176584094 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192498223 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15589644 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139780892 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232091829 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197073688 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196637328 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143431109 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169293241 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169285439 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158993346 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186810619 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136770666 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234962718 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107756489 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220659605 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155025385 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139012116 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178092135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188613202 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14130805 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189477673 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183055515 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136399357 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135108967 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16695791 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178997579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154482972 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128364817 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184004683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125487951 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196883798 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261504849 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106221907 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155782491 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149294462 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137586528 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155598454 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158581801 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13934785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138420387 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22832267 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108127405 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219980452 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202796985 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172094048 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201816926 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118223159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693914456 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132146836 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19556433 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148438606 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235322487 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15135957 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174143025 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159193642 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168353083 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196470833 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161332786 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23326766 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219091205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180378002 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104731637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158087293 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156614598 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145145949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155178911 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170467283 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16080124 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147168266 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178979666 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165951683 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136616693 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14071728 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200262502 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148402549 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185682778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181177893 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139466834 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175706305 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185590683 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135086685 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179372185 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238892195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142632602 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148178454 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10697449 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150788831 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264666503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125492466 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190515746 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184165535 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160704925 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168512841 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147607688 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221657355 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158136498 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186377321 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142881471 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15972849 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157182891 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111327127 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132355531 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157512457 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169489326 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150800516 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161384771 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14229534 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218299575 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095939191 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145573135 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285468602 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1738833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245761839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136280597 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108017778 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162549677 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150975597 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177575192 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208219276 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10904674 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13586344 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137178373 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130459985 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138422475 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155663735 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194373503 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166926895 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208285222 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138006803 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278249125 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1409553 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128585314 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116563711 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133340919 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122157542 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146705593 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156092419 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219928137 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232447588 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150710611 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134986904 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150316516 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097794685 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137944464 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164830994 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167372975 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178414275 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14578112 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080246454 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157458758 seconds)
  done (took 82.688428737 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162058223 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132187388 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147589879 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20208408 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177872019 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270033234 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210012707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252804346 seconds)
  done (took 2.629830875 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094485245 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145940824 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157779577 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133635807 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092066318 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120711851 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343924019 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132903099 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117218072 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121484874 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174989447 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094816535 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.54805678 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091282512 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12064878 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108307913 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092535728 seconds)
  done (took 3.756329283 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.192607068 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495248052 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.001715708 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194826719 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159513561 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117547199 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70960946 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095284487 seconds)
  done (took 12.042573435 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115559387 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136334615 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124369353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152941016 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140621031 seconds)
  done (took 1.755405716 seconds)
done (took 124.0405593 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097544686 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127988788 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097799029 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131102007 seconds)
  done (took 1.519775228 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094661845 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071080465 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100973821 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075118666 seconds)
  done (took 1.416582666 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191295603 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169000766 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38567366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072058902 seconds)
  done (took 1.564566027 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115359973 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132469508 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105164124 seconds)
  done (took 1.436815269 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107684614 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129927189 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103588647 seconds)
  done (took 1.422623029 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106399462 seconds)
  done (took 1.187743125 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107860986 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137845446 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109844429 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136894488 seconds)
  done (took 1.572721198 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099387966 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127373025 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109794109 seconds)
  done (took 1.415093542 seconds)
done (took 12.972680994 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103035431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513715483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38452298 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144350307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721429147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380707729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.088549922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147674894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166586127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093661925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140517609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672272454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041436174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.470630162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00025489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467076979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705019628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093711283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119897854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094692723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.072605412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093171266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12291272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093227176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702908572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425264191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095197876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.467197325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092188802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12670571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38294333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123398169 seconds)
  done (took 17.419470677 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095300088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17357857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098360544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138129557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123945112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095135472 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127525431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093849457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179719651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123739333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112007825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122749074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126397873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095858795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142669615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092799878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126012698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093375176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121245279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122038763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111706226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120754467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094263757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121716355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094767492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135727959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122479666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093308818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121298613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09929721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127883741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094695059 seconds)
  done (took 4.829807848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141571195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183118228 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129453472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127518488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16861775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124462705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200207583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119009836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18347562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123102672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139930386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092999938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156134677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123925252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114829705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121109337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096542652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122759705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092731799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124112496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139540017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094316282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123059495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093675809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12313037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108441509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123738632 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120806857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093553772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126256527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099409762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123745226 seconds)
  done (took 5.14572177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097657695 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126972174 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109999725 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138710868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096090276 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126245054 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097739472 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124883687 seconds)
  done (took 2.006833747 seconds)
done (took 30.488085311 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111718264 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127081126 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107730737 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136002869 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103015754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132383603 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092613203 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134794247 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133641926 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103083386 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137701978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092665829 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122940945 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091542371 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135662742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096738154 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132843812 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101911602 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134269834 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132147917 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095210466 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133401388 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103487483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133714285 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104589833 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133514263 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137655483 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099507732 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123202727 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094754507 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124454345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103745831 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124238685 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105701072 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128045006 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098115532 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124612373 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094016463 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133987655 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133896248 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100714883 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134230787 seconds)
  done (took 6.006542911 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108095582 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140309335 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105335668 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082212615 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11727684 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080723104 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138227805 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079270692 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.1104684 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107665704 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07464849 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106615647 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079014081 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101572129 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077351511 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075696947 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107934836 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076370814 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076124449 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106337521 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080175075 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073182454 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108531182 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07923666 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074954325 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110724421 seconds)
  done (took 3.571843358 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100072404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134651049 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113563121 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183510959 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162103078 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099618877 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132038602 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140098987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109604773 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120570383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09684442 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149495957 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10965995 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130593868 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093268223 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13712252 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136046246 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094309255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128718053 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112895387 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139517909 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103286823 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141351826 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132937213 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093431891 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123179835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098082548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135548419 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097679399 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132135198 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097635105 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12524514 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124032801 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105337207 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126885689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094118436 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141838146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10269317 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130731102 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093114184 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129779215 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122164138 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113871037 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16211807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092047808 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130159813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095551336 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132409458 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121070876 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111694699 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131241523 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092354596 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125240476 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092241384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122468991 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107504589 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124229055 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095067592 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131704075 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127772705 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105679049 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125509342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109816747 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121886714 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100414262 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121825994 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092510837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121389912 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144134632 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094809176 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161842676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093508879 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124309611 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102487614 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129907931 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128043938 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09368745 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137698794 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101959286 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125554315 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10298201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126081473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095455347 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140591634 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124123251 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095367667 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123117731 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10041512 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123827842 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09441183 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136728243 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092357601 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125569487 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111216507 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121327267 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123180686 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100715566 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126180474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092578434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135820954 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098855956 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12358562 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103759586 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123335097 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125306655 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10452304 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126748971 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092742519 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127342278 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099748755 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124307157 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094655641 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126204744 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094532137 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133550495 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128681367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09963416 seconds)
  done (took 14.844460812 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229392376 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217106317 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207512739 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294616867 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13623502 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115155901 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214044416 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156133839 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12480042 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161237655 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171839767 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182132668 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139534552 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212582785 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170361931 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093481725 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143337983 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13478632 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245386766 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258627582 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144658894 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101692106 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162524577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160882553 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138032447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102528108 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141277763 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134210746 seconds)
  done (took 5.804061688 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108878176 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156399595 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098929835 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144903331 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149360378 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092591855 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128133693 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094792512 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135765607 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136433794 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093276759 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129849891 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100474632 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133451811 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124000555 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104214727 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132861452 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095470619 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126804311 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098563706 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134630948 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1025474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12800694 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122137265 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103702667 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122240176 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088100363 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144056293 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123528343 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116692545 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121404707 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102844293 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137753444 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094080762 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12333415 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095608281 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125939372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096448172 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126489917 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092114392 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122513327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078046307 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122733961 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137799033 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100368628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080214189 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130899875 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129002775 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096984092 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121356365 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096630716 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126243482 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09729905 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131199044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096185093 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124854171 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097364901 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116609006 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100215351 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125258838 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085196001 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121428395 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098920363 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11762345 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101584517 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128618374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092928462 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126301373 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09791269 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129669288 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095588864 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130228815 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090794561 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.1261763 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095976102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128986946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125749333 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093521299 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122519768 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094668053 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07569563 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124046569 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074184718 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126889766 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093187988 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122777936 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096104824 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131403153 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138243958 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095995155 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132494438 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094646992 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12311987 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096871665 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113657612 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096675348 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141604167 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142049257 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095268895 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122208967 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108051897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126682269 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092417776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106724047 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10261822 seconds)
  done (took 13.013665262 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130465249 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153789569 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124750509 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112404425 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15665419 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159202407 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101815624 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131437176 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096765863 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142846476 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094003793 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132992814 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093857413 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138253741 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157113461 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104006286 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12652747 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108263716 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128666098 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169985659 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111561379 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14323193 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110083565 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125625712 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129159683 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110655445 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161071417 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107382139 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137935661 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143932088 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10856582 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161304948 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143421735 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099391162 seconds)
  done (took 5.487735369 seconds)
done (took 49.818607528 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.23089863 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.409931726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188991992 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.109407032 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215086489 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.219766263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200336332 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19070112 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.72804081 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192235737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.430957578 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.762885132 seconds)
done (took 59.9973907 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.247084386 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342672561 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474911157 seconds)
  done (took 3.933667016 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.723327248 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.133994899 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454757577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190166544 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191205728 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.480382855 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.844243699 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.546052215 seconds)
  done (took 27.956327922 seconds)
done (took 41.978738088 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.173410198 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.22812071 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.20320816 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169260467 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306238645 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228233108 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.640684149 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.24502657 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.214059088 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173977432 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218309496 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.213074547 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200652069 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.65163995 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20372226 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195456962 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.200268394 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.726732585 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.602591394 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.207366388 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.208352682 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.271076483 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214292314 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.218031875 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.245198094 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.201165002 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198614577 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199329781 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.786507684 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198014368 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206999791 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.810559701 seconds)
  done (took 190.876976038 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191877938 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.154654687 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.260102163 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.234178148 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.603139158 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393772445 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34180646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.685300775 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216216565 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198970985 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.436141001 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196776507 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.511971222 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.208817062 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231336945 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261659361 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.501523232 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.508322433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.245074505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.35375513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.217076719 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.476111239 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.537120269 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.385769219 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23375913 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.23661324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.210173196 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.225799634 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388525723 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.437154518 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.195164446 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.247699097 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825163375 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051663852 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.217785868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.237915427 seconds)
  done (took 149.976907086 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197546177 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194300274 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194235951 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227287186 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198017388 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.780000742 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78255128 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.723029248 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.671042328 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.633938484 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50714927 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200655482 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2893799 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20727933 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198822486 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214994734 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.237728786 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20119927 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195687023 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780517544 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213107111 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196590305 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373343636 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211950465 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228214323 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590626339 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208309223 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21868613 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228510954 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533127586 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245764377 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197141102 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606608004 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.724924505 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31587934 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19772365 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230353069 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201822817 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477356607 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196997463 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195632262 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198482067 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199655545 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911612944 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203129491 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784918483 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202594719 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.189502604 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201259655 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195968476 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.886034957 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.952946151 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220506375 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19855912 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200819829 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198019028 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198503047 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231200859 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.528471058 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297443881 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216896526 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199812377 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202292535 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232450922 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202080709 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.31412251 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205251096 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.667927152 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259040241 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313186373 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785001224 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203284268 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299074889 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320549015 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200394465 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200716824 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1997091 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199182418 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311032099 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199562541 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614141667 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.37668381 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215821069 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199949358 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.624866076 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302430991 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19956877 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620508632 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204820251 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199610634 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.01969802 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302171975 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199176123 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199650061 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2003738 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.613820178 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786931629 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.483883584 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20397277 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.68095996 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205722483 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632274302 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758150309 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905599956 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205437762 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312207842 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377286995 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217691745 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199993624 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.620136315 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.2055728 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259912783 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200118656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598490905 seconds)
  done (took 367.035296813 seconds)
done (took 709.007424087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.799168546 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.799826077 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.909211919 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.787175824 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.750515502 seconds)
  done (took 10.172358349 seconds)
done (took 11.298229402 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395101383 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.400246635 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269381551 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401966055 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240589087 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418094887 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379588166 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225811412 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304898914 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.292031753 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310184441 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262376871 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240971572 seconds)
  done (took 18.268123169 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519181917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.50721471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264239821 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508725016 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24164154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517077042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395493818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411417332 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414164861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236310696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21798258 seconds)
  done (took 16.361550424 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518682892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528948569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270245554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522683483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243566544 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521248771 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41508062 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.452731529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41731228 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2364632 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215002965 seconds)
  done (took 16.469812476 seconds)
done (took 52.227308938 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21283308 seconds)
  done (took 2.340758614 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246639035 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41366133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234917927 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219136681 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211988517 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214728101 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218284401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214225363 seconds)
  done (took 11.103464643 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212130319 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210674948 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20913443 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213163574 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212569206 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212886325 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209083309 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209041382 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20969168 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208274885 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210402736 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213974984 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209438268 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213082248 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214746164 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212312894 seconds)
  done (took 20.510199338 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213401981 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209927222 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210593965 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211367093 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210027791 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211150272 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212552526 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210226888 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211591559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210318747 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211165445 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210119814 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211297787 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210968571 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211599449 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211627243 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211418167 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212010034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215308087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210598067 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210754413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209990867 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212094176 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210383348 seconds)
  done (took 30.203062386 seconds)
done (took 65.287067542 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.824084779 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.915463956 seconds)
  done (took 6.870839734 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213888457 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.216379689 seconds)
  done (took 3.563538035 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212614843 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21361607 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214162081 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212233039 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212611098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211531391 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211845668 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213209161 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213515777 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212121763 seconds)
  done (took 13.259161603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212092818 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211968395 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206326889 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210004635 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212895473 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210931976 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209670115 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214388019 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21327485 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.207497373 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212557884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207793683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212722919 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210094122 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212323772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209175702 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212448881 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208977202 seconds)
  done (took 22.926561831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213198817 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212477348 seconds)
  done (took 3.552047543 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210333965 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212088006 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208156109 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208031684 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207661537 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208658518 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209007425 seconds)
  done (took 9.592677515 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213217757 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384768767 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.463838951 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.839734164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213072522 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218344259 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.04405434 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217787536 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.219977636 seconds)
  done (took 13.943335682 seconds)
done (took 74.83961442 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.244993195 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226040795 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.457542865 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.212808066 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.224692681 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.504327276 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.229878027 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.332593896 seconds)
done (took 37.565535712 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.210122695 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.183783685 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.964058823 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.190574401 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.273524529 seconds)
  done (took 18.739490303 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.239680152 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547769865 seconds)
  done (took 4.915448604 seconds)
done (took 30.992900315 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216049057 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212474879 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.212054696 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212649949 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215733453 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209680648 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211787548 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211827754 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211766491 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213889751 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.2143662 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.211909705 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.21338474 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213421273 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211784005 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213274312 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215139619 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212256299 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212298826 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213213513 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215531367 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215487805 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211989495 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213625151 seconds)
  done (took 30.2454095 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215648954 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214070798 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21568037 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215156168 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212849967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21683884 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216764947 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212830671 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216029486 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216635792 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213628235 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212998097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216191289 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213149866 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214705809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211822929 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216380136 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213691808 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215426652 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214623872 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21712886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213463312 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215177001 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217181275 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214731888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214347673 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217859479 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216364768 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21801836 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215622321 seconds)
  done (took 37.586511173 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223857527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226423121 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.216788647 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.216855874 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216282219 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217202716 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216935171 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217868883 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216722795 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218560565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21805058 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216922931 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216598911 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216029714 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217543352 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217589511 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217555886 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218662471 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217488495 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217105259 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219425687 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217473474 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217996692 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218810498 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216280922 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219112058 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218247864 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218110132 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218510119 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218266626 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219063327 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216751607 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217935658 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218656694 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218649782 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216604255 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221716147 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223682608 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216729582 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216964367 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216714622 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217561513 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217260041 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216054929 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217906735 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216751103 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219361849 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218664584 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218907332 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.219631652 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221607949 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218364413 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217971373 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219419458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219625648 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219356675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220339544 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219581775 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.221677258 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221804381 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220324428 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.222007517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220812075 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219278289 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219954968 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220847634 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220089531 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221453972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218902057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217576913 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217876163 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21935418 seconds)
  done (took 88.881479401 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219573584 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218874284 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218697273 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21809233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218752249 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220821152 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219883129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220597755 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218985587 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22034397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223549632 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219859945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219413915 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223148933 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222391978 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218654356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221283232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219998579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223579112 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222163808 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220877361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218821734 seconds)
  done (took 27.984234826 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222658986 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224475917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219099609 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222043341 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221788072 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222586356 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223560702 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22456622 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224264853 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22006518 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219623428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222529629 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221139763 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217334802 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216860573 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221344192 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221635828 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220078923 seconds)
  done (took 23.121779185 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220214256 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220045277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220745812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219445175 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218674855 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22059314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217908925 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219643966 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220218473 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218082912 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219900086 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219888564 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221073003 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217961921 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219762209 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218292859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219954122 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21803563 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220762312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218509232 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.2173343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220788379 seconds)
  done (took 27.965726185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220613964 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22237068 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220083876 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219817099 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218229975 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220396956 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220337718 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217970057 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220747051 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220550548 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217921813 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221162696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220046771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217435294 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219017836 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217919387 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220921237 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219757571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221914267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219796395 seconds)
  done (took 25.536197252 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221370715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223434287 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22277023 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221827394 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22311409 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223776398 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222659012 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222319571 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221294731 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222412066 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222423742 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223531721 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223428759 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222920124 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223160679 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222874859 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221841439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22255255 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223391979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224133912 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223393046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223173191 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222939576 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223346549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222954217 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222611226 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224272082 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223177103 seconds)
  done (took 35.380610656 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224478451 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2235229 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220539633 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220653419 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220775311 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22133298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220940748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221189777 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223303782 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220979628 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223425097 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223933078 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223272763 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223563443 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22481599 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223823621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223876733 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221389904 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223218194 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221702303 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.223906183 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223099142 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225207355 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22158834 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221137063 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224094772 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221687462 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225804552 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22453458 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220608686 seconds)
  done (took 37.82253153 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242260198 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243081657 seconds)
  done (took 3.626312661 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222293887 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225234288 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224373921 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22144865 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222093411 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224706343 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224571981 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223146799 seconds)
  done (took 10.929825371 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226496913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225340339 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223868576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225032918 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226047489 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224511956 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232350362 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244400443 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228674092 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227041924 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231674709 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233272741 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228579591 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225509002 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225768657 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22790588 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226913107 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225776809 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226296888 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226674456 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225270895 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228675553 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228735283 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223258961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229833608 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235428393 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248591367 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226129999 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225017004 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229251169 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225317073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223726779 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225670133 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227218169 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225085506 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.224907477 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234984285 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244626102 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230029962 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244256233 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226370301 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22278036 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227007644 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227786485 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22656702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.225047977 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226928315 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222679437 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225093138 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230213221 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229825873 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226029833 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.222974187 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229326555 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227020182 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233353414 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.243607133 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230396369 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234607351 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.235972478 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257955271 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25058381 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227202904 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.226062005 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236842763 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251952551 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234547134 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242446548 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224368032 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226283938 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233302532 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258766534 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.251418019 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227814369 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22694688 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227590617 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2275026 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228520037 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234744747 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249643705 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229982641 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22821781 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236990023 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250414935 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.22804316 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.227882415 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228270924 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228033625 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229339906 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239667847 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246809609 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.227930862 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227423437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.22907121 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228826405 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.229171008 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.228645666 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22855805 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225990922 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228910678 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229850027 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230955066 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.236768202 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229129242 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228030254 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236391087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248249999 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228413622 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.235189662 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.228788228 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227706849 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.231227464 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234774678 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.226092862 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232772152 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.237370234 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.229317139 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.230513534 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229151618 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229121154 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238856702 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255460417 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230637034 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.23040909 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233429947 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239650066 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229833497 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23266088 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230547122 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.226858418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22834555 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231029398 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229543912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229417155 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231413851 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231331264 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.227916369 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23049207 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.231044333 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.231849316 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230925055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23057339 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.231426299 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.233369546 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2303011 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232895501 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.239235021 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249478539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23219513 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230177689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227978419 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231569876 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231467548 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23024366 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.231225453 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231008936 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.230879315 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.229801811 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231642316 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.230466204 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23104 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230823423 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235784553 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229469943 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233557533 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229855115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.226764296 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230296627 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.232544573 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230896209 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23021162 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229137662 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.233510017 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238380438 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23030547 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230609269 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.235258935 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230251944 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230254918 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23209013 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.233503958 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238533857 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230412676 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236860685 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.248232904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231292725 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.231544643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232880202 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229755959 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229246888 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.232570601 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.237586638 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242890401 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254847203 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231128218 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.236504102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231249674 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.233402863 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234070142 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229774574 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.231175354 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230036652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230928227 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232308825 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230871478 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.230264656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229904045 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.230248058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230064486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229732514 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231143163 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231121184 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230841998 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227461895 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228879862 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229870782 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230016865 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227017576 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.229762794 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232287666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.229749976 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.230517867 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.236547689 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227435426 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231581845 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2325255 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229934159 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231097666 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.231047884 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23202228 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.230938116 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236871714 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.24889071 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233107086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237067925 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.249483627 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.229565926 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.233102226 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.231327947 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228446566 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.233621154 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.238806547 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.231070493 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.231775105 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.231838448 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230436363 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230160208 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.236775807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.245977385 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.230278853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.231024085 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231301163 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.228590784 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23133062 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.230512075 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.231959177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232489009 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231839139 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.230227146 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232395454 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.232750046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.231301502 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2322798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233432991 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.23801982 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236580629 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231720147 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.234430944 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.233404659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.235223137 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.231568228 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230989305 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23215581 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242517894 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.255123623 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239089584 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251480681 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.231931125 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237600703 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25095204 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234440365 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232478723 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232723339 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231609655 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.23181799 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230283318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231440748 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233622473 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233794959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.234995829 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.236127612 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232210265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.233276225 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23278277 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.232958513 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.232575817 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.232483878 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234159165 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234257814 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235833503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.232040957 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.234333546 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239591135 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251814686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234198388 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.234630635 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.233207766 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.233386602 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.234742331 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.234252971 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.237796036 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240150005 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.236504044 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.241827162 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.236007678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243729133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.233862609 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236428041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.240179743 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.231535664 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232930532 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.234115458 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234876201 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241046495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253091301 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.236553631 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238304134 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233965296 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23509061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.235376852 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.236064221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234460431 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.236344318 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243451362 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253467819 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.239009831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236877545 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232383323 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235291458 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235731064 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.234822794 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239237519 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.2359538 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.23612443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.236605053 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.236658946 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236658638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237370927 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.236558073 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.232929179 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.237396917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243339284 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.255816028 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239760661 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.237289988 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.243762847 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255477469 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244411206 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.254908291 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.236789178 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.237655366 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.237316373 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.238780516 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.237029679 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.238254402 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.237577722 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239005121 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.241049803 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236730747 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2394507 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238334165 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.237922663 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.236888836 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247172958 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258177752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240187596 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243386296 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.236463256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.239746783 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242197556 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237959722 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.236547577 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.240881404 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248008125 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245321379 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.237814818 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.239659284 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239545288 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238192475 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.239319903 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.238621651 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.23807378 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240001782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239740391 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239726079 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242090919 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241260593 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.240095477 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24225541 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.240081272 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249059794 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.257984468 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.240906686 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239993486 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.241488634 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241585319 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239776688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241818834 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242028926 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241089387 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.24111464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246740415 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.245702328 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24423828 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241860468 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240741487 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.241522298 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.241324857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241967522 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24164821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24120798 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24208251 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.241241885 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.242772908 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.239747681 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242076386 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.242002097 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240851335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243743483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248982396 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243449495 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238100912 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242121804 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242344691 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241523951 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.242344608 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248259556 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263518178 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25210077 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.249544536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.245913372 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.242953519 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245022813 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.249778779 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.241425709 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.244651642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24291965 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.244799513 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.243574863 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.245067671 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243782985 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.248145795 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.261199237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245559455 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253407361 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.260656585 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243269172 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.244839733 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.246885888 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.244624086 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24086748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243944056 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.243287877 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251245911 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.261956338 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244504144 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245156386 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243127619 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.245862962 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246937011 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244467188 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.244518618 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.241416208 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.245163514 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244342191 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245245402 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.241299169 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243393518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.243107913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.246047546 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249783317 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242082071 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247004073 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.245781383 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245437103 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245047013 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245342255 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242840361 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.243584489 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.244937632 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245209383 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.244985105 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.247831298 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.244827401 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.246745955 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246720869 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247758994 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249102906 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.256154723 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.252407442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.244625018 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.246916997 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246750756 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.248387668 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246318232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.246023157 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246556796 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248368024 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.249571016 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246582409 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.248005273 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.248746152 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262335106 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.265070825 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248248606 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247494719 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250036236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247991188 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245015152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.249556417 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.249605739 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.250200255 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254112049 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248205584 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253142294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265812437 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.248630265 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.251113721 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.249719145 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.254189647 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.249852807 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249522719 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.247826537 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.252811359 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263852185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247675242 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258262893 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276490218 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.267530374 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250476052 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.249622307 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247645148 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.248907141 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.250015959 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250161643 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.249335891 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249885451 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.248789275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.24851461 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253829743 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250264674 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249353328 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.24984526 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249475528 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.249614622 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.247236007 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250247408 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.249910718 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249503431 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249951093 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249989668 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250831889 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26240557 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.2744515 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25038642 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250454574 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.248584625 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255315907 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.253019663 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26023707 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.257361927 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.250511859 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250387691 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.252892329 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250375122 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.25011306 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251716314 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.251358672 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250948643 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248912852 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.262650994 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274826554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257162974 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249445624 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252791381 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253003134 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253192736 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251311198 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251797732 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.252788925 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.254679188 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255078063 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253146006 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.252016546 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.254378629 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.258418974 seconds)
  done (took 739.554015054 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250189096 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249412452 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250094901 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250680243 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249471893 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250041756 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251147711 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249256488 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250349872 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249783551 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250458624 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250556255 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251560554 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250661715 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249736417 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249192759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251411843 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250364122 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250663173 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251176139 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252693721 seconds)
  done (took 27.426282921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.254407478 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250506727 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251039639 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254592568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251020361 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253187717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251867839 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254001682 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254067651 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250898953 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255677808 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254717459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251181527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.251487546 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251171607 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253956358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256482682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253044053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254287969 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25231261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253862864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253379769 seconds)
  done (took 28.734588736 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.256209999 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25567189 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.253571648 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.253383702 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.255164179 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.252828535 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.256047527 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.255017088 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255466586 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.256168686 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.254960009 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.256529055 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.260901307 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.259534675 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.257932096 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.255717057 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.402825564 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.255222317 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256912329 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256010735 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.253732085 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261854576 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.272714473 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254795755 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.25466525 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256818625 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256036785 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.255872672 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.25658205 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.257039422 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261069039 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256973096 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.256412214 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258826007 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.256762075 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.258975821 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261261568 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.256846 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.254050137 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.257035107 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.266228179 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.274508989 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256928427 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.263703418 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.276275507 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.256756843 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261015558 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.263721554 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.255781036 seconds)
  done (took 62.969314205 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.25718914 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257422646 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.25391483 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258618913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257560453 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.258511728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258668607 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25787674 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255838616 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255842013 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.258492048 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255482624 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255750414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.259330325 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.259271454 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256140797 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256997 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256923493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.256514454 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257208581 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256449351 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.259319921 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.260027801 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.258329567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259041896 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.258297352 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256460393 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.258523901 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.257737874 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.257520912 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259609854 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260597415 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.261132046 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.258290341 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257672311 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.25872496 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260503534 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.25725712 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260622451 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257438841 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26064455 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259708101 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260052578 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.261202291 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257918775 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.258506043 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257741371 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.25764614 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259395873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.261237017 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.261960774 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.259770578 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261114152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.259066403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261576482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.261097598 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257600227 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.258478638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.26388644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.260333324 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259506891 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262036312 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.259884955 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.263680224 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262420583 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.259858101 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26078691 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262705635 seconds)
  done (took 86.780382376 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261840972 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.261099899 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262315158 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262087348 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261311594 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262181997 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262532503 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26086519 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26133 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261572278 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262358571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262915311 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.262982144 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261830179 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263773233 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263624215 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261459384 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263123781 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262975943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26394079 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262444821 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262310824 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262309199 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262899036 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263677799 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263571798 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265080626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264991506 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265106552 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262232833 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26329686 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.26351744 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263040501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262980956 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.264167452 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.263952845 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263529697 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264133043 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.264265722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.263683155 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26521258 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264926475 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264388251 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265143907 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263743349 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265192911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26402458 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.265013229 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263971439 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264876441 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.26424822 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265480265 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264926185 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264056707 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264999667 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266049438 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264046379 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265208334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26542794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265733653 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264161571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.265002331 seconds)
  done (took 79.519859647 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266340847 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265879113 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.26433883 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.26489254 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266016062 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263901897 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266383641 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266226107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26700015 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.267150273 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267721207 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264582103 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264948349 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267185731 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263632871 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263883861 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264903012 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264022061 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26753136 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26490848 seconds)
  done (took 26.490091881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264610745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267350848 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266236049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265399828 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.26880306 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265593194 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.267505177 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268197695 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264554913 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267717802 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268430226 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267442743 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265647992 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265196545 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267831979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266506472 seconds)
  done (took 21.447252543 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265575333 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.267703384 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268334982 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.267874259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265966525 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.265971978 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267484962 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266807496 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266402826 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.26857784 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269754274 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268126778 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269277219 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.268411783 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265976368 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269156421 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.265490664 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.267060633 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.268872405 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.268642666 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267786111 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.267482625 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.268938167 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.27045032 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268356651 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268400314 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267030989 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.267686134 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.267435879 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269093749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.267273704 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268212212 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.266897897 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.267600447 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269490356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267774962 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269989614 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.27096515 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270687806 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270148964 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.270589903 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.269165024 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26932101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271776933 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267750903 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.270607939 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268834228 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269842717 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.2683972 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269640159 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27068781 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27144636 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272295977 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.273334403 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.271885937 seconds)
  done (took 70.961060703 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272006467 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272865676 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269025926 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272760791 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272677915 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269350488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272404507 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271635243 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270999169 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271686832 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270688364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274228456 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270151871 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271961413 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271535578 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27234891 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.270897581 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270854666 seconds)
  done (took 24.072184877 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27012708 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27069809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.272305554 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270854898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271092768 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273911968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271240568 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.273860191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27311733 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.269571981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271753436 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.273967376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27297342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273761317 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271426768 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27089554 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.272941457 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273559991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.271282829 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270643723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273329308 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273688365 seconds)
  done (took 29.172792265 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.273724716 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.273408045 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.274481534 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.287696704 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.289725571 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.295258996 seconds)
  done (took 8.879956764 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280748675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274827334 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271232638 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275112564 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275387815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271799099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272253979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273429584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274434269 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274540802 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273321895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274919019 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276123707 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272948511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274834006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275590438 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273617573 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274013683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272668982 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275474847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272603846 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275736341 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273018652 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274731193 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272173266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273384467 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276848597 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275452537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27501577 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276519158 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276809909 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274627331 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276095722 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27444421 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277266882 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277664826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274080541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2779549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27721917 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274583286 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277262779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27735657 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277152918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274745957 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276931166 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275166486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275016421 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274357479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275360144 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278880882 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277814285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27540676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277566631 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278659664 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277563554 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278213369 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275599443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27456107 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277812475 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274847334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275786278 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278417042 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276276415 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276452701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278539715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275934874 seconds)
  done (took 85.394736169 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276588601 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276964939 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27561924 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277337546 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275226456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276002301 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276443605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276693278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27578488 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277153203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279411507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276104958 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278479254 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27720543 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276886319 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276271037 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276151644 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277658047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277447524 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279752069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277322377 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276682024 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278342445 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27839319 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278344574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280428888 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277545381 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278694128 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276596017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278931319 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278195974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278869144 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278035102 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278107082 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277516212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277324307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278396365 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278493509 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279847251 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280816433 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277510609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280767608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279694246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278699333 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279316088 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279835415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278087677 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278787581 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279007073 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279997553 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279341222 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279367432 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27907514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279985249 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27873666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279493137 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279987109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280497476 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278711446 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282319935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279180262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280927565 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282513132 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279966496 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28059132 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279221118 seconds)
  done (took 85.570658087 seconds)
done (took 1727.1837158 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444794735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.397253945 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.281166105 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.332991944 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.281068048 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.289100058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304106903 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.281303276 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280435551 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.280312077 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.280843325 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.467589553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.2768713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281646122 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.281259726 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377173046 seconds)
  done (took 42.333825235 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309561981 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.292061747 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.392043946 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311590757 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309371419 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.462974532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342451722 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.291952396 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445770844 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.332142552 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.775956611 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316147652 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293627595 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.345795766 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.31058839 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.462061532 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.522420983 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.783979635 seconds)
  done (took 29.496100911 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.700910119 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.301661359 seconds)
  done (took 9.198415741 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.305088552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.290425348 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.287562984 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.286973372 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.277100776 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.284362689 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285657136 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297251113 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.653441783 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.410736051 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.295795954 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294832576 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304922619 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.288227279 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284927107 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321450143 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437652257 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.291378549 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284095445 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.292492258 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286837582 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.373891775 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.330191351 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.29091609 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.403223567 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.65442243 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295541082 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294024463 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417137166 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292843023 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.288462924 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288221909 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286867976 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.895853175 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.791803918 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311539823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.309686782 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296128116 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.283909578 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450658215 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295751298 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294502891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.285530093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.788231082 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442563676 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.404217766 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.450886185 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310552838 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289901465 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347189826 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294352529 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.289328229 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.315225056 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.025891946 seconds)
  done (took 108.358469217 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311569377 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.671719647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449312051 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304390223 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.889670783 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.892245586 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30238067 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.547976921 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.317781233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280974892 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.571675643 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76502328 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306807289 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.298157274 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.395420184 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.363748644 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282964086 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.007742738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.305770467 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.288109619 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764185152 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288945893 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290905311 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.440273067 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.320241975 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720158076 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.566670068 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.715285426 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.307920835 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.282537096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.72516912 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308304416 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348965006 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281714833 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.535329788 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625454726 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626554591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.311313492 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331190159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286955122 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.307910213 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716412056 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632518795 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319032351 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.289852178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719606042 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305516598 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.297905157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.287529728 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483900171 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.159703849 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292349779 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.558757563 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291434656 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.574564622 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346868766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353966712 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.748900923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30782847 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.347220061 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341038704 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284531666 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288382881 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282518229 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291837714 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614416167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670983755 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287544167 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611192194 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.742377151 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307858162 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807867012 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.111697509 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316970094 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.345698346 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285487289 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.805539959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764592372 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338819591 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285432267 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.600523119 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313317297 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.556651274 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30898774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286060427 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794969163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.297993826 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.292562886 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.294638541 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.296364869 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902337347 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294111298 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.5459656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.323954117 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285422495 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.286857882 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329792925 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286296528 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309910941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.289845485 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791386754 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.31107902 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.389045442 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310658704 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304956583 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.293543029 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.288765803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.281116105 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493281498 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.702776625 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.291310465 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.267069171 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.265704128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.272202191 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.403845598 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.266087009 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.546295106 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.281930308 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258336105 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.265765196 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.873460155 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.282453479 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.259809592 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.269064967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.135936919 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.471427669 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.281845218 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.257755854 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260362108 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.274370265 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.406227453 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267760223 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.279608552 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.252825678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928063827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302462178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.272868835 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.770446334 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.257709859 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.034862216 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.267157337 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249713813 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548745376 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.514159503 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.540308779 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.253850847 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.269634932 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923880636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.284068808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388784866 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275650434 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.360624587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.45061327 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.370104461 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.255474967 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.864455569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.255912223 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468876742 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.261134823 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563148251 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724677673 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275367447 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.26035277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927787777 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.976186829 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.929824527 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.252364713 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.522848488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.226747522 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.725612562 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.251776239 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.253473498 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.673894777 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.260012028 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.259769089 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.254757428 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.25234329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.413969281 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.424007878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.868279717 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.254973247 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685525537 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297174467 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.252594348 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.266384558 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.251882683 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.597218524 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332294238 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.25201997 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.260364427 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.254205539 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.253771726 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706374599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.092062434 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.260380164 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.401979594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863231463 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.273726281 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.252717299 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.876336412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.551938407 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73835705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.311588195 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.536037036 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.27199921 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.282810847 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.837511459 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335487844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.700709665 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272158205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.254510649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813685614 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.269628014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.305436565 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.248107483 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.25094117 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758206674 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270154229 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.251113329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.417876375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269364803 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517258315 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.252233967 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.269814357 seconds)
  done (took 1095.059103038 seconds)
done (took 1285.640293868 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.243238193 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.244377981 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.230468279 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.247234722 seconds)
  done (took 26.127759923 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.252382484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.251546685 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.250566832 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.249134064 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.252539861 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.25010544 seconds)
  done (took 8.669555671 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.29078541 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.244842185 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.250715743 seconds)
  done (took 18.950549769 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.438678862 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.461522073 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.567710912 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.307888143 seconds)
  done (took 9.940506097 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.251941854 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.251644293 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.248808883 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.252704586 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.254473611 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.255729467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.253177106 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.252473219 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.255239657 seconds)
  done (took 12.440205004 seconds)
done (took 77.292435983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.85870168 seconds)
    (2/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.403470229 seconds)
    (3/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.356490995 seconds)
    (4/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.270982123 seconds)
    (5/286) benchmarking ("sort", Int8, true)...
    done (took 6.2448792 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506202501 seconds)
    (7/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.24655222 seconds)
    (8/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.264458698 seconds)
    (9/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.354271459 seconds)
    (10/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.349186246 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 6.253680812 seconds)
    (12/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.262733488 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.294606521 seconds)
    (14/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.611410599 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.279597568 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.228653337 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.23471809 seconds)
    (18/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.364393782 seconds)
    (19/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.234470771 seconds)
    (20/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.236638939 seconds)
    (21/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.615829238 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.232870495 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.610511401 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.265373516 seconds)
    (25/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.462911671 seconds)
    (26/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.233866726 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.472913776 seconds)
    (28/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.340722996 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.227472107 seconds)
    (30/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.588223332 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.234705451 seconds)
    (32/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.234920609 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.255084393 seconds)
    (34/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.338949514 seconds)
    (35/286) benchmarking ("sort", Float32, false)...
    done (took 5.232052642 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.739464357 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.08055165 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.349430743 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.217480054 seconds)
    (40/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.708994773 seconds)
    (41/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.008685254 seconds)
    (42/286) benchmarking ("sort", BigInt, true)...
    done (took 6.255941003 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.247211327 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.233069673 seconds)
    (45/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.243659089 seconds)
    (46/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.032771793 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.145696489 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.260151764 seconds)
    (49/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.439768998 seconds)
    (50/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.244224275 seconds)
    (51/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.228299363 seconds)
    (52/286) benchmarking ("sort", Int8, false)...
    done (took 4.298136341 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.355700573 seconds)
    (54/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.220258916 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.541623184 seconds)
    (56/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.248551263 seconds)
    (57/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.347442309 seconds)
    (58/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.239733734 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.235511825 seconds)
    (60/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.231948906 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.270738538 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.296862513 seconds)
    (63/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.236400963 seconds)
    (64/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.029805887 seconds)
    (65/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.22907456 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.347039277 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.620544874 seconds)
    (68/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.481433866 seconds)
    (69/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.305685891 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.578905695 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.729034181 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.23358263 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.069653187 seconds)
    (74/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.661359202 seconds)
    (75/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.309345885 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.613907393 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.227097533 seconds)
    (78/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.229907074 seconds)
    (79/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.512171125 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.344541771 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.267299358 seconds)
    (82/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.261994019 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.408718186 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.449339383 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.260280122 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.828856343 seconds)
    (87/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.91710284 seconds)
    (88/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.922740021 seconds)
    (89/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.245422198 seconds)
    (90/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.727617692 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.592726392 seconds)
    (92/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.240092727 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.971496308 seconds)
    (94/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.312659951 seconds)
    (95/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.955418803 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.387921899 seconds)
    (97/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.586207732 seconds)
    (98/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280754173 seconds)
    (99/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.262201625 seconds)
    (100/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.383161041 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.395791235 seconds)
    (102/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.736392084 seconds)
    (103/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.609609074 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.956232233 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.296052621 seconds)
    (106/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.251352232 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.978564071 seconds)
    (108/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.327759026 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.487358674 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.34230993 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.972148012 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.301075353 seconds)
    (113/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.333109569 seconds)
    (114/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.22292447 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.15333645 seconds)
    (116/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.423554069 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666540247 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.662189722 seconds)
    (119/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.252510648 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.634655436 seconds)
    (121/286) benchmarking ("sort", Float64, false)...
    done (took 5.535835002 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.75930224 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.28682159 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.440815544 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.520535242 seconds)
    (126/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.348431323 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.679805757 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987740936 seconds)
    (129/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.276666642 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.50653564 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.230965774 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.576863352 seconds)
    (133/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.428221895 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.232004675 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.944902281 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.393293582 seconds)
    (137/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.269277909 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.874082285 seconds)
    (139/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.588764583 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.498683269 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.313784836 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.226469444 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.408198705 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.983572133 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.2770943 seconds)
    (146/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.583216048 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.275906219 seconds)
    (148/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.929082593 seconds)
    (149/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.292580415 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.644048335 seconds)
    (151/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.065600891 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.230875641 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.266379151 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.312892984 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.686700926 seconds)
    (156/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.261151466 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.248490903 seconds)
    (158/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.258620256 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.248019183 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.274499034 seconds)
    (161/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.62017863 seconds)
    (162/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.245846804 seconds)
    (163/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.256024436 seconds)
    (164/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.261004896 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.805445421 seconds)
    (166/286) benchmarking ("sort", Float32, true)...
    done (took 6.246285688 seconds)
    (167/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.29642474 seconds)
    (168/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.174209918 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.248874097 seconds)
    (170/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.826284403 seconds)
    (171/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.266882471 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.334789136 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.846163574 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.08467942 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.06505851 seconds)
    (176/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.066056211 seconds)
    (177/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.246521952 seconds)
    (178/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.431036989 seconds)
    (179/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.351429438 seconds)
    (180/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.049408608 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.25280471 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.276528855 seconds)
    (183/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.739406253 seconds)
    (184/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.266108936 seconds)
    (185/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.01289516 seconds)
    (186/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.233425595 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.298892583 seconds)
    (188/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.312791025 seconds)
    (189/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.227363669 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.765932117 seconds)
    (191/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.836341123 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.593941594 seconds)
    (193/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.519749133 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.274560222 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.322623096 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 5.355852471 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.328647574 seconds)
    (198/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.354523065 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.090018673 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.04257962 seconds)
    (201/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.820101333 seconds)
    (202/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.073806407 seconds)
    (203/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.358153887 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.263566039 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.257406122 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.511169599 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.903412992 seconds)
    (208/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.990845913 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.851906031 seconds)
    (210/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.257723813 seconds)
    (211/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.384666411 seconds)
    (212/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.72147959 seconds)
    (213/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.832485033 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.662336597 seconds)
    (215/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.398146054 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.273931633 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.246283337 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.294684658 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.154810374 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.690885337 seconds)
    (221/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.748234028 seconds)
    (222/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.282592706 seconds)
    (223/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.347141787 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.253709005 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.278344375 seconds)
    (226/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.611490617 seconds)
    (227/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.232787763 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.378405603 seconds)
    (229/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.377423932 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.271774783 seconds)
    (231/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.27831122 seconds)
    (232/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.509233736 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.355750331 seconds)
    (234/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.235934051 seconds)
    (235/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.258199678 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.24477803 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.348297475 seconds)
    (238/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.265710079 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.567703166 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.253443095 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.274534458 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.236851342 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.283282629 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.899516846 seconds)
    (245/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.284045722 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.232278313 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.581421895 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.6380642 seconds)
    (249/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.457932461 seconds)
    (250/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.008081792 seconds)
    (251/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.032064252 seconds)
    (252/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.446666504 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.145445406 seconds)
    (254/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.266127983 seconds)
    (255/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.635563798 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.286815252 seconds)
    (257/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.231627401 seconds)
    (258/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.511044328 seconds)
    (259/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.270817993 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.258389755 seconds)
    (261/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.285245809 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.056667145 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.351246282 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.334585501 seconds)
    (265/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.607651608 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.388713393 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.067802869 seconds)
    (268/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.354630425 seconds)
    (269/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.37679691 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.523487958 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.377412459 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.043174484 seconds)
    (273/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.279685478 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.694790768 seconds)
    (275/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.253145666 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.301081194 seconds)
    (277/286) benchmarking ("sort", Float64, true)...
    done (took 6.255327544 seconds)
    (278/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.510251512 seconds)
    (279/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.215376733 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.295992663 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.207587858 seconds)
    (282/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.270013794 seconds)
    (283/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.281846626 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.275796153 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.23929768 seconds)
    (286/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.244782161 seconds)
  done (took 910.250176049 seconds)
done (took 911.416714515 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.291842004 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283370651 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.263445658 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.287410466 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.378982485 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.289677967 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.274718433 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.266859226 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.312519208 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.315356123 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.265210005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.288242858 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.266390291 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.267673903 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.265918291 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282628086 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.26756507 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.274488294 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.283019006 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.279242143 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.282121194 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.26504695 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.317395396 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.292760351 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.271130869 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.268016787 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.268370737 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.285694785 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.378530718 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.268436092 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.274054499 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.280322507 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.268358552 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272371896 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.264995101 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.287535062 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.279533462 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.276247103 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.27159734 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.30160629 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.64891087 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.286237503 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.267174788 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.268445326 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.267166214 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.271302153 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.269387121 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.275570263 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283311417 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285601313 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.650322278 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.301110529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.273251279 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.269299246 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.282538769 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.270910551 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.273373472 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288715658 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.28913599 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286889268 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.255527738 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.281955894 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.275535223 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.289103226 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.277842503 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.657208269 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.282549153 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.277691838 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.637686815 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.288179465 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.662070343 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.2910513 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.273771625 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.282939154 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.30210504 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.273920924 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.275175821 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.272079761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.279712847 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.272086356 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.280223512 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285570562 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.273446203 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.273778061 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284874906 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.295029292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.281925927 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.270941604 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.282817116 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.292036769 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.282936257 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.282997959 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.276904744 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.266540322 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.280428242 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.273345569 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.273325835 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.275406363 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.277937903 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.282543844 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.636021409 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304686862 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.271754893 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.270911864 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.270395901 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.286326542 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.635706873 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.288063716 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.294609561 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.323568464 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.274996311 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.263739149 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.283131154 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288525916 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.28178764 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.275812422 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.270084555 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.266280714 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.633890959 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.300105184 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.274222363 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.27189352 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29036936 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.277646339 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.267557002 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278208363 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.281449178 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288809422 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.395035763 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.285054398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.306524568 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.274292273 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.277566943 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.299492629 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292216792 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.304610368 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.278643803 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292792044 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.291884847 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.269767264 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289378822 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.286352751 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.277832566 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.285397409 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.269639715 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.297577096 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28864848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287517514 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.296656776 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.396771553 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273376322 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.266995936 seconds)
done (took 215.203874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.335453663 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.26608406 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.357730378 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.275211995 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.375117188 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.381340064 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272283878 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.270824472 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.267926572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.655672731 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.268817914 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.27254068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.268362344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.270913128 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.352632057 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.273897019 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.268519752 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.620272201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.272253966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.342908712 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.272499708 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.273014426 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.272319319 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.65446165 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.26857828 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.269716011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.343502043 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.272480847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.618043536 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.266586349 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.270161999 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.620959436 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.362966351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.291054316 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.285254569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.280324608 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.375394957 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.297353335 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.358173278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.357250573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.364870947 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.31469842 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.267414967 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.273080746 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.283222807 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.277529603 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.270040151 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.300340104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.271190489 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.274493802 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.620649213 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.284781698 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.28300512 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.272305976 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.273392813 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.294014277 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.273378882 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.276349024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.364071599 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.277363241 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.336567254 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.656137763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.660623557 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272726358 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.27078986 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.273486729 seconds)
  done (took 144.445136509 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344765785 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.349852988 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386993577 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.297603966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327847721 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.391162083 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.298230281 seconds)
  done (took 10.578948489 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.282186348 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280122725 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.325578525 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.326405519 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.279761124 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.453594889 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278179979 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.289327951 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.274913309 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.32824033 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.278662992 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.280495643 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.286957066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.275835342 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325981504 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292037582 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394047538 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.276611208 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.28180267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.434092612 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.275951803 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.282916682 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331344767 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.288840932 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282476988 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.283555458 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.091072012 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277788297 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273659983 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.280772412 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27309058 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.35545342 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.277486239 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.278940618 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276576736 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394407951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.276883936 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276054504 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.276561595 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.279038248 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.279146152 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.278626555 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276794234 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.279004952 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.279694693 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.301462407 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.280364542 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.280325262 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.278234945 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.279120069 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.330941596 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.278096995 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.27543489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.278592677 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.333329932 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.287594876 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.281025932 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.274589073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.280788738 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279123804 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.437749561 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330561991 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.277950412 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.326609404 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281972632 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.280119798 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.282473361 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281154575 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336389262 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282624886 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337796667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.27903588 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467175844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.304211947 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.282558459 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.281976483 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.282340485 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28445415 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.281567369 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.287406577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.27844047 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.284418622 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.287553295 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277274237 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27995343 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44991775 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389857639 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.280144046 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.297725173 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.290836839 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.27966651 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.335667573 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283078516 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.279086521 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336058032 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.397523476 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.336467199 seconds)
  done (took 148.346238361 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.287241497 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.292503695 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.28305028 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.299360308 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.283075961 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.283300276 seconds)
  done (took 8.91711076 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287479968 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.2866671 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.280507777 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.28714299 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.282097317 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.283248129 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284117331 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281395563 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.284381049 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.280304265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.281747775 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.285927742 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.287826428 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.285941034 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.283726671 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.282147393 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.283714565 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.280051298 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.283925917 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281902413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380396142 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.28418546 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.283915679 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285217315 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290378475 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.285856152 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.29319024 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28577421 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286616409 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.287831007 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304789106 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288719492 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.285110872 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.289509907 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.286601657 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.285248963 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288498613 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.286245868 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282820581 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.285596172 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.284540102 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285007541 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.28890638 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.285099752 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.285507898 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.290566798 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.292801374 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.292529296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.286351162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.287420765 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.285359727 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.284806907 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.285725685 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.287372745 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289276263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302089649 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.289581551 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.285496793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.286338155 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.289074999 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.290555774 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.286845806 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.289493271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292920054 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.292601978 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.291349049 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.286762411 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290902909 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287115199 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.289571559 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.290926813 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.283606618 seconds)
  done (took 94.949031665 seconds)
done (took 408.413284195 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.600892293 seconds)
  done (took 7.792040883 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.299645473 seconds)
  done (took 7.49446883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.089338593 seconds)
  done (took 21.293375727 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.310590108 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.308816391 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.315837082 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.283246455 seconds)
  done (took 26.415162658 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.434882213 seconds)
  done (took 7.629066679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.281156486 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.282438626 seconds)
  done (took 13.760863292 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.713136074 seconds)
  done (took 7.911173048 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.654573028 seconds)
  done (took 7.860859732 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.311129053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.300949649 seconds)
  done (took 14.064271826 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.26468246 seconds)
  done (took 7.464124625 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.148586583 seconds)
  done (took 11.346785626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.295460874 seconds)
  done (took 7.498590729 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.356620018 seconds)
  done (took 7.554155873 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.026467373 seconds)
  done (took 9.224585083 seconds)
done (took 158.504264721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.285227024 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.294890797 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.294493986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.291827531 seconds)
  done (took 26.367140925 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.329515819 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.324775725 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.327297525 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.337318944 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.331072546 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.324245621 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.317280983 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.317469964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.335953688 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.327538946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.331804908 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.328535068 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.327693513 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.316214663 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.332584772 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.325850486 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.335748098 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.330097047 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.321862064 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326214178 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.29314497 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33664551 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.328564988 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.296889522 seconds)
  done (took 33.008941962 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.814820155 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.363420858 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.446143642 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.34676221 seconds)
  done (took 7.170523156 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.344960044 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345629529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.357150883 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.395959727 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.422624826 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.358068803 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.313460211 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.313005825 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300048475 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.350972489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.423415531 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.361505604 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.431305268 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.292817293 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.480835628 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.293065534 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.293670536 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.347193206 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.398576519 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.426519561 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.296852985 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.346023528 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.350905845 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.364171572 seconds)
  done (took 33.81037662 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.294923629 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.312050376 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.291353136 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.29219107 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.300277525 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.293357956 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.29478512 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.294549684 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.296289485 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.302555196 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.293277669 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.305998375 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295297469 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.292610987 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.298648923 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.296101322 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.302787553 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.29395352 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.295000356 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.29975192 seconds)
  done (took 27.145047888 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.28683593 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.229967339 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.640462548 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.542697562 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.290518251 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.294405023 seconds)
  done (took 28.488523153 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.36307932 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.510083295 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297124316 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.642536803 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.734397647 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.315360639 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.294960436 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.526893359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.828889502 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.829257072 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.359278934 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.360356646 seconds)
  done (took 19.265261459 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.29859709 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.297483737 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.298258459 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.311506388 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.349940761 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.311789581 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.303081081 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.292299774 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.356038395 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.366902515 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311781701 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349432389 seconds)
  done (took 37.053262887 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377907082 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334774333 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.18801619 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306143728 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015740134 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502548723 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291128016 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99767061 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.312040154 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564813099 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298486569 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390414425 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548259133 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289772206 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312395732 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.23804607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537344081 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753174093 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294225128 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244358375 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322308024 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293138529 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.28287841 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521447525 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527257367 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272991814 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.591296559 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.076219416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569599031 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307370887 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303633271 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293913765 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57133659 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936385754 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412874205 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500147553 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315302506 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.94253638 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.274476188 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.196956389 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309430515 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304859606 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302941181 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294368753 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.228151632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307431658 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996385861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.314669672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.005910986 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294765467 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544549247 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397906168 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.300964369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.865618085 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31692239 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301267949 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.298973959 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386474296 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884255301 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457798885 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306074768 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.236426692 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312310192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.194002917 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917059748 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.31504992 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.299930254 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301753227 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231032616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.215550303 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321232432 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443301551 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.319697595 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943223988 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999490028 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.318973503 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.233226133 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821337758 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302346996 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.241075535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52589498 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074341318 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232206111 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.237091275 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.228905517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978051225 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306254067 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.791203817 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317608895 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025717673 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519712237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337613763 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319514529 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521030051 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.181074561 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296817835 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.303894081 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426849343 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318665625 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99237222 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248650828 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.301470641 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555484255 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.511157703 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306726626 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.252240689 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793739794 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32044672 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.32025225 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302587757 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511166082 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.882301022 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328254907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.518423996 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323294163 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.077900347 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004768901 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309248542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.310627899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.304149818 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566884466 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.019278933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46202345 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368930804 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303261051 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301334991 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267261368 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157875115 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.234324957 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.492586657 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33030999 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.316252164 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.301583107 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265008783 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.308099423 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314124088 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.078459263 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522742545 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301229218 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583801868 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235370748 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446837318 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312098449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.526112675 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.470211407 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.321400807 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561182381 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303514212 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307767805 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319197868 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321111526 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401668448 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322987908 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.305899217 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.56452202 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.304694499 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.305868284 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405184422 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.088697387 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304409724 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.305564777 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321854667 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878793998 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294126265 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310440687 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1901894 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.319064691 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372023633 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306036327 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510551262 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.484878995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326364283 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.320028924 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.302785122 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532521522 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313393298 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.22733918 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387963127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.77361101 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903168588 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335712275 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.23750209 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.015120145 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.996063199 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303996875 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.497337321 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304112314 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511036959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339867332 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312028493 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881643764 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327420386 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253727788 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.319546008 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315595007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.311670072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304273125 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.478630739 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500925219 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324462737 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322826959 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44904409 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.321303267 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238747606 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820598789 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30925562 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306498437 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.079727531 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339211615 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.2376598 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111248893 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578780341 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3102326 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560764184 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.3490904 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.342718277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.302032513 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307030554 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337387189 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.314856169 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327621479 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.316729645 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257790111 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.75101908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875564954 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03799405 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866776328 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641439612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.334566466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.210573104 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03812129 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257461362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.963051666 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541808697 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027005447 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27906988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782426242 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.518816042 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074928512 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564479447 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544882314 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598487821 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.323163072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567635634 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526283247 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341966804 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.317458931 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.248641714 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.589552988 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849300036 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325853363 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395682411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037948378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338700447 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.094608843 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.375347097 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.972592508 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70724408 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875458054 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702190733 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312121679 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31860925 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102882916 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335675252 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.837215209 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929134026 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334363899 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.78748084 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268259248 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518603976 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.341915247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.305454431 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.809837593 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.319213541 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.571074629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560078056 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255142537 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317492103 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83232586 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.184442949 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.314114356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31233607 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032855709 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320737663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595382495 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.321410956 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.506569845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327132118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.244237023 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243891258 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.002543028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31273971 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288088292 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787945856 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.317517256 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323211345 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33529439 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163583565 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567833147 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.325591299 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890144804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55789148 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330238947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335533544 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.316174481 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310816566 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.301836521 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21018634 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.54618385 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382989019 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55319102 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.231039411 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.21451566 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376210529 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52606733 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194695202 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31251855 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560335225 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.045316667 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.315171536 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034362889 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358915619 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.746372315 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353297088 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322201286 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344383888 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399804267 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520415468 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.346670412 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325412803 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710489563 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344565313 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321077749 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.330007241 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407236746 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.566490606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.508916342 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.094188839 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897441897 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065115395 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908292511 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590104023 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322461183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323652026 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2489594 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465699062 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.843997253 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589199792 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446682404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.319186393 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366778187 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315225544 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326329491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551830036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59000888 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.190938241 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3308502 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986475741 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.202511298 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328012681 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.526764817 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797485677 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868855946 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432271829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328867457 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052275558 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608761318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405856642 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315752374 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9045833 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.33396146 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.999425123 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.321578244 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328348887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469940391 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570311668 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977922275 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.348664131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.472344828 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.091672944 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288077393 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584675986 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.774356073 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532496177 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925365307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029171231 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587506922 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388913001 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523689776 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.441042659 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467916209 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.317972589 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.209540136 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3224509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165626381 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.032950056 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.330109847 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891033462 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602612315 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.322303495 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.318739936 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350286977 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.330096768 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542024131 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037029325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545096844 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331004124 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327292313 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.894281741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891007637 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598048604 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264730933 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.32296372 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559080914 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575233056 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346227253 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.789020611 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.033232871 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858918962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.312972264 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344082996 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323358307 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028144907 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902220948 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.543130825 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808630976 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97970932 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333224933 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604794604 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.329956931 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329382605 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609253581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.326636717 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32595053 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538682419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.926015149 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093787512 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.345493545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333610599 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.267357362 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.545094084 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363463147 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260913612 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330810758 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.724812873 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349259144 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45150204 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337957613 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.324728766 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336282141 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.08646011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59954996 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.327926674 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.304643557 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.314253098 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340002838 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420534831 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877830684 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348061099 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99764879 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.670848761 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584436741 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338986364 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.31009152 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.328096751 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329933013 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046689663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304287867 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333434794 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879586592 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.340032216 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.34626978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329977227 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.544852818 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53817936 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326461992 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54219525 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345716942 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34877444 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.22566041 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093400323 seconds)
  done (took 1643.354493638 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.354191146 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.347455771 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.356465741 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.398966159 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389567572 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402849338 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.431022381 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.381645955 seconds)
  done (took 52.304803655 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.324851577 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.48990493 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.355167102 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.334035241 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.341020709 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.326760774 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.77908681 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.356871102 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.340075475 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.333098465 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.337573406 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.344563681 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.965176491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.340893358 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.334355751 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.3127364 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.339155401 seconds)
  done (took 65.197447769 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.301649482 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.603540369 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.09391711 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.330640226 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.346343215 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.328268908 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.81335117 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.343127629 seconds)
  done (took 58.397824013 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.343744569 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.342561725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.340883373 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.340430006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.347408373 seconds)
  done (took 7.949645046 seconds)
done (took 2040.712720419 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.330967153 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.332049855 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.330563086 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.329090969 seconds)
  done (took 6.55714234 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.305716215 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.007837956 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.314030465 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.329096661 seconds)
  done (took 18.193870998 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.327516642 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.334368445 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.002426337 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941999209 seconds)
  done (took 5.18518039 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.075061221 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.093278893 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.072451962 seconds)
  done (took 7.481595764 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.325228622 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.334300639 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.330572842 seconds)
  done (took 20.227057934 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.610273214 seconds)
  done (took 2.847664012 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.473838642 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.522873609 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.640956824 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.648117025 seconds)
  done (took 7.52697034 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.710170357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.699487996 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.511901728 seconds)
  done (took 6.158824481 seconds)
done (took 88.078583013 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.058769568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.702843417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.527889291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.078024429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.554724037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.529617659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.743831379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.040493119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.60179849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.539140735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.074634734 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.555946505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.480084178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.70092368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.483104106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.696306755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.559808867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.105328511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.750851115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.92098611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.750259018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.667321676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.902337399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.746043818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.568107261 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.476540267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.248636562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.699749944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.9218304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.327028743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.4897842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.094699984 seconds)
  done (took 189.835709941 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.329768166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326936393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.32900979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.327747941 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.345803261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.34100257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.32884029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352524175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.327708387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.335452798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.329853533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.33089451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.327405772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.345597332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.333057515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.343191241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.330124247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.337310275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.336221512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.32845263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.344376476 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.3581448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.331588494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.330585966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.350249456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.329380213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.328973234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.328796776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.343040011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.345631381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.337845433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.336473061 seconds)
  done (took 203.990193812 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.341900662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.332838538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.332969915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.331623057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.333807743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.337611858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.333540283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.34523029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33180646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.33960502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.359815135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.330756319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.345824357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.329211673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.344833175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.330081293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350254394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.350792233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.337753443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.3299983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.345792075 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.353667061 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.342639234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.343363289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.338719533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.350236336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343261078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336668076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348891023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.337727636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.33803534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.362529679 seconds)
  done (took 204.167788257 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.537592621 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.3402989 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.343976813 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.294950898 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.343989042 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.340831866 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.332967908 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.526595568 seconds)
  done (took 14.30279311 seconds)
done (took 613.535716397 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.58381994 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.292955954 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.533992964 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.367402228 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.078772824 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.381036818 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.36249815 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.526783247 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.255398078 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.535272168 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.611473641 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.378418098 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.751540351 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.367061663 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.616256112 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.465585477 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.19945788 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.314524953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.673260322 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.853499271 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.618788945 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.827452873 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.55186804 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.25355304 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.764037896 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.829975304 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.030805421 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.199111573 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.383022952 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.678334171 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.938547215 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.276036927 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.418156627 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.427768364 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.485953683 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.460741718 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.256902811 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.417062328 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.565202529 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.604359523 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.877899175 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.085118412 seconds)
  done (took 91.342448407 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.330763836 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.332576951 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.324273949 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.325935254 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.331199163 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.326484296 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.327635157 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.327852738 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.329030829 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.325744453 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.327332163 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.330072466 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.326008405 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.324847065 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.329747601 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.332155186 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.330649408 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.328592295 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.328344608 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.326927748 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.328555188 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.325740693 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.330791779 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.325883874 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.328636941 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.328028729 seconds)
  done (took 35.783966681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.351889309 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.59210839 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.756079263 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.362269799 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.349826865 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351897177 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.425854463 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.358701861 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.353639891 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.355757164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.516262051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.357814498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382533808 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.778446418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.356309079 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.346076851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.347266671 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.350388666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.596748313 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.358053499 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.445170711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.357144576 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.425761136 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.365750677 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.371401006 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.349028002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.354492032 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.910748324 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.373348975 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.521673909 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.119966758 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.427430127 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.857941377 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.78765752 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.118868532 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.361021505 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.351483841 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525626275 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.361947063 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.35419792 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.427842253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.356806194 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.764059138 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.007486578 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376766588 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.353658364 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.930645831 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.548199933 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.597828047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.363279949 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.783945143 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.361446925 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.353119159 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.352056142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.589162624 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.364960005 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.349442848 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.909189919 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.384650724 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.42967864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.356996231 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.355023045 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.610389978 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.353407922 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.603148347 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.355208043 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.357509838 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371307858 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.764939276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.364715291 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.022963862 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.37669485 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.356069334 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.523596888 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.602999203 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961013969 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.38044057 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.617410903 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871451045 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.453352022 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.36773241 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.903427328 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.451978434 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.365298634 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.356480138 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.35684405 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357738991 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.401392895 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.424540922 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.970321374 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031330496 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.927971806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.452399361 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.376587475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.355936429 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.907844212 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.38121085 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.352982404 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.760646755 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028649946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.378863416 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.366552377 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.025937682 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.384297399 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.436719897 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.368741613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.770978353 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.365688917 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.411102155 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359251895 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.365985191 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.3752173 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.434647777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.367631564 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.36590537 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.997256694 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.560648216 seconds)
  done (took 178.776037488 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.355228734 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.363739704 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.358094897 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.36637409 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.3529946 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.36245404 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.358321655 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.354231892 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.363904508 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.357470197 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.358499641 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.35989386 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.354881286 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.359965981 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.378454904 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.357818466 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.964790888 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.355349502 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.356667925 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.365053725 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.140908355 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.361940468 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.35403523 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.36815322 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.353793664 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.353949427 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.361042758 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.370789315 seconds)
  done (took 152.733458237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.36295008 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.912564214 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383192165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.486498326 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.381786416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.356122487 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.486130213 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.424149533 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383798242 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.359509219 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.355192977 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.648646524 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.35975953 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.865826742 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.552020595 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.506647061 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.870972582 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.384500282 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.357099946 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.357346078 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.486345379 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368096584 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656394609 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.919773973 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.383900183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917045603 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.347258049 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36167393 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.359005466 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.91979648 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.379165639 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.656501142 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.438885231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.426103204 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.938514597 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.892895941 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.887968023 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.508436869 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.363732148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.357414623 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.359732691 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.342520241 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919297471 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.385557892 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.362334727 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.909766542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.383855593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.360392393 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.363275118 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.356636435 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.421848041 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.445626297 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.685937515 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928569584 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.455902962 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.378223451 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.486474878 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761526973 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.367989799 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.868472727 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.351288622 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.919773921 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.384894308 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.342645145 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.359684817 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.365545047 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.502686217 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.488863537 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.878404715 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.385433659 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.874398678 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.529354039 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361344128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.358602473 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.364232059 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.926338169 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.893647624 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.528912398 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.490949672 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.550864644 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.354361751 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.363213342 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.344739242 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.43534026 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.364132443 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.929378526 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.89204203 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383020101 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.36386536 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.363792914 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.361539631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.533405807 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.944821888 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.461652275 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.865750603 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.689586416 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.671786532 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.37187973 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.422254558 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.385197034 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.666655353 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.371399183 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.41919059 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.830407508 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.669525187 seconds)
  done (took 162.493181498 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.607377261 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.539560427 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.454046288 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51486319 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.953952337 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.926201278 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.606921204 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.497369774 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.478264266 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.621543942 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.504692538 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.461940881 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.580305146 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.437423125 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.086257085 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.446615656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.47663103 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.515618335 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.530126652 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.348938517 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.03472694 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.641195333 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.549136101 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.224252757 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.460693722 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.118653964 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.926217076 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.893189741 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.53742487 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.639056066 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.905170323 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.467736476 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.331355674 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.039386741 seconds)
  done (took 65.629231367 seconds)
done (took 688.001126219 seconds)
SAVING RESULT...
DONE!
