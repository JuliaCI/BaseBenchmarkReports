cset: moving following pidspec: 16437
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.225627569 seconds)
loading group "string"... done (took 0.459120783 seconds)
loading group "linalg"... done (took 7.492666179 seconds)
loading group "parallel"... done (took 0.168478088 seconds)
loading group "find"... done (took 1.159063685 seconds)
loading group "tuple"... done (took 2.069441521 seconds)
loading group "dates"... done (took 1.316668295 seconds)
loading group "micro"... done (took 0.242861839 seconds)
loading group "io"... done (took 0.723719107 seconds)
loading group "scalar"... done (took 40.375208261 seconds)
loading group "sparse"... done (took 12.383839467 seconds)
loading group "broadcast"... done (took 1.100863349 seconds)
loading group "union"... done (took 13.617012601 seconds)
loading group "simd"... done (took 4.748123138 seconds)
loading group "random"... done (took 9.574393526 seconds)
loading group "problem"... done (took 1.95066957 seconds)
loading group "array"... done (took 22.341324843 seconds)
loading group "misc"... done (took 1.416557319 seconds)
loading group "sort"... done (took 3.566724361 seconds)
loading group "collection"... done (took 19.30758211 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.5105526 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136925048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130811701 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146946953 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202586456 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143100293 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155764779 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112941064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961819565 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184350999 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152181734 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508865113 seconds)
done (took 5.092123791 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.220981549 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093471157 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102890948 seconds)
  done (took 0.865323049 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077224308 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14422676 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093607357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077739094 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093356288 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077069573 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094493166 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077949153 seconds)
  done (took 1.334822488 seconds)
done (took 3.181225076 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.729664929 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276205576 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201614473 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459221715 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193578446 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212469723 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674810423 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.372951023 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250424979 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09933722 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141821426 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386097239 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135329032 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680219308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088632496 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122434137 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177216105 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.469566695 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081509657 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109599077 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116797988 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140710443 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130447977 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090456966 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184327483 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080987809 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192548098 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107003569 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079979029 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287757982 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200260174 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69335245 seconds)
  done (took 10.879277593 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108974765 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132371445 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097776766 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138183567 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132849666 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098870341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08560245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096181893 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120584942 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17413655 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1142081 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135633755 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093919641 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081854913 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113756649 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242609128 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120449961 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103524419 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099483655 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103174172 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120435947 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112572287 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108117866 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091946936 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165641607 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220096438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112029738 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126853934 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097084039 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113120293 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144311761 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144237462 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095583549 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079721467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169849634 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125331883 seconds)
  done (took 5.108451884 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185748389 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119529528 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166381921 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162538828 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138952825 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157456402 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11180337 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.226292042 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.169361487 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153244662 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160998413 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094603724 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139042161 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098359373 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096572341 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081240782 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096076724 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658985857 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161959491 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131740508 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097310588 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102933692 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099714429 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363705336 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086045021 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095330209 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080293588 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081390351 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158121578 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081483927 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.148150025 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10124152 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100319525 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131307833 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19669318 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126154758 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120268022 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096473541 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077405732 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.188821679 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086997043 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096117099 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102355601 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134651913 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132478294 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096503497 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079754998 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217230407 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081405946 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112514915 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.928401363 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181918978 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090327661 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095415526 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317615905 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09730389 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096501613 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077245971 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267596126 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18109965 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096774213 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078624943 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095792496 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080688358 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395298316 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080485167 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.754418625 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084083949 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110863581 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081892342 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09579307 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102209206 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087119932 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113421088 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078633968 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097729883 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078077409 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095587961 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080793108 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107463181 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101229949 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079336532 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1628356 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079331397 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113052382 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126019328 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082778898 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094538576 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128513313 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081732307 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096320135 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13241435 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081018532 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094088265 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106760214 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082235701 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141879838 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095720102 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171748716 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079992299 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125486775 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101471738 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077003803 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128543616 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112073292 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081939617 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101124604 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077935664 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094760303 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148664951 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095472804 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079971626 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098937163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106567308 seconds)
  done (took 22.506685463 seconds)
done (took 39.170395747 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324009813 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101150691 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101564417 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101823219 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099307159 seconds)
  done (took 1.475251773 seconds)
done (took 2.196569006 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284027386 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170603313 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094083731 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164978342 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092282222 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173288603 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158237453 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111013894 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216048504 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077236966 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161627572 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0931523 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075510195 seconds)
  done (took 2.61558453 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094486926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113921634 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0819855 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110661946 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075950822 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110958645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092164642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116123835 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108988105 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084214989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092611588 seconds)
  done (took 1.799673691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093091632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111812616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081505718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108893467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076119207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109370399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092259066 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114684158 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109148469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084680092 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093212245 seconds)
  done (took 1.791126024 seconds)
done (took 6.915626445 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090557951 seconds)
  done (took 0.802504765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.914789804 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.81947079 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112539126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147923049 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299496494 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189887165 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469662442 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123619941 seconds)
  done (took 10.993572728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.143893098 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083935532 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102444662 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085381941 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103278892 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085296286 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097846517 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099275056 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081462795 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101938634 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082950589 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100306501 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098094875 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081778043 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101518242 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082186413 seconds)
  done (took 2.312920729 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118959894 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11701287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105303361 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107217369 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085814439 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104069686 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106101605 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087436403 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101672194 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103343666 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089893191 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103866782 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103255709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07926563 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104934696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106822403 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084907444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104380756 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105959909 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089317246 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105576166 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094998236 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085828111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105276924 seconds)
  done (took 3.228378283 seconds)
done (took 18.05437855 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159035061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108117923 seconds)
  done (took 0.990863751 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094099541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111352744 seconds)
  done (took 0.931491163 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096892289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095213486 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121068045 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10833033 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079859963 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095940516 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118047288 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079912217 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095515599 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080052505 seconds)
  done (took 1.700383856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082279385 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108264267 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100853324 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094668352 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104178217 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094396698 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087877438 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098711003 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109467511 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076945355 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101441152 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112458623 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085179664 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115479591 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103323847 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082271539 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101129375 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098895377 seconds)
  done (took 2.490601971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078824573 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096005555 seconds)
  done (took 0.905110457 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079514063 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093550524 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080486781 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096439203 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093789244 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075269111 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093026948 seconds)
  done (took 1.341921483 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.450041977 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118144409 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269082585 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083887128 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118782906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301459639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097245899 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083425631 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101897479 seconds)
  done (took 2.411588984 seconds)
done (took 11.500737452 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092220743 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116470518 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112015196 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462445264 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106581142 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096879706 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158397753 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248878735 seconds)
done (took 2.12812202 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148312857 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323871072 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112696288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066408966 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093945043 seconds)
  done (took 1.333638095 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078528854 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099066797 seconds)
  done (took 0.911779124 seconds)
done (took 3.132797965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079663035 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.130752152 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079224911 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095968077 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079396987 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094950574 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077153804 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097436118 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079212228 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095468475 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092865152 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07943725 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096534769 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078945076 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093205659 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077687559 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093492949 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078905194 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093344229 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076820465 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093159909 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079826734 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093451792 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076867119 seconds)
  done (took 2.883402846 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097737989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097460567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102418785 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08426794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100975668 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085536928 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100743405 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095901275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085706016 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098561314 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098995623 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083012561 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098917664 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08462321 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09850585 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100045808 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084593333 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097118728 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082800976 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101003363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102163123 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079685561 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101637108 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103312143 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082303893 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100056553 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082531634 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096875587 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101616675 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082716854 seconds)
  done (took 3.551379775 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084682855 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093487512 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077912575 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101690474 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077600947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095944639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076418425 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095413971 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078614653 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094310615 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078468595 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094036611 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077776196 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096060283 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078793317 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09845257 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107895546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076968309 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094673935 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078309486 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098062351 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076994497 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094798359 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076951236 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093856497 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07764501 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094767789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077133934 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094951889 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078002597 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096832657 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080380982 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094164036 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084025643 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09747668 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076496767 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098045672 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077420477 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094754029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093967991 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077093631 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094114182 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077562864 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100163725 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077153591 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096653923 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078094151 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096521788 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078064621 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097806765 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076577832 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094907757 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079721987 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095372131 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098130935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077055458 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095233948 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07664655 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095185246 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076322491 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093351865 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077395256 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096190459 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078177174 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109833736 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08404926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094984715 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079670842 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095372572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080016832 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095471642 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108064748 seconds)
  done (took 7.08855496 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082545822 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105442731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079637599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096686749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075985979 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095746902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098205127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077723817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096713934 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084621626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095140185 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078751677 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096674681 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10747795 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077860752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096751907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083782568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092821381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078475428 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098187795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078452311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098839568 seconds)
  done (took 2.72147965 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207507944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104306209 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140661686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106086864 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082285419 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105165865 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101266414 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08635977 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101658415 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082675571 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099305813 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101540871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082627938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099270274 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099997823 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084773197 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101257409 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083906622 seconds)
  done (took 2.619585519 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092293211 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098545313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102658308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097539002 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098244112 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083714238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10408651 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106329613 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083223308 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097717141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090286757 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100508919 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100237317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080871992 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100497521 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081407164 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099744499 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080955896 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106976784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104111511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102874708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08970803 seconds)
  done (took 2.853121952 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09682507 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100416757 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116575823 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082503977 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094092091 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078533797 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104486841 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080108372 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105277052 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099589505 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079755519 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096303477 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087471488 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098018633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102829341 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080796603 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100115217 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080905604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099594243 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076898051 seconds)
  done (took 2.613360376 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102448744 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099977839 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098954405 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091593622 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099093016 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082232025 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109163929 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099346751 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082220134 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123210818 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099822544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082124824 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10820084 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104964657 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099318333 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090871029 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107446259 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10834854 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082618895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098447151 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123592612 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08202505 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107354027 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098940288 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.192998391 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09916978 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099222961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088916291 seconds)
  done (took 3.617029562 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080724784 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09843071 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077922458 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096346515 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077932535 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096414109 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077928774 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095467135 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079897072 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096054409 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080519799 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096925515 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080468722 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098044101 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08264376 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09829464 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080783424 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095345259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078834423 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095476055 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081020825 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098483316 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081500994 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095753948 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077890685 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098120788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078721306 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095285755 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080719122 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095181162 seconds)
  done (took 3.403543314 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090378989 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105497125 seconds)
  done (took 0.952127184 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078479952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113374476 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078676775 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101846506 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085390216 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098859494 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106748194 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086011214 seconds)
  done (took 1.505722705 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094946792 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109591044 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08309644 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111535181 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109272552 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094172003 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158716652 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100517182 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086667031 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096564164 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094049193 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097589905 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104674042 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081308326 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104783982 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087338765 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097028662 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086846922 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102007832 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097453966 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083179865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109992437 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083582378 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095608304 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083504381 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109106308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108674675 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082867126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101427222 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108041059 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086503315 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093198797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081184507 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099719 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08055261 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107538821 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111308042 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084553141 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107782143 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082691196 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111321695 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094134563 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086634594 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105199357 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092282032 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098842306 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083119561 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09478954 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096205496 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083339257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093911246 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081353532 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093024005 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088474338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102747996 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111798361 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079391794 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100159405 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084225551 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102138757 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088268104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100932745 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083844212 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098624928 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10535593 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085196421 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106511778 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077019935 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093280104 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079714205 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106735455 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120842614 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.08924911 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100082574 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083359529 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097072554 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102140109 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082517843 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105690692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089501102 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099911259 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105708487 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089426089 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098801514 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084507621 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106273506 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09796489 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082880991 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096016665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095901747 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098064399 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079213295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097446158 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108073464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085303518 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09851601 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079207414 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106408951 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079775493 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100527056 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083455978 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100129477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108187711 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086975391 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105588782 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107131283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089428086 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100143231 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085418442 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096127632 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083097213 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101912339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088600466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092585001 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102716195 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082270973 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100102288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089490167 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098089887 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081368989 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105989516 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105352596 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080476433 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096355117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084895905 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099951126 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085606706 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106608112 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098339124 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077282201 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094858439 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085277788 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099301929 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086039394 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104725884 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102212852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076402701 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097564081 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086220691 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106285571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099328186 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082722306 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103751724 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08262916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098932296 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08756828 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101552751 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081347332 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103703545 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101932513 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077125392 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103481715 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085227831 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098033568 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085320542 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103444044 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102018778 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082814782 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098131606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088081415 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100253634 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081254746 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099046791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080214912 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108531619 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102647339 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077727934 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09692432 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089574414 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09725948 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081153437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098516108 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10124595 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082067516 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098320354 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081575294 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101180412 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093891841 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105081035 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101016123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086749544 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109800471 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082759658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101275989 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099889758 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083069065 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101295684 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088967615 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105223182 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105620064 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084741267 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097404306 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087851736 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107068594 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081457399 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098278409 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080957995 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102533882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106469726 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085894065 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100049108 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080731723 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100017035 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104252274 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084207181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099548782 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081734642 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105349537 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08138648 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106399906 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101460188 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091621368 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10333712 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076507751 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104166263 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097641013 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088173476 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095843569 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080192746 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099084336 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083443102 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099412461 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084741872 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095107237 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089457202 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107652742 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100694062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081129268 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100363189 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091172706 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101788522 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085796748 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103131081 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105713427 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094903782 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099682397 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085277217 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109205369 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100451569 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075935563 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10493012 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080592861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099417135 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081473529 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098093259 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08496395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108785661 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105734706 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076194432 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102925863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080824462 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098531026 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078270467 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106323567 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104896506 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083640001 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109645595 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084199343 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101435227 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085913246 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100285249 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101435082 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083061583 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103857575 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083820053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103299819 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082098274 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101892606 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09899537 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080238829 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101893217 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084569425 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100787092 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088655328 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099897843 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082037192 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10286162 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101537742 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082466261 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100542963 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081914753 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103455055 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083032767 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100779798 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085207961 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095660932 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108381282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082183666 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108456331 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082638274 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097532137 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087762986 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102841714 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105973371 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083257765 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101696418 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084118931 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101251464 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085224052 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109801691 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098450998 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090950168 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106031548 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083334716 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103609293 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08265433 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101661884 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080916417 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103055129 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10261667 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082596646 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100168398 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087381656 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103477438 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083363623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10250663 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101003144 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082125373 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101666293 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076459782 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099768491 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082332814 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101244733 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090399933 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102574849 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103942229 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081523393 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102186575 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082096555 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097764791 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090610217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110145535 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101802069 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090582977 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099725158 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083855708 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110204883 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095603802 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080786099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099145872 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080216777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109170629 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08408107 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109232405 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083519389 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100008171 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09838221 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083580794 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099431039 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076931652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098539295 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08629399 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103300763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081084398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101331129 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085103993 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102663993 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107698422 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082782295 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102424539 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083603472 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097462822 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081775334 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100224863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085771742 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102997255 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099479597 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079632322 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100976442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084995027 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101545253 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082111062 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102845861 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098050001 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101221702 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103578747 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087715916 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095814633 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085941477 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101485183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082917445 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100525218 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086237188 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104776786 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102682753 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090125502 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101090866 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08307571 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100753776 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080243526 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101886775 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100841537 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083225824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099660645 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084945157 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109017127 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080700093 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102609849 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082806138 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101744042 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105656215 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083704728 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103805629 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091204864 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104380063 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102280772 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088839757 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105180704 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086718633 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101650023 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084510229 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106992682 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10046747 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091557801 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100989205 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085074699 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102233738 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080193691 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101187007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08254889 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100477733 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106625565 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084213408 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100259852 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081700739 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099648358 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084522645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106018346 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109382864 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085112978 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104920785 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078746239 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099208992 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084981745 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099573181 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084119573 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105082682 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107475899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085153867 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102254265 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08192732 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10915986 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088582903 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10685731 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098560747 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088557428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102995967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085662591 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102947985 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083553685 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10397059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106566684 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084894293 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101071231 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091499264 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10607405 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084673571 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103448119 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082969235 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102421202 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096935993 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08511974 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103796167 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090045589 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105100782 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083584454 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111605894 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101580494 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083511125 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106385314 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083223397 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108610885 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078891286 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103346537 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103342609 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084612772 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096928702 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083050817 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100024552 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086011565 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10127055 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079431804 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112316225 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109805501 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085958434 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100980081 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082671312 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097297947 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079422176 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102236461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085153822 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104118219 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110549086 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082763686 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101013787 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079702087 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102000381 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086888092 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105760333 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081715029 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097945878 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082206402 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105548666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10925677 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083117581 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102259189 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087371423 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104449449 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081524172 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106056775 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098239244 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087107107 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11271578 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085069825 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102613031 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088291706 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110431966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102370899 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079984166 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103816516 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085908128 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103130922 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085034598 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104017513 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117020072 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087788191 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101527095 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082925006 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106036601 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082592989 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109538997 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104002052 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085837442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106904548 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08599929 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11147552 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1050032 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089871103 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105649297 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085761182 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101797858 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08317008 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101493903 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081853714 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104321391 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10427746 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088925821 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110355815 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082285354 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112354996 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110555863 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088359821 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098822874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082787651 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103063124 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079179764 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10431178 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081710009 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101810925 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099934644 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082955332 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103605085 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090200505 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103994954 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084664764 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102290306 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077568923 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104120098 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105501753 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086980296 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099258068 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08446201 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104305407 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089405876 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107170366 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084444387 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104894624 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104151961 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085225003 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098117726 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091076495 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101883459 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086372128 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102192854 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08450499 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104432186 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106855112 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09011203 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104625179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086359326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11518279 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104834798 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081964601 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09962244 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089898608 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100990033 seconds)
  done (took 57.368669972 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145154091 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080588097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099440807 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079747877 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112558839 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099130603 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079200212 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099422893 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081108942 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102006869 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079181004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099092569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108684529 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123256241 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092777948 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103090498 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098130701 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080546878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097968209 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080702566 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107952244 seconds)
  done (took 2.854782345 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105466685 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116606923 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114670191 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118512218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089612559 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114496703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113558168 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115018188 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099237656 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110199218 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118989339 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114945345 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091258931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110612281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111117944 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09365563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11855906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108941832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115604887 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094877223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112945395 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114892124 seconds)
  done (took 3.208575102 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083650006 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101888667 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084527502 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098850393 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083474303 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098056007 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088211875 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100474851 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087071061 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102336102 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082180924 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101956599 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105125682 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078991489 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101762696 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081547731 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152739386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107331581 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08299505 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104963477 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098818018 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085056727 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097959562 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079954651 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102188966 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087530642 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105011815 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081653072 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103035291 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082408477 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103925305 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081284857 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104292764 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102864152 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082557415 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101750097 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084349059 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10150595 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078917397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100494417 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08528843 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09845706 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085161599 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104350922 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081888983 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101865467 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084633262 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103090921 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09857094 seconds)
  done (took 5.443995014 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104376871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159237682 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085760361 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143359023 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121327044 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112770809 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088002767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141715372 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10320237 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083036909 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122362895 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1195034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103560359 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089993138 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109837182 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103259049 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085287418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102570458 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108785835 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083988962 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108204891 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089631804 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119371662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117121282 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107729389 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083788508 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103334683 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108995102 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096491363 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109623917 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109067638 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090944201 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12005994 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104673592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083681403 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105982586 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121235907 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104137266 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087009137 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101602612 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086756854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109162214 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110079103 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100839122 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104608838 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109586705 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084998538 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100994327 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117169854 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086953977 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112929183 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118576085 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107814487 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084800259 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108588964 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1201183 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084754527 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10219916 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08796063 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117315943 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10194871 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088055858 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118540512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105557403 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112059163 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098729375 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108441571 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108358063 seconds)
  done (took 8.090530604 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093243591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110561482 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119959856 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120084588 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091224249 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11150819 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110374444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091460076 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110472261 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116197176 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109874722 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133623135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086478397 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115194419 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11012301 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091820907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111244883 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110901748 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091620387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110345493 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111038274 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120713987 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091128696 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120516922 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141549392 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106209966 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090096208 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111122175 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120743582 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110583301 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123216905 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092079154 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110591546 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120046711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123211505 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090628894 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10344657 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11045728 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090710402 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110620868 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106197421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10064814 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110624132 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105690068 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090777862 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110833443 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119736164 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123639475 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114019449 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096244302 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111558684 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119147081 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110209359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091417178 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120051835 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147823912 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120470034 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120525353 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111986336 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100063965 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120283433 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128100782 seconds)
  done (took 7.64240392 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107561515 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115090216 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11720169 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100092267 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08269949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108613114 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082702856 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102294719 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11438545 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09460592 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117395449 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107924683 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111869256 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096973186 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108642678 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111980443 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088770072 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10914272 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113201274 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108257576 seconds)
  done (took 2.919741394 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093207774 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12289536 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084801527 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11156692 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108164018 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09140324 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107246034 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106714973 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085892903 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107499475 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09611843 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117349425 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105016017 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090921873 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117295722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111118634 seconds)
  done (took 2.477301281 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096133557 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116449602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12133551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084460771 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103691881 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08050656 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105287857 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100441627 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081032055 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120430583 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085235789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108205777 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104736523 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084857764 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101190305 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087822768 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100965257 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082657415 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104700268 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118486145 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096262786 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103835506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104351496 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086467175 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104926095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089637108 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10639395 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102958775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083426064 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105342415 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084326984 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11306798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10169303 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084423369 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103135173 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082152874 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10477666 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084657358 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108068573 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104084047 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08314465 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104156466 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085143937 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105804201 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081050656 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10577536 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101760466 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091158131 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103278954 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084557802 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10457211 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107100519 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086145873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115540518 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088438175 seconds)
  done (took 6.214735851 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098725553 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108421489 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079989964 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103408343 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087272867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107935902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108754124 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087757928 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106300153 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082391799 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107101924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089450009 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107714794 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108216384 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086730439 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108440962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080086216 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105954795 seconds)
  done (took 2.596555959 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090966812 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104418217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092617242 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105274791 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083956168 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10751436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080537429 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103686451 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103158553 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085023666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104147398 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087389575 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103383394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087117028 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104673998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084489096 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107793119 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103547572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085080711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100705702 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087409765 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102837388 seconds)
  done (took 2.943382859 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118014126 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12419703 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09351659 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227866251 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103575474 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131540093 seconds)
  done (took 1.627958185 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109238064 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120690738 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105891668 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107749782 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114287532 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1074582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087090536 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107300126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116566959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101363877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107890844 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117089737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117634777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096833611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114864828 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113537963 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108184834 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087548616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105290976 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127979402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087902139 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117188978 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108050846 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087377392 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108849423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116984112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11673251 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121121442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087950048 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117631188 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11261927 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086905269 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117951376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122057169 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108474456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096933496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108020243 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127512186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11450978 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096785193 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109070942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115088137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097712843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114138296 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117020269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107317921 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092098297 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107271323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107516235 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134869677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093616966 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117211839 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114304219 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117962752 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117472975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133686 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101642896 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11730962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11449793 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121566828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115441065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094919029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116241914 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122233434 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114500696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117525317 seconds)
  done (took 8.101609644 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100739852 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127181792 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108372393 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121711207 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096415994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107813967 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107061669 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087914306 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107505846 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106201572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150706553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088034126 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117847355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117458918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107717886 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08844258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107453959 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118257213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086528158 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133819827 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10730135 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117516961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117091085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09671853 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122624372 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114359406 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107997637 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087550877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108084528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107353259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092747393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108987653 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117860127 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086516693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117071303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107257427 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086788229 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115108931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107442167 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114080961 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096652048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128610422 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108017509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106811221 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12214369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087783258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107569075 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086177171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108616761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106034395 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101218942 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122374526 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122395903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117268632 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108696564 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088573932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109010149 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107568532 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087357326 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115060691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116977223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107369262 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134464111 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088941635 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107628836 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118122436 seconds)
  done (took 7.975900502 seconds)
done (took 154.009657525 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098287509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135495544 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09552875 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167995093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105930678 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119359361 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137792163 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097641739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105596445 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085912113 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106495518 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08808804 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17066004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084907911 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106464654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107133953 seconds)
  done (took 2.647711274 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199041723 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253631674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102306281 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105635072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088448581 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110508959 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104297038 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091026483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108937053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084725486 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10838669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086318866 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105723857 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085886602 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10994795 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088185591 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105787969 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087998283 seconds)
  done (took 2.868850864 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114872014 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145751162 seconds)
  done (took 1.105566715 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117731935 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178743103 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317585109 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15496052 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106271672 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126973742 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155945625 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129912608 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196727998 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122109703 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121842731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097405093 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138794869 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115545556 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094919873 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11770918 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140426307 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093010917 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115104677 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115219803 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116541149 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106193793 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114462072 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093097568 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18115752 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118336507 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084804935 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106488607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114920917 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093694012 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113504422 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124433737 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097796976 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173708899 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101886949 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175958053 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097747735 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11437372 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114449278 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091375392 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11847121 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117310482 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104231059 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117721448 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084788784 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119292785 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105892112 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0857176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114206137 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097178576 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115553492 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112032576 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155496586 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11844614 seconds)
  done (took 7.497244603 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789380397 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163113598 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08993962 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881468412 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138196969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103065342 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778014223 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132950475 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234232785 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760189777 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133910939 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121740379 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227825276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23651365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951641856 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311910169 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670811111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101916918 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149016918 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153173974 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118904401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137007486 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129403375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429066502 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095970053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11180787 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116484516 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099038179 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158630461 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124888452 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114283002 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177020736 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247964248 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207235945 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115177766 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0898597 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110956266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168469002 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265062199 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214199986 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179761374 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086874037 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110904733 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121082251 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111113257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108231748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163569457 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194438092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172395268 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092277134 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120543058 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119538786 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119521438 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165279801 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120042415 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295198932 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311518181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111403108 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119999431 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105882151 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260561732 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122262563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222828138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117608334 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212113465 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110276813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755355449 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190973663 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089355502 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117914179 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118618018 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094548424 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121015622 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167858005 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408834069 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123489796 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092668152 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11118683 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205420386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124110131 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110876347 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161014098 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115181041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099896053 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124450913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122548589 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168991348 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233912067 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124054774 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119955829 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093599758 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125042625 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115697018 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212455997 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219435768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162129196 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207673471 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121987149 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162775104 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188765877 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097888936 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193099199 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097540967 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12587263 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122925818 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214447104 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14559922 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100778658 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115603805 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118047766 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148565661 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126819822 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097872066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190723321 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458104568 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167162127 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108615194 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127471584 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09767877 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160528821 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117960052 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260599301 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121851801 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169381452 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119506651 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087260826 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120134169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165340175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12260249 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121400936 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101601646 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118837532 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235152873 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217698817 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122397887 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22064813 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18349392 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118345905 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171086347 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121337807 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166637518 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119968505 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121357888 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095609825 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772449203 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123145392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098676587 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115642154 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18729579 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111344818 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103158901 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124353661 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107814106 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776902568 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127549746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121077465 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102430894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11865219 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120841272 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095164372 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115564857 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161210972 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22850298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121526773 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118108229 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101986162 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179870307 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095474758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125568817 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123857507 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125295743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099794679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116149527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123574396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170009512 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161673619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221347364 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58812264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090820902 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1239924 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22724326 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09013346 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287692209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119452242 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224123981 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165617816 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120770154 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305358799 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167405633 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186723776 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127197444 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173104523 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086512629 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118055116 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163272789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111138342 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117029354 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162404249 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124062083 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101687266 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958304472 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112242685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227185387 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107486029 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171264483 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09446608 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120805009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296418006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11126723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106847876 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185152892 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093025657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126034041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.872537986 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103655211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121701247 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118331204 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221577611 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164588717 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096656746 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119801395 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121856988 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16254193 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207215839 seconds)
  done (took 44.036207284 seconds)
done (took 58.995265005 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274272167 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211305134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256831578 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167121794 seconds)
  done (took 1.85013264 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.16865084 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147000637 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118837101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107102741 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14900877 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085135641 seconds)
  done (took 1.641942809 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.348812368 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267952896 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236816308 seconds)
  done (took 1.72681325 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285759279 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250346759 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352156871 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414968618 seconds)
  done (took 2.290447954 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207396873 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131054366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110679634 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104552279 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194239648 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246798987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139873467 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200600224 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120804559 seconds)
  done (took 2.37252355 seconds)
done (took 10.75241062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.141089621 seconds)
    (2/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.281677799 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145611073 seconds)
    (4/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.247613234 seconds)
    (5/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.222919598 seconds)
    (6/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095204633 seconds)
    (7/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115507832 seconds)
    (8/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216247679 seconds)
    (9/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096969217 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125736488 seconds)
    (11/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203023308 seconds)
    (12/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.170259035 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120427342 seconds)
    (14/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.239121783 seconds)
    (15/286) benchmarking ("sort", Float64, false)...
    done (took 0.17048232 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093909563 seconds)
    (17/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198122099 seconds)
    (18/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115951815 seconds)
    (19/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100814644 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117762103 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.221215581 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098620352 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.088117619 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.223808084 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112741113 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.211979015 seconds)
    (27/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087612627 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133533275 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094362992 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.190647919 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.172780688 seconds)
    (32/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.222748722 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07857486 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19738495 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.147111119 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152039845 seconds)
    (37/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099902135 seconds)
    (38/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115559849 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.22107762 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115825603 seconds)
    (41/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159765904 seconds)
    (42/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.152137887 seconds)
    (43/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076609125 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089904968 seconds)
    (45/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.119632746 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.139583044 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.14782057 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135276116 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094505475 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131988797 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134582048 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108866493 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065531512 seconds)
    (54/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100892258 seconds)
    (55/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06691784 seconds)
    (56/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.180650699 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086426101 seconds)
    (58/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.117686362 seconds)
    (59/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102521794 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13623793 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109293344 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186058031 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085393698 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116655597 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114702813 seconds)
    (66/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162938374 seconds)
    (67/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.148226969 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227300962 seconds)
    (69/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096690831 seconds)
    (70/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118076512 seconds)
    (71/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.160495963 seconds)
    (72/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137453093 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134760704 seconds)
    (74/286) benchmarking ("sort", Int8, false)...
    done (took 0.185674697 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189742968 seconds)
    (76/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148911939 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196751493 seconds)
    (78/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144391455 seconds)
    (79/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.097020564 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.181804717 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.087023624 seconds)
    (82/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176561131 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.178968691 seconds)
    (84/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119753877 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092007335 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066928921 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088853927 seconds)
    (88/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067470611 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065313181 seconds)
    (90/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.088790887 seconds)
    (91/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093059024 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108597467 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096698998 seconds)
    (94/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116707376 seconds)
    (95/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077316386 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122153034 seconds)
    (97/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117728408 seconds)
    (98/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087688158 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10916006 seconds)
    (100/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148448872 seconds)
    (101/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163198127 seconds)
    (102/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065096068 seconds)
    (103/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124483366 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136097374 seconds)
    (105/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066780989 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117356228 seconds)
    (107/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.147419905 seconds)
    (108/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116846642 seconds)
    (109/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093545093 seconds)
    (110/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170512851 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.110816205 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132067542 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120680947 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172026299 seconds)
    (115/286) benchmarking ("sort", Bool, false)...
    done (took 0.179718508 seconds)
    (116/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094984129 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149350361 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174611099 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093973698 seconds)
    (120/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065703658 seconds)
    (121/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109661713 seconds)
    (122/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.185343079 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091639109 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134632177 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138254439 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094167237 seconds)
    (127/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116918599 seconds)
    (128/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.183911179 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088036811 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066556162 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108903792 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093111177 seconds)
    (133/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108351013 seconds)
    (134/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066523153 seconds)
    (135/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.183268674 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11611598 seconds)
    (137/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066300115 seconds)
    (138/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.172704919 seconds)
    (139/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095640148 seconds)
    (140/286) benchmarking ("sort", Float64, true)...
    done (took 0.229951468 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109643723 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094688608 seconds)
    (143/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122296711 seconds)
    (144/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187432647 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097851579 seconds)
    (146/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.093586583 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067670089 seconds)
    (148/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116879391 seconds)
    (149/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148159446 seconds)
    (150/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134869189 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118009864 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.150246937 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089617981 seconds)
    (154/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159685831 seconds)
    (155/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08973448 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094676851 seconds)
    (157/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116795348 seconds)
    (158/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230850059 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066691604 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109215509 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095413821 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108662208 seconds)
    (163/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.151076151 seconds)
    (164/286) benchmarking ("sort", Float32, true)...
    done (took 0.227683028 seconds)
    (165/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09157302 seconds)
    (166/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112960153 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.09098721 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098039967 seconds)
    (169/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.107912198 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091290269 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090151003 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093966008 seconds)
    (173/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075394434 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133908518 seconds)
    (175/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098778427 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095360563 seconds)
    (177/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116043105 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066041797 seconds)
    (179/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.144812773 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166474913 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.21986866 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109100751 seconds)
    (183/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06784992 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091143628 seconds)
    (185/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.1155142 seconds)
    (186/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089623038 seconds)
    (187/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090046378 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114560015 seconds)
    (189/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092032609 seconds)
    (190/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.09025631 seconds)
    (191/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067573123 seconds)
    (192/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092433261 seconds)
    (193/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111047755 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095493002 seconds)
    (195/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150818279 seconds)
    (196/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109864711 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113088639 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112073226 seconds)
    (199/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104745692 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119508171 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117387428 seconds)
    (202/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067150237 seconds)
    (203/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08848182 seconds)
    (204/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118091331 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086818336 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.089497388 seconds)
    (207/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08726081 seconds)
    (208/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.151923011 seconds)
    (209/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067765684 seconds)
    (210/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110469237 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100028902 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116061181 seconds)
    (213/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129023554 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12415764 seconds)
    (215/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11591496 seconds)
    (216/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093450165 seconds)
    (217/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06867198 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108382844 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.343965174 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086205984 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091785314 seconds)
    (222/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090659904 seconds)
    (223/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121434966 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150175689 seconds)
    (225/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170186411 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109880424 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086564984 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135287298 seconds)
    (229/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085030238 seconds)
    (230/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089591512 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086429416 seconds)
    (232/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115029962 seconds)
    (233/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091227039 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.179927895 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085900865 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116818442 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08552534 seconds)
    (238/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110994205 seconds)
    (239/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085252749 seconds)
    (240/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091587158 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086449293 seconds)
    (242/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110103784 seconds)
    (243/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076243807 seconds)
    (244/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089709495 seconds)
    (245/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088851733 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108027848 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092572202 seconds)
    (248/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099169946 seconds)
    (249/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067198675 seconds)
    (250/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077977496 seconds)
    (251/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.098932719 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084464902 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118124078 seconds)
    (254/286) benchmarking ("sort", Int8, true)...
    done (took 0.21756951 seconds)
    (255/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086348516 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162284382 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083630134 seconds)
    (258/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.090172806 seconds)
    (259/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067429713 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067217922 seconds)
    (261/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158101222 seconds)
    (262/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134466074 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094531213 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107777064 seconds)
    (265/286) benchmarking ("sort", Float32, false)...
    done (took 0.148327144 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110565967 seconds)
    (267/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112404265 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084888181 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112018926 seconds)
    (270/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066656803 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094696267 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116217473 seconds)
    (273/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066710593 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114798973 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090250774 seconds)
    (276/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090750937 seconds)
    (277/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219224479 seconds)
    (278/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067328097 seconds)
    (279/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091644297 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109360415 seconds)
    (281/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09225421 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067545061 seconds)
    (283/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067512385 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11565282 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086271344 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109355152 seconds)
  done (took 35.796909811 seconds)
done (took 36.671477015 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099902442 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14715487 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095723603 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134454714 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122931482 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091475476 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117868054 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097873001 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123223572 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123993067 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098087053 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092637277 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096655638 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119522826 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096177726 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137914597 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122126441 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094341042 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118240783 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085376211 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117473036 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088907812 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111823608 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069886139 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120744315 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09432395 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115386583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119081241 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085874262 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109015836 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089719111 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116518322 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086378134 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122339613 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093475458 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11738474 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096088508 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119486192 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111518844 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08698066 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116909987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08616438 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116069552 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093771039 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115200753 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09218573 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118442349 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098964876 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138922435 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114271169 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094914436 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119757677 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097569404 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11713855 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090498216 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118699646 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090851483 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137565165 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118096897 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091537367 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117472543 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094204973 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115695315 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095129729 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1174687 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120514653 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097913532 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114368212 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097119905 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114956504 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086888044 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117931869 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090138598 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109936165 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094756569 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119828837 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08462241 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115387136 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116211278 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09169184 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108768245 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089970235 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111287204 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092978401 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111614415 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070047122 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113416422 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092651767 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108983044 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095993007 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115549732 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094317155 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111748611 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09830313 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110238326 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092530038 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110282354 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087134453 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112538399 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090423435 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109497194 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089166652 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119336621 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088402268 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116190241 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123037163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086658642 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116463945 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085654857 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109755977 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101465822 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120223221 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086810676 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115651986 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086157241 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11767693 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086053897 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109908875 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08642209 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109992189 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092076155 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110478391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111984886 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093890117 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123513256 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085845059 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113128404 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090202526 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109320408 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092309132 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110725596 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08767737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112256219 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0778783 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112666176 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086848815 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117532822 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089309475 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11865329 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088839991 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119306263 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091244333 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11689889 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092014576 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109901242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074147305 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115234417 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089459167 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113474039 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087271353 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11227335 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086995334 seconds)
done (took 16.809841861 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086888721 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182638424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149894779 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140936253 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106306538 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110861244 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121008148 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11728139 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112073104 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141445723 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110870176 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131239567 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146151611 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086547267 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110563671 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090830132 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112140178 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101376557 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144338964 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132366974 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163115965 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086500889 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145703036 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134533512 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119990789 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113528011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111021626 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090866223 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114086473 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102472706 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131033286 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114230037 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08685354 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133867782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105104637 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119280752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087186904 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11848898 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08694083 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112087697 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139964753 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132434546 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092915109 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116704169 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091579348 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113384967 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089409925 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119653959 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097240722 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115527057 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125495449 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155980695 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091162679 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120667223 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086611973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123067583 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120746356 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090291468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111796209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090325728 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111007683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091261292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125662476 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140372029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092001509 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121014313 seconds)
  done (took 8.541619826 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10380432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138581942 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105665052 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130629722 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110888117 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088528565 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111699456 seconds)
  done (took 1.724946719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087532684 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134523945 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111053647 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135789418 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132094503 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111845561 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122434167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088530603 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132825281 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089947728 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134175131 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148915722 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089912789 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12066773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137194989 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087894265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136563624 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088282173 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115963487 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112230135 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11642331 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133669843 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091340087 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112623424 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102824012 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113241225 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160978661 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093722258 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113632111 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091899669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111172146 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150603835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102913811 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124065012 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088335382 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129508683 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128727321 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086537836 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.124601811 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094158078 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127031847 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089448789 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114106418 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08700186 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117601427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099309638 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116594791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114219067 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092180759 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132778184 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089829944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143825874 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088891647 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11767994 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089555016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118649533 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097895206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113876484 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132840616 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089641601 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129777222 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105048914 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127719536 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129829807 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091760223 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127887567 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10324073 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115881835 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090522964 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116938266 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105526891 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111846167 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114729313 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099881571 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114971025 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111883342 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136309907 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089869123 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123901049 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113647935 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088799289 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113071379 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111728578 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116919896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09003527 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116490918 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091972746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111787193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088190434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117085892 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087674826 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114919137 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094207221 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113720891 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091037814 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13000678 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114313718 seconds)
  done (took 11.753524352 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090566748 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114543991 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09177217 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113378391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090949349 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113845462 seconds)
  done (took 1.563367328 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113939768 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116783642 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103358634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120280968 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155766708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102871773 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129671931 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123909894 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10772008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12633213 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128282642 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105270284 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135465045 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12013505 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103137939 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119827463 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103366124 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124854864 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125975558 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096246513 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135384375 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120425644 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096235536 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130251144 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117043177 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095176879 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124426272 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102783047 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127160977 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122799343 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096104325 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117180588 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095889863 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124115777 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128822104 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095555355 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120281494 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117602138 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100304879 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11752644 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104690321 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120001587 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126497867 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093523096 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122767987 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120175979 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094134838 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1243149 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104018949 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118003814 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11818433 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095630216 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119917382 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093752744 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122314121 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123338013 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093865779 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129351389 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121076752 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095780662 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11740369 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092877335 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123601203 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117357369 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104920568 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118924138 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119986002 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096276826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121387591 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095261361 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118684103 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094094587 seconds)
  done (took 9.16116111 seconds)
done (took 33.677711895 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686255297 seconds)
  done (took 1.6338939 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.809201675 seconds)
  done (took 1.758755591 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.578049501 seconds)
  done (took 17.552950939 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.487399507 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.572511608 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989356206 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176379287 seconds)
  done (took 3.175572636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.93276308 seconds)
  done (took 1.900589186 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280506422 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233614796 seconds)
  done (took 1.467180781 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.760398626 seconds)
  done (took 1.725724101 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355752921 seconds)
  done (took 2.310252766 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324743207 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183538703 seconds)
  done (took 1.470097625 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546324891 seconds)
  done (took 1.508640833 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.614977125 seconds)
  done (took 11.581376169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264555487 seconds)
  done (took 1.240678842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299514431 seconds)
  done (took 1.265821381 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.431881777 seconds)
  done (took 4.400568945 seconds)
done (took 53.952025366 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09843466 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12624786 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101042885 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123355224 seconds)
  done (took 1.410292568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100713947 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120421553 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09957569 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120005557 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125148257 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095538317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122752963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101503344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.1202098 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09644532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121004245 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119336575 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09882668 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121881579 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093547226 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122432521 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099166641 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120968236 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123349786 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097579212 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117957238 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097142151 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123726607 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094355764 seconds)
  done (took 3.6239975 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100286963 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118047641 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096283297 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117417198 seconds)
  done (took 1.406940043 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099544598 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13009733 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105042508 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124573413 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130349001 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105763979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116164812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092519518 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118985392 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099384468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115090777 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138230355 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10572498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124015442 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101096318 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113573248 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09022612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131155492 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124235132 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101076549 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117184483 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100222703 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114743527 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108093845 seconds)
  done (took 3.676915291 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169767228 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126191352 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137618968 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094698224 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158550708 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140352545 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087792169 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140421294 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086740922 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129329955 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116323097 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131724077 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128796394 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087565331 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113081111 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08790367 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12816734 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128256834 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090987272 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127455511 seconds)
  done (took 3.389602598 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097488565 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117134925 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087664818 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115341494 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099251369 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119769423 seconds)
  done (took 1.613679218 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09030128 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114489311 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090177359 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113210536 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09356454 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113928376 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088785567 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114042807 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089550008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114544364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089063455 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112821497 seconds)
  done (took 2.202303666 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500470092 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118643303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119156641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088240661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123695615 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089417691 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128409646 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091447927 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140757422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08827092 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115347682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091367832 seconds)
  done (took 2.671806631 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234093412 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125278612 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279649805 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362113754 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15410809 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163380266 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279223645 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160837663 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195796253 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149097018 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228653647 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194014907 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150749385 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190290786 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136875039 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144187598 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186903869 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248903484 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151878789 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211232402 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20419509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1652772 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178935357 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14968321 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111964962 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190923495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095079146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129002856 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205667983 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204395571 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188522672 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159876649 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145201264 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233667575 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247349331 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193914599 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275778921 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132698244 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141476576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164639068 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262768813 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138089135 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232303325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154837899 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104532706 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218242122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164931227 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174307946 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144741402 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137924352 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196280566 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238938592 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192346298 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138407537 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29587995 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147721726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156692278 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188190844 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249799531 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224338447 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188203885 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119989232 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187679589 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189947087 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182842228 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151176232 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207304664 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146753145 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181225882 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189430233 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165331478 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204308768 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179990248 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138339617 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169969614 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171826025 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172030662 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256462264 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184817171 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120898835 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167821755 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148132159 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103739713 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194149274 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124326299 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213332903 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142432682 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163055282 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206076479 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158515906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160768281 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216732341 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182711521 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147248684 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083481407 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15227467 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153804009 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17497097 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13915907 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157694215 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155993542 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10244403 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193952356 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097391728 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182948709 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117867566 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172101492 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182101311 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126183616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159864044 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15169085 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148512586 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176831296 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198683348 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14060715 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132931203 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208812736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176140997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140299001 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175961804 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227281791 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117761539 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147834865 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22417223 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216020641 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139362533 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20014139 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152477584 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134779255 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13256085 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180468288 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155582312 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160457178 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131199834 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181733811 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204301792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12505747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137633961 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194506629 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132976884 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130776414 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154352942 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120228495 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138148301 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143001823 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14428106 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174990915 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17812128 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153826564 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165938728 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148550499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24722699 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138376827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123329267 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148635635 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120954642 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19092125 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223696751 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103491856 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23112317 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170672477 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197735078 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166919805 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13474023 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177517422 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129836845 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09244088 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218953114 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167159109 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161910206 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195393339 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21883098 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179825247 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179984288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164428934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198618396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137681153 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155262668 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138286234 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160357832 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157733162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12207085 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111269431 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134053001 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149021621 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140541813 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106610541 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222784825 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17014657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213714285 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132113807 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147772088 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180602471 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128509432 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175309593 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203433159 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11805776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223769904 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192479919 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185390683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143093102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225202497 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09423504 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124031752 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13949474 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169165415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106957737 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135038446 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161745025 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180713474 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204611387 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168972289 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20519403 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172272457 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216899956 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095214958 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168047998 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183597307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175371661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178388357 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139511906 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149007676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17636949 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153295189 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226073843 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195083733 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173580854 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204150928 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150860584 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1308405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148880194 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176405372 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153331479 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174976273 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145376028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137118531 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15881199 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103658614 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159803443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209775927 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161300194 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186476948 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148931501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185026874 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128000739 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162288097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160014553 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164372922 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080911273 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173039868 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228570559 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146883735 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165747589 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187590607 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130871406 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306446014 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233655497 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195378671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137304723 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154647245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160329065 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160878484 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171177015 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179203575 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158597055 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188063041 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15819858 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135529516 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111100513 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149339043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151325771 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130931934 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147162745 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176147262 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.109557298 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214143792 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153423137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15894581 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170821894 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14869132 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11640446 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150905283 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241383924 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183514199 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236030927 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123573137 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203578504 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206374939 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125344443 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104688765 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133324657 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17764718 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13608994 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191875247 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188263593 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224155846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179315495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176189881 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139101542 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118986845 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155531017 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166192539 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201880883 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147863449 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14634453 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200402517 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136830564 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130678232 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165562964 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283255206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144636796 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193699897 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079325438 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301748781 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100596188 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131521495 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162925283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20403324 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135402618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177596571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170499276 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160569836 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162499158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14945844 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189569956 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235210575 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198668996 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180928471 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132817462 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157211591 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174154137 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216344819 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126919787 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138021467 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228966319 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194913938 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19428335 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142770319 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167298971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16671383 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157404507 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211334041 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107503046 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232133741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105970084 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217266086 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152197347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136548082 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174390457 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186025071 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139302785 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185626678 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207275693 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107660089 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132696486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165323537 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176878109 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152979028 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12696979 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181569962 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124491366 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19455691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257263502 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104975948 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154756578 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14620525 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136063114 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154127773 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157630889 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137235787 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137920328 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226439645 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106768577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217096854 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20064779 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170185343 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198800564 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117484365 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.719202928 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102682926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193039885 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147828085 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233730015 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149731756 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171435741 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157031888 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167047633 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193144739 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159695486 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231366344 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215335421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178007393 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103547716 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155345366 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154070932 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142595331 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152852733 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166668685 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158822695 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145364107 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17695123 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163169905 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134857579 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13974216 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198973846 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146670257 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184781638 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179461971 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138695775 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172102749 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184024388 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13268867 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17765308 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234520161 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14231256 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147431753 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10462177 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149024173 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260541136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124081454 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18733894 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182948706 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158296345 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166432277 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146640141 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218076406 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155974428 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185176703 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140781616 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157927362 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155160648 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109225989 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12992548 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155331576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166549312 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149572546 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158619545 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13964208 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217504552 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095748057 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143386548 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284368272 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198884702 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215035364 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135288216 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107410567 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161002348 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149395998 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174969887 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204436672 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107707085 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134962241 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136843564 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128585868 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137546616 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154567353 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19082779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164710432 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205586151 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136536596 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277920974 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13928314 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126635132 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116211911 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130710704 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121495926 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144473051 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154402507 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217387397 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256580275 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122320474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133307787 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148402393 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097242525 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136058089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163254915 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164945681 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176142764 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14447747 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079487751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15370362 seconds)
  done (took 81.757549375 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16161624 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130465942 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146056865 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200834207 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174872107 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268856366 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20852577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250912414 seconds)
  done (took 2.611898607 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093735428 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144084424 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15613696 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1307486 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091238349 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118812365 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.337885284 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132015157 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11534599 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120753741 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171663423 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092775472 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.542724106 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089746896 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118388244 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106045018 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091772702 seconds)
  done (took 3.714163203 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.14992395 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488057022 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.892770084 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191238224 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158367957 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.115948723 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.700329586 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094724566 seconds)
  done (took 11.860875116 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114654309 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135085353 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123368534 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15062008 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139514329 seconds)
  done (took 1.741293604 seconds)
done (took 122.644167884 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096745529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126632306 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096958645 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128763445 seconds)
  done (took 1.508324658 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094029016 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070440382 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101368739 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073954273 seconds)
  done (took 1.406877429 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187179245 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165927391 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.380342033 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072782976 seconds)
  done (took 1.552705697 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113584373 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130576132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104410385 seconds)
  done (took 1.427387525 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105813757 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128175666 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102938566 seconds)
  done (took 1.412810903 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105739871 seconds)
  done (took 1.181613903 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107223776 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13633836 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108575958 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135169517 seconds)
  done (took 1.561795214 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097810884 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125631583 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108862488 seconds)
  done (took 1.406213658 seconds)
done (took 12.879589372 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102761884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417780521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383924465 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142962772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721652722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379262034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048948452 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145435121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164107878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092750833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138150617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672701414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.075776691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374388459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036571516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373042865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675723517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120079442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118534337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094235148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032832129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091938995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120492171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092045452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701521149 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424407612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094202411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368855649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092167345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125459453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382098962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121184033 seconds)
  done (took 16.988561136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094719723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171218163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097225552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135780753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122677815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094734342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125011298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092444036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177836707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121265784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109896979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119907149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124017303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09455622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141599658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091982149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123866524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092083635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120345603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119430011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111730602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11865612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093341529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120008167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093689202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133933199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121030403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092471795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119004266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09819854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125881504 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09458549 seconds)
  done (took 4.76614882 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139015438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180454321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126626602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125760175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166379462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123255524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195782005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117109073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179628563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121095263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137714039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092641381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15454829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120265775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11375682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119479551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096584297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119750681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09263202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122142298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137888055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093275209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120803843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093243187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121859017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106725874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122054984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119624409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093285442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125599496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099388091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122208931 seconds)
  done (took 5.081568647 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096400136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124340978 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108616258 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136527124 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095579019 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12368258 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096718405 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123008404 seconds)
  done (took 1.983686496 seconds)
done (took 29.897702936 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10978134 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125318944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105490272 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133913519 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101946749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.129659365 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090886339 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132369332 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132063082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101649629 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135068972 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092177176 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120949591 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091842225 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133107637 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096960005 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131657079 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101470559 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132234922 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13035094 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09460032 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131080947 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10293102 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131418808 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104175179 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132669899 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135382941 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098810527 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121253287 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094381913 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122702066 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103116152 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122745773 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104598993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125468451 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097085299 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12200518 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092762419 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131823232 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130466571 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099315556 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13115888 seconds)
  done (took 5.92966682 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107034225 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.137804885 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103854146 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080289362 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115727077 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080078608 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135644233 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078766219 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108765062 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106517113 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073681991 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104856759 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078076147 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100490046 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076692354 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07454465 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107067224 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075264205 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075542388 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104278324 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07961362 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07246057 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106596395 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07799448 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074309031 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108536856 seconds)
  done (took 3.528178676 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100131792 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.1329021 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1135783 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18164478 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160006267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099237966 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130256584 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138567368 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10741238 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118353439 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095836096 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147592458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1091891 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128223883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091024533 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135997264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133525483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093486228 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126531523 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112376612 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137060251 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102268588 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138727592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131872197 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09190787 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122529407 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095822344 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133539624 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097587169 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13034577 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097669359 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123454986 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121661209 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104713547 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124209896 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095155788 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141053999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102397323 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129556259 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092234247 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128099621 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121089941 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112863326 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160349964 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092196585 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128403606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095110767 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130829748 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119250744 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110657242 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128965399 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091308246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123170927 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091494627 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119955301 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106222846 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12322252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094799416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130141852 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125948701 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104814261 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123583485 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1087987 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120990907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099444403 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120616737 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092664771 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119113423 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141171114 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094128633 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159420035 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092076638 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124285134 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101404929 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128863192 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126702743 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092646307 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135513553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102360687 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124788107 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102157044 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124520434 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094672638 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139077377 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122970808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094991501 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121014338 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09959728 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122674165 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093260004 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135903824 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091479882 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124523398 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109883226 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120455779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121395069 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100241305 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125071522 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091732304 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133485913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098390528 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122589141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102097646 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120689797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122894933 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102733009 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124650236 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091907998 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125687748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099179737 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122761747 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093972012 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12465681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094981472 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132067066 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12776719 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097837175 seconds)
  done (took 14.684168341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225746012 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215427246 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.232211804 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261192912 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133879043 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113911298 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.240721745 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124584454 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122627823 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158866497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170930243 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180066165 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167757015 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180334577 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169077365 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09348101 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141664224 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133326542 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.242942689 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257023175 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142552595 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100528454 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160235952 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158417713 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136119829 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130845044 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110513585 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13302077 seconds)
  done (took 5.740306568 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108103904 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154101241 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098542154 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143964903 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14731358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092581897 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12745117 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093737736 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134561285 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133802135 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093021185 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128124923 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09973715 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131101597 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122346089 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102874823 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13107573 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094352935 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125606283 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096986929 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133478933 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101362165 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125829654 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120198855 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103084529 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120149664 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085775975 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141428938 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120851991 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115300074 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120262807 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101735635 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135663312 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094087341 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122428803 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095022841 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124489031 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095410607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124081476 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0911867 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12103032 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077233734 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121031768 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134675017 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099106011 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080338592 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128434456 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127073449 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095118806 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118691268 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09625399 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124658815 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09692737 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129222275 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096361872 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122703862 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096782774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114896822 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099883481 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123450878 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084348125 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120234237 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0990441 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116222044 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100266606 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126550946 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091973808 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124527593 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097957988 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128473254 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094361413 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128604696 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090145106 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124228068 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095553527 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127272104 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124724917 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092799219 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12139946 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094001069 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075023078 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122562787 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073802826 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125720057 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091044688 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121828342 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09468689 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129608965 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137558608 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095118297 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131256795 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09429139 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121989004 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096790064 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113020375 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095998627 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138928113 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139915606 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093530095 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121141619 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107493098 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125453667 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092416168 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.1051494 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102547784 seconds)
  done (took 12.870661833 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131019119 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152836984 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123536043 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111781726 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156046088 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156884284 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101103879 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129911276 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096435252 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141326037 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093462081 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130988629 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093387246 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137584458 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155348698 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103694425 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124787418 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108822261 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127093815 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16820153 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110702534 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141066184 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109634851 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123599387 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127302588 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109682168 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160004438 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107096037 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136007407 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141470595 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107597707 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159704597 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142062595 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098149929 seconds)
  done (took 5.435637525 seconds)
done (took 49.268507633 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207639328 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.420032072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179895122 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.093697067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.185984652 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.194714768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195401644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.180972863 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.610640229 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.18677532 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.411943538 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.663672504 seconds)
done (took 59.639576335 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.265431908 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339953911 seconds)
    (2/2) benchmarking "String"...
    done (took 1.467827239 seconds)
  done (took 3.914120749 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.626958571 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.098497989 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443024979 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180686406 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198426707 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.475862068 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.781357812 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.488629766 seconds)
  done (took 27.774083666 seconds)
done (took 41.689069412 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.163863485 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.252075276 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.182117796 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.161225162 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311018144 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.230712444 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.563397199 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.19928842 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207889161 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.163925685 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.200274825 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206863774 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192053953 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.51855743 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.183631808 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.18701023 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.212843439 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.699753739 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570115936 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197254469 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225043918 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.189012501 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.199636528 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.185347579 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.231060615 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.179553219 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188364064 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.192454958 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.41912936 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.184516135 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.295890544 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.674635655 seconds)
  done (took 189.876015859 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.180316613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.216808094 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.32605423 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.216271753 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.616014304 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.388612329 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.347531529 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.690787611 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.196647937 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.207578586 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.437714915 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181386265 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.502797202 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20321205 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206391431 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.241524822 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.371897864 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.490993229 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.214257984 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.336052044 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.178037291 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.421130005 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.334197539 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.387594773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.19368818 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.259659899 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.199157412 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209894166 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.373493229 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.306896344 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.199450942 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.214385082 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.721720605 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.03018901 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.174028504 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.181243251 seconds)
  done (took 149.061634719 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.172856161 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.174538421 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174120048 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.201523793 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.173422092 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.667353579 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.67027428 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.684001092 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.542507957 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.177082101 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.28676934 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.175883677 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.354920232 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.172783797 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264130161 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.186270493 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.174078153 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.188607549 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.215901859 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.173428622 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173501384 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.661467198 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.190233617 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.306678255 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337855173 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.186539366 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200437284 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.559039538 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171625771 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200345825 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489881969 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.215057626 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.173363105 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.466960174 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.734104217 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282038916 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174739604 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201048771 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.173203608 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.44514282 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.174895974 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.174227387 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.176529102 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.768931641 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.177262181 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.657035549 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177311294 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.057854037 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.177018973 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.17402353 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.426653866 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.692755101 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.190851882 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.174616494 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.175483101 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.172971722 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.17408999 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.201321722 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.465375196 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.266207449 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189486415 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.177349727 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201072147 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.173834873 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.276378341 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.173848591 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.248198065 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.227435528 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.387564883 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.660320685 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179138421 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269536448 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290011038 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.174701411 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.174376282 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174830533 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.17330022 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.280740893 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.175424151 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.525960632 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336117261 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.189897172 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.249084095 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.27175643 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.176011984 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481506491 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.17789471 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.175532856 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.869191006 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270950055 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.176348939 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.174984437 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.175028455 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.174800565 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.526392586 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.661039502 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.338062438 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.179340016 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.442210964 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.177786475 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.545732916 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.65026284 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.175066856 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.768203237 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.180113983 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283516932 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338091336 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.190037029 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.175535774 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.252761931 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179977632 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.235321424 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.176852092 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.569341938 seconds)
  done (took 360.012691192 seconds)
done (took 700.058403126 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.77697671 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.765571207 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.86651634 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.756742259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.729581149 seconds)
  done (took 9.997148139 seconds)
done (took 11.099304702 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.347001397 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.349714102 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.233668982 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.347218226 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20886075 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.36499086 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.329243348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.199912906 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.27014507 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.249780705 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.270364418 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228537021 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210665651 seconds)
  done (took 17.712961573 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4783585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.473305942 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243540225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478935363 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218484739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482155809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369447882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407215043 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408135292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209244668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191057951 seconds)
  done (took 16.063387763 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.479325909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.484640754 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245801568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47777484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219187031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474992403 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377044807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.398109069 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385314811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209331229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191645604 seconds)
  done (took 16.046936368 seconds)
done (took 50.926602647 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.188554373 seconds)
  done (took 2.292930128 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220272382 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.375702707 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.204510339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.194359938 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.189381218 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.191235728 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.194399962 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189599026 seconds)
  done (took 10.864628382 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.188491908 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186243592 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.187778973 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.187533371 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.187833331 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.187490769 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.185587409 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.186179249 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.185137145 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.18763232 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.185006656 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.188998989 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.185377299 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.185610005 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.189156046 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.185845384 seconds)
  done (took 20.096016613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.188065167 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.187061233 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.186229506 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.187280448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.186181582 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.18783191 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.18838394 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.186326365 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.186584303 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.186989553 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.18635958 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.1870693 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.187991929 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.186814332 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.186894911 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.188308352 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.186222778 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.187892118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.191393073 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.187852996 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.187834836 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.185877899 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188776671 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.188066954 seconds)
  done (took 29.607073374 seconds)
done (took 63.965569381 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.778004104 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.602544431 seconds)
  done (took 6.488086303 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.189197823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.189863132 seconds)
  done (took 3.487438162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.189584562 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190019605 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.189897474 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.189963079 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189856182 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190669855 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.190435221 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190284989 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.191312419 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.192259268 seconds)
  done (took 13.011608948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.191301147 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.190982583 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.187887359 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.191537688 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.190837614 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.187335261 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.189989393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.191032707 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.192097901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.187631462 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.190543602 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.188501403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190351076 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.1894158 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.19096238 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.190503233 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189256945 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.189081989 seconds)
  done (took 22.527414492 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.192106375 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.191146656 seconds)
  done (took 3.492747505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.189613509 seconds)
    (2/7) benchmarking "second"...
    done (took 1.189853429 seconds)
    (3/7) benchmarking "month"...
    done (took 1.189874431 seconds)
    (4/7) benchmarking "year"...
    done (took 1.189329538 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.189222085 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.189593947 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.190437101 seconds)
  done (took 9.4372855 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.193286013 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.370116764 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.44558003 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798333116 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.193214568 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.196058786 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071790553 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.197885437 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.19917018 seconds)
  done (took 13.77383248 seconds)
done (took 73.326168123 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.172011982 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.200002206 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.333195077 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.204689207 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.218806421 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.48372971 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.20988782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.306316459 seconds)
done (took 37.239866714 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.195181042 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.172773895 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.803568081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.167775095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.136907317 seconds)
  done (took 18.39181217 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.12459972 seconds)
    (2/2) benchmarking "read"...
    done (took 1.522407473 seconds)
  done (took 4.757601603 seconds)
done (took 30.456123903 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194429444 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.193558167 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.19383227 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.193389358 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.19472463 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.191226697 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.191408104 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.193881178 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.194242 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.193976117 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.191329609 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.195355636 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.194734016 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195160952 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193437999 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193710477 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.192374366 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196351548 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.192615249 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19154338 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193449361 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195375446 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.193409788 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.193283134 seconds)
  done (took 29.758561308 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.196079458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.194106598 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195640517 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.195827194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.193555245 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.196314986 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.196032413 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.19425759 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.196807221 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195370192 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193598572 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.193752148 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.195224337 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.192962629 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195954132 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.194610022 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.19672239 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19391722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196810322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.193275108 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196715199 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194722972 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19455679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198212281 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194124455 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194578121 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196664222 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19479794 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196598022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.193622767 seconds)
  done (took 36.969383795 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.201363346 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.201698196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198123655 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.196794194 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.196985774 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.195884231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197812596 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.198250465 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197102814 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.197316532 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.197441526 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.19700562 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.198018968 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.19897228 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.199123342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197396757 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198315263 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.197828624 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.198720445 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.198648557 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.198292694 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.197709735 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198059201 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.197798881 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.198905099 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.19878673 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.198724346 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.197911255 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.198771322 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.198739923 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198710589 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.199351503 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.196737115 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.19861166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.199628631 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.199231774 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.202555009 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203100552 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.199077931 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.199452562 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199339947 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.198951925 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.199165414 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.199847724 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.198845999 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199957496 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.199390375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.200669421 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.200121056 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199608711 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.20039717 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.201272536 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.200762593 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.199292916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.199933311 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.200203586 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199850302 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200451702 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.20054327 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.202291068 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.201442471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.20014404 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.20087476 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.201450289 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.202196916 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.202036782 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.201023481 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201940348 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201601778 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201618893 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.201159372 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.200990865 seconds)
  done (took 87.475567524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201679784 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199683793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199167693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.199180099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199285786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201433443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198315864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201689032 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199421714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202216952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203186607 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199166475 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198754415 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201712375 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201886218 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20064312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202998972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199410609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.201661798 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.201765401 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201541526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200175962 seconds)
  done (took 27.534163746 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202976062 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204069472 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.201025593 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202116493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200628165 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202888423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20347754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204165913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20330964 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199919086 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200766653 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203177207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199820337 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201380865 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200124418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201693734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202596573 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.201929284 seconds)
  done (took 22.755435568 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.202083348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.200908372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.203109481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200516254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.200820044 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.203732953 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20149575 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20407184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.203616191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20120182 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.204986171 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204174516 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.204654086 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201765499 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204813828 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2030433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.204537681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201152667 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20325779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2026606 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202001583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205132805 seconds)
  done (took 27.584526365 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203785925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205251952 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.201621268 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201932926 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202567297 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.205152859 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.205868955 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.20421417 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.207580899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.204941328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202069958 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206290616 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20474594 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203965524 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.204094384 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20130167 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.206973531 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203162179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205930443 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.203282025 seconds)
  done (took 25.206080196 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206222913 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207879163 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.206988771 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208190545 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207751908 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206867052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206405521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206871732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206992351 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207923377 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207207282 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208408906 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207129864 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20784848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207163207 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206707015 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209154544 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207707222 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208870273 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207983301 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.208897446 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209358277 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207887355 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207562504 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208752541 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.209286982 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208542129 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208259783 seconds)
  done (took 34.940495235 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208347119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208543631 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.204425784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206999445 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.205873651 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.206450472 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.205701285 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.20628102 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208969511 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204934937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.210013302 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.208561117 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209225362 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.20861985 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209899561 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208549626 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209697261 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.207110318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20723262 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206763844 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.210033332 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20852722 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.209632714 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20545327 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206834609 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209309294 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208445368 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208838464 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209294084 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208866633 seconds)
  done (took 37.362088031 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.229316856 seconds)
    (2/2) benchmarking "in"...
    done (took 1.228794647 seconds)
  done (took 3.583894992 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.206605599 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210719243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.209626508 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208480261 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208322329 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211656756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210533182 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208033527 seconds)
  done (took 10.799418463 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210513513 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.211839926 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.212071221 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.211746109 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.211942469 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.21126143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218265547 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.228360898 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.211765237 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212168482 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.216790653 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217512456 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.213047361 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211012514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.212148702 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213658247 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.211977868 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.212187454 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.212220108 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.21223235 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212681156 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214435897 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215004212 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.208887515 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.213902174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221883047 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234201523 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212360383 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212044112 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.217029582 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211353152 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.209912355 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.213351435 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.213598612 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.213322777 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.213169417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221736246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229699815 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220944477 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230964077 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213971449 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.21174236 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21454885 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.214940638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215608385 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.213357908 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.214393096 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.212703845 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.213264442 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.21681478 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.218727343 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214487486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.211288398 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217818062 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.215920377 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221414241 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232071988 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.216203319 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.222372617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.224699075 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244471064 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236617174 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217239523 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.213831774 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.223876875 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.235087659 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222861359 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229684018 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.213803253 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.214761426 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.221705047 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245549201 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.237422056 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.216554515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215753041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.215739508 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216098337 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217311716 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223427423 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.236592035 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216901436 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216766911 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22530926 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235873249 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218614814 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.21614733 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.217917626 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.216334812 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217481067 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227436263 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.234165041 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.217447948 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.216332546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.217673224 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21833524 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.216463747 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.216790599 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218136487 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.214514493 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.218151275 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216233235 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221282043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.22400792 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216586841 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218226413 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.224735548 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235664227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217039456 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.223361414 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.218074734 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217077578 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.219264154 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.223234227 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.21624151 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222210833 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.224656001 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.217771378 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.21908773 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218482298 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218986329 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226407793 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.241136875 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.21736995 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.21892971 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222540924 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.227592098 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219277606 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.221917509 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.219057944 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.215786629 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.217219607 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.220641879 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.220210241 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.220244364 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220259583 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220661304 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21635085 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.220365951 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.220614669 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.221405058 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.220370268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.220122316 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221503952 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.222328208 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.220840804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.221711045 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.226533913 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.23778632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221301095 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.221794219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.217303199 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221595554 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.221386332 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.220516218 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.220985756 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221090304 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.221814103 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2210819 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221997331 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220972695 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22211869 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221680469 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224168092 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.221715607 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226455326 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222325541 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.218496927 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.221893213 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.222842101 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.222451329 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.222423575 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.221497472 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224748024 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.227338314 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.222106938 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22251232 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22576788 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221784639 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223034682 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223285604 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225039619 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.228478425 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.22268591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.228745245 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240684229 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223151463 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.223310217 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.224679144 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.222436482 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223106879 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.225293399 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.229117428 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233828979 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245090099 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223680077 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.225974197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.223701332 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.225932594 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.227523271 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.223449382 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.223715516 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.222934136 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222722472 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223590049 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225712589 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.223173476 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224653541 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.223998366 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.224637374 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.224114991 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225976984 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.225645158 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224750911 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.222387757 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225214281 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225698248 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.225118473 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223878497 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223149068 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.224962252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.22490374 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.225219887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.23139873 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222684088 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227338284 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226570951 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.224374155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.224650247 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.224888263 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228023069 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226809173 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232811887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.242955576 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.227474317 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23300603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243504942 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227316407 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228891498 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.226778941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.22417614 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.22913041 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234535609 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227672268 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228290192 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.2268551 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229286387 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226920023 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23301928 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242942521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227730896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.228418187 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.228317759 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.225367444 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.228134918 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.228323721 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228728423 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22982266 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227900297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.228232649 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229450315 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228897045 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228565271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229060335 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231010625 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.233860017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.232240353 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227681551 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229899829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.229203879 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231851444 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227744893 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229581977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.230637077 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240463493 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.249835704 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236465725 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.247708229 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.228460477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233511542 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.246515974 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.231799748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230023417 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228207228 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229174288 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229499259 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.227109579 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229566996 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229772129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232099962 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230031308 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.233901601 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230848436 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.229426491 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23001696 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.230173043 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.229638384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229404978 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231158774 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.23270938 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23159591 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.228224435 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229382149 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237573926 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248187796 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230542806 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.230918948 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232366421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230160718 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231439053 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.230452568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233103628 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237485075 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.232042268 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.238823405 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232743984 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240475523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.232182317 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233247293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237649833 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.227958212 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230431828 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231841903 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232055462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239428546 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.250455646 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.232876575 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.235007592 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231709893 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232821766 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.233386753 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.232387178 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232916798 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.232377777 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244098755 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249841128 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.23470623 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234126514 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231269639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.233258426 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233264789 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.232312616 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235640539 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233173407 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234689715 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234228034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.23173982 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234155546 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.23407912 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233458749 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231452125 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234305684 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24006159 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.252171011 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236674589 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234370255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24059063 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252311909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240153227 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.252944601 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234673922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234559899 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.234549715 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23584984 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234080101 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23479977 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.234703526 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.235274927 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.236828715 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234873889 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2359431 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.236129674 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.235667895 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.234029352 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243765293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254510879 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.236673046 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238692908 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233140781 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.235760802 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.238487096 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.235178879 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234771254 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238147829 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245815019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241179228 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.23547818 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235833977 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236531839 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23572617 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235605469 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.237200573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236350696 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236361537 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237082808 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.236435199 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239090756 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.237011666 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237691172 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238526776 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237511458 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.24678708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.254961766 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237780921 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237368225 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237528359 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.237179421 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237826029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.236865771 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237243993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239073222 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238813567 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242848825 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.242651424 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.240184614 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.23731148 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.237933787 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237163437 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23700749 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238149554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237975005 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238859963 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.239221845 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237386857 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.238782942 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236702067 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239327452 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238198397 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236514704 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240711387 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244644512 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238133755 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.236040935 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238318111 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239514659 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.238024921 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.238539927 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244979736 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258100547 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.246962069 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.246001074 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.241201534 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.240014369 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240366419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.244312023 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238307643 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240756487 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239044556 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.240744051 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240330938 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.241938231 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239679397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245165162 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.257249256 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239439969 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247832988 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256881435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239646276 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241018172 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.24305475 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.240520663 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.238517499 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.241219766 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239587679 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247611995 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259504219 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241123332 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242092323 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240076343 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242672124 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244811542 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243190094 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243022894 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238472581 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242937836 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243477355 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24224866 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.239287699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241733434 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.242379546 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.245109811 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246774488 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240796266 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244255126 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242401596 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.244742491 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241972382 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243616296 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.240721305 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239921695 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241845618 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243435244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243302974 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245702751 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241881734 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244722425 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.24343264 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244675175 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246267196 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.250764253 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24884177 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.241098557 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241810561 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243153283 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246552127 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242205216 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.24282384 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243073029 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244364286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.244376838 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244126091 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243110892 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.246529112 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257093783 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.261192156 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244410892 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244248851 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246036029 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243845205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241982591 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244002445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245725196 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246432174 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250705606 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.244560442 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25143291 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261352118 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246413074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247516914 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246341665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.24938331 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.24697314 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245088233 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245149706 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.250125929 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.257528992 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244877926 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254901026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272095303 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263574367 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246033057 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245239341 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244138996 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.245403814 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246533495 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.246186564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245959702 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24572442 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.247130606 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.247242354 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249723477 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.246841767 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.246500643 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.248066315 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245317078 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247849421 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245490102 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.246357311 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.246144482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.246994414 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24814533 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246990831 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.24772435 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259275319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270399695 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.248270586 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247783187 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243839649 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.250619982 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250378317 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256412863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252732356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247866472 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246701939 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.247784619 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247971523 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246931613 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247868608 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.247832509 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248095643 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.246647171 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260089631 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270197634 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252281717 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247367412 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248677154 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248941142 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24942615 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249044402 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24812168 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250616169 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251327653 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252134461 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248339311 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250193312 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251505311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254686791 seconds)
  done (took 735.924574534 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247830102 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247565014 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246734772 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246657628 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247415844 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246824359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246607894 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247023814 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246928963 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246785085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246483142 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247119724 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247120373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24901003 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24777888 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247971455 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246492756 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240469298 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241252318 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241520602 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241737728 seconds)
  done (took 27.329432387 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.244097231 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.241684672 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243155983 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240378501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238727808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241755556 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239131206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241199885 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241798212 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239232274 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24247549 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238649385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.235531213 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.237054384 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235935214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238965167 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.239371904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235996399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.238951833 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234124949 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237282275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234248799 seconds)
  done (took 28.417420637 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.23741546 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.236378082 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.236089566 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.234696736 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2374204 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.23271213 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.236274481 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.235205145 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.235621583 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.236672267 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.234754812 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.236955264 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.241723822 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.239930992 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.238230638 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.236390782 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.381631789 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.236225668 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.236632958 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.23605194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.233483048 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.241148247 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.254839719 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.235782041 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.235995579 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.238054161 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.238150166 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.237917765 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.23917465 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.238021661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.24091737 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.23803666 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237482291 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.240781437 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.235945528 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.238166707 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.241838127 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.238980741 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.236236456 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.239566312 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.247136717 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.255042967 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.238131182 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.244459912 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.25810111 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.239052243 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.241294721 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.243713612 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.235745548 seconds)
  done (took 62.012709254 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.239281454 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.239698118 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.236593967 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.239836823 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.239876147 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.239606149 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.240003354 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.239470172 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.237272205 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.236782794 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.240416059 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.2377388 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.237913874 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.240107579 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.239238486 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.237074911 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.237147155 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.237596395 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.237813013 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.237610502 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.238096301 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.241716275 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.241777786 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.238581092 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.24197016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.239653072 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.238375724 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.240828243 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.24043318 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.240327197 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.240937094 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.240521621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.241085635 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.240452946 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.239479478 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.241987804 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.242073344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.239112781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.242083814 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.238880481 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.241765388 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.242001272 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.242306292 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.242202161 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.239733488 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.239707124 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.23943002 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.239435065 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.241253625 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.242602559 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.242224214 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.23938775 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.242587785 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.240220455 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.241984747 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.241985668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.239926118 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.240315247 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.242529996 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.240641614 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.241088456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24241983 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.24166022 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.243311982 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.242897332 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.241045942 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.240351488 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.243835008 seconds)
  done (took 85.494899713 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243091613 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.242235449 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242916604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243053478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242503893 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.241819674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242539565 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.243129306 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242937443 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243206031 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243355161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243454845 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.243249238 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.243711475 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242864394 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243385438 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243466738 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243568506 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244155716 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243533725 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.243428497 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.243470383 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243687502 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243509752 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245854656 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244121522 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244877425 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244342935 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244518975 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.244697584 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246193548 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.242951361 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.244534473 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.24423594 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.244111782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.244339487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244533906 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244722003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.244952437 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244589597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.24619609 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244703383 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245429254 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.244827701 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245214122 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.246131924 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246216464 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.245847253 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246579086 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245631168 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.245539032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245847816 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246001716 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246671945 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246446505 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.247043765 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245466078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24489987 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246688799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245526028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246940671 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.248219494 seconds)
  done (took 78.320506041 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247820605 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247750974 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.244829187 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.245408449 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248014344 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246224827 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248135947 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.248036209 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246601039 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.247958677 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24771628 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245004681 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246067511 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249234884 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245088089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246265433 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244643581 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246414823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248732623 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246532939 seconds)
  done (took 26.097979598 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.24550505 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.249500225 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.246177985 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246172431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.248942501 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247659433 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.249668579 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249525427 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246340977 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24902699 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249845236 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249693072 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246526971 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246714587 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.24943672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247175052 seconds)
  done (took 21.129244413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.24616435 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.2497995 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.249784942 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.249157269 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.247266961 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.247058681 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.249957253 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.24713488 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.246801803 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.249917485 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.249785372 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.250761725 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.249851716 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249423124 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.248253861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.250747039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.24801848 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247503603 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.250876473 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.249809443 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.248344415 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.249392745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.25095251 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.250140028 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.249866507 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.248805445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.24846247 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.249646326 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.247476545 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.251736913 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.248387745 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.24928219 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.248124069 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.249849009 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.252558315 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.249143108 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.251458444 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.25187832 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.251694708 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.253202702 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.252010009 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248951881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.252988058 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.251890209 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.249512014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.252564484 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.2488824 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.251374266 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.249246147 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.249716883 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.252667451 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.252951046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.251449798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.253498767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251658567 seconds)
  done (took 69.912977983 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253999661 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252231412 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250252049 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251946376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.253545761 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.250598753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.252545248 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252608355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250027957 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253304015 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.250944159 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254341281 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251868258 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253548821 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252287358 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252734179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25042613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.251392112 seconds)
  done (took 23.704269583 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.251180655 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251537488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.254097602 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251919861 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252051608 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25434668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251541594 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.253783632 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254001666 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253680885 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251793132 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.255530312 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254022892 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.254453733 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253222785 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252413429 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.254896904 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253924815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251819549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252460349 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254323465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254852284 seconds)
  done (took 28.738663247 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.254406753 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.254210961 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.254705143 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.269783506 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.270055716 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.274283619 seconds)
  done (took 8.744444604 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261046011 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255018358 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253314306 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256998174 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256428958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253205708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253212419 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253671427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255598212 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254453251 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254093754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256895486 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255606813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254642837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255952609 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257948518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253635167 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253880579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255465702 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256254772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254033849 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257246579 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255617554 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254561955 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254377222 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254209803 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257262173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254953211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254370224 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257990715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256813861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255455174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257508404 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255648479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25947634 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256792187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255496151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258881354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258120973 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255426806 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257792636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257703547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258118074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256383303 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258177047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256020681 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254864763 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255419441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256266331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258167598 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258534845 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256816669 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259316785 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258390321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258649183 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259443429 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257252702 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255435519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25774211 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257453607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256492862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258888896 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257432389 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258061535 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259182858 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257767476 seconds)
  done (took 84.119346151 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257524074 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25705275 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257535075 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25785114 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256837452 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25727954 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258114396 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257445332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257247048 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258223969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261445867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257439651 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256703492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259234325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257960025 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257623953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258996501 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258381248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258761286 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260279879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258633026 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258043741 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257800002 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258039841 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258491971 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260993499 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258993448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257626888 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258530396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258433644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258829801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258721583 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259430393 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260138458 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259745473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260095048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25922732 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261153111 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260651591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262131646 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260328998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263424779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259637301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260461629 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261255526 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260064279 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260162756 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25995903 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259562819 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260186659 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260858546 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259997945 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261289983 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261677275 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260079179 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259862855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259754007 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259111787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260395537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262630758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260275665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25988026 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263498141 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260708424 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260971181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260410046 seconds)
  done (took 84.297783558 seconds)
done (took 1709.324792688 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.424874626 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.377185662 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.26125462 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.269599462 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.262377878 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.256809308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276757774 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.262018792 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.260993041 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261585202 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.262496138 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.448196963 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.25947078 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.261438305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.262990975 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.358256004 seconds)
  done (took 41.942820582 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285890966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.275362359 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.377115543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.292191863 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.295091284 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.447364081 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.323925264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.27415461 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.428591815 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.312642101 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.704155319 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.296529001 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.273644786 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.296398251 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.289381119 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.445926213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.498035932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.707572334 seconds)
  done (took 29.001325739 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.681933432 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.29825863 seconds)
  done (took 9.163010303 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.29198432 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.273080907 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.273636227 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.272019295 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.273765156 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.261887364 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.269429585 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.264158536 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.63533536 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.387418869 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.270631068 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.276998105 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.286692384 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.269734079 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.267788962 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.304666519 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437831729 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.265912654 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.262130544 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.27029729 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.265738391 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.347122548 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.303376592 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.264487937 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.384027953 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.578879685 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.268543249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.271165518 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.413383517 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.263208217 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.262450884 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.262175785 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.263234618 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.864637379 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.678241869 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.283288276 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.285207524 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.271022088 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.26056856 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.400917632 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.264030653 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.268450936 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.25663485 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.674602654 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.39038595 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.373498281 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.419128118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.282127245 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.265401119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.322401519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.264597497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.265796631 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.291077348 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.018088742 seconds)
  done (took 106.857496267 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300140323 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.657883648 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426401085 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.280477678 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016590578 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990092712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272579789 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.518818323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.296093524 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.256452516 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.536374902 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.74258678 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279615625 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.287729892 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.646290155 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.34138382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.256981812 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.938350293 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.27227615 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.2590205 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731171548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257491713 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.258266793 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.416241616 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.292910682 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686309072 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.528156881 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.658999667 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.273534813 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.256004061 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.702284308 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273170786 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.269721307 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.258570958 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.507210132 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588991168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580099326 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.278961263 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.269750362 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.257165096 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.285190932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.682238866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.590308016 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274515798 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.27329161 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.687318269 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.272432511 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.260358147 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.257332582 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.463450774 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.922480184 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.258812134 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.537182945 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.249461322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.614316634 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.273199898 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.257161749 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.699837795 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25886339 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.315686589 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299095978 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.243147808 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.243782436 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242796 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.242976872 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.564145785 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.39473585 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.248751281 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.563215657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.698002513 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.259156568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.760797668 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.134924403 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.263440677 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352189699 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.245498453 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.787627117 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.710758144 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.288691261 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.243938256 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552188456 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.263070619 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.51092922 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.257685463 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.258454514 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741337386 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.247678073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.262814213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.245099075 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.256850986 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.000177244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.24708538 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.516009761 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.259301927 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.244963923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.244936857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.26834554 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.244874403 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.260270148 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.249907019 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.749127249 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.264232074 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.194744344 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.261548795 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247412675 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.246177774 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.245324585 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.244249155 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466918694 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.644562107 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.26328412 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.245610108 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.245381568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.247154693 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.416945618 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.246446656 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.52811902 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.261598657 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245370244 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.249562673 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013140007 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287167933 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257325095 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.249631083 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138273989 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.448607692 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.26370136 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.245945753 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.24742263 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.262884381 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.392596716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264505088 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.322698871 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.247707609 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930008088 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275382057 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.267456407 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.560489188 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.252204124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.085184407 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.266262103 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.248765712 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528833891 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501458082 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.314233469 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.25072259 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.247117843 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907577227 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.28879614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.393640269 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.26641747 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.251035457 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.443797865 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.572882759 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.248270842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.897714202 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.24876889 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466846771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.255106924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.543893416 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718809038 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.264081317 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.248686661 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934461147 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935456908 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.089588834 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.251467767 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.511498095 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.221610021 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.734266602 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.248850815 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.249864278 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.813948989 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.249030146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.256918701 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.249482876 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.250027476 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315946759 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421621745 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.699891939 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25470357 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.676292589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301139994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250407884 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.258675793 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.252073938 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.597211463 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.278722382 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.250599975 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.280140262 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.251589381 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.259763548 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698274472 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.195092844 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.252286469 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.401497791 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860430617 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.267298016 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.252943543 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.803572612 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.467430213 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778308582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.308288346 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535843889 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.277038243 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.286669761 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945998505 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.27148668 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.746273737 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268634261 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.253409883 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826174232 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.266700118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.610670598 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.252847205 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.253148128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784826241 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.268955556 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.2537045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.398807923 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270154206 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52060623 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.253126444 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.289552648 seconds)
  done (took 1090.822308079 seconds)
done (took 1278.962695597 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.252669185 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252380297 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.235339493 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.256644708 seconds)
  done (took 26.167806739 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.263192465 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.258731516 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259872949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.258060638 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.262825876 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.260344621 seconds)
  done (took 8.735493642 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.339879261 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252523634 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.258972894 seconds)
  done (took 19.023747684 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451662266 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.469516146 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.56696653 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.324824163 seconds)
  done (took 9.985288383 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.260527947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.260464852 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.260208021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.263584913 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.265127033 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265130675 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.264013699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.263644104 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.266193382 seconds)
  done (took 12.541601414 seconds)
done (took 77.626113923 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.314556364 seconds)
    (2/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.247619577 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.468120211 seconds)
    (4/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.236662141 seconds)
    (5/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.259543677 seconds)
    (6/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.340883151 seconds)
    (7/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.454996384 seconds)
    (8/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.727309307 seconds)
    (9/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.280761239 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.497567717 seconds)
    (11/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.278839566 seconds)
    (12/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.838108317 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.29702252 seconds)
    (14/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.330464478 seconds)
    (15/286) benchmarking ("sort", Float64, false)...
    done (took 5.515144435 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.281560554 seconds)
    (17/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.236416259 seconds)
    (18/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.299813774 seconds)
    (19/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.431873691 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.367419909 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.239765778 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.281213245 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.235488039 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.808499019 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.61067719 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.073831615 seconds)
    (27/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.342251477 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.655414071 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.370924952 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.840566652 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.048493843 seconds)
    (32/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.962421609 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.237381714 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.236381799 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.875637148 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.091384297 seconds)
    (37/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.268995137 seconds)
    (38/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.570918648 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 6.258371998 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.38934393 seconds)
    (41/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.249090403 seconds)
    (42/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.620025545 seconds)
    (43/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.453575436 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.238943215 seconds)
    (45/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.859929833 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.544772512 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.274497158 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.125204549 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.370803212 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.538986341 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.243311944 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.137860794 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.073626182 seconds)
    (54/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.255187115 seconds)
    (55/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.489159407 seconds)
    (56/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.027523228 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.657067162 seconds)
    (58/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.379960587 seconds)
    (59/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.952731311 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.844064349 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.316722384 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.349571262 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.341172833 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.266280244 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.282734606 seconds)
    (66/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.269691791 seconds)
    (67/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.59305586 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.266151478 seconds)
    (69/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.233141867 seconds)
    (70/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.345912368 seconds)
    (71/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.257902563 seconds)
    (72/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.684177335 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.954763271 seconds)
    (74/286) benchmarking ("sort", Int8, false)...
    done (took 4.29084081 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.688621862 seconds)
    (76/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.240713082 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.23982951 seconds)
    (78/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.011242023 seconds)
    (79/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.723875212 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.549800388 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.429189422 seconds)
    (82/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.240374585 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.361789751 seconds)
    (84/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.269070564 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.701723873 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.240560392 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.633027341 seconds)
    (88/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.724268247 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.416903162 seconds)
    (90/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.462385151 seconds)
    (91/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.399429163 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.602626664 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.67758739 seconds)
    (94/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.321884726 seconds)
    (95/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.346498108 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.38192964 seconds)
    (97/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.282623851 seconds)
    (98/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.347375971 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.836521723 seconds)
    (100/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.247077291 seconds)
    (101/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.241248105 seconds)
    (102/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.064566739 seconds)
    (103/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.384495628 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.273385657 seconds)
    (105/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.910114094 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.473518904 seconds)
    (107/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280874294 seconds)
    (108/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.004124636 seconds)
    (109/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.346458864 seconds)
    (110/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.185347468 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.413057507 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.24195897 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.335529199 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.243441138 seconds)
    (115/286) benchmarking ("sort", Bool, false)...
    done (took 1.771804227 seconds)
    (116/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.3008366 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.634876203 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.299407383 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.51783408 seconds)
    (120/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.49114358 seconds)
    (121/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.262029473 seconds)
    (122/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.277498193 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.979259087 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.624783528 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.274301519 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.544054163 seconds)
    (127/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.289179426 seconds)
    (128/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.439820938 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.288256507 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.24695642 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.134176139 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.043282512 seconds)
    (133/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.058010412 seconds)
    (134/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.457616639 seconds)
    (135/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.693193025 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.413469006 seconds)
    (137/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.605294579 seconds)
    (138/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.516607427 seconds)
    (139/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.280099883 seconds)
    (140/286) benchmarking ("sort", Float64, true)...
    done (took 6.271710617 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.978216666 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.290549813 seconds)
    (143/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.384347602 seconds)
    (144/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.370064025 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.36933411 seconds)
    (146/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.443943869 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.252857392 seconds)
    (148/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.29254193 seconds)
    (149/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.201894355 seconds)
    (150/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.308287261 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.286378353 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.606348403 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.249381957 seconds)
    (154/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077734573 seconds)
    (155/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.262324287 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.38896235 seconds)
    (157/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273829807 seconds)
    (158/286) benchmarking ("sort", BigInt, true)...
    done (took 6.26386281 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.44314292 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.607935716 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.305679989 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.820167332 seconds)
    (163/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.086891994 seconds)
    (164/286) benchmarking ("sort", Float32, true)...
    done (took 6.264163827 seconds)
    (165/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.252963075 seconds)
    (166/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.351122291 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.24531768 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.350172302 seconds)
    (169/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.747118382 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.329206186 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.255785968 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.292365895 seconds)
    (173/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.612484128 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.298912332 seconds)
    (175/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.601500719 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.308652945 seconds)
    (177/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.29248174 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.037580838 seconds)
    (179/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.618410798 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.240551323 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 5.366950856 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.337461044 seconds)
    (183/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.246074557 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.262383542 seconds)
    (185/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.522807412 seconds)
    (186/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.248585092 seconds)
    (187/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330278547 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.985065628 seconds)
    (189/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.371648242 seconds)
    (190/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.249370137 seconds)
    (191/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.767858958 seconds)
    (192/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.293959927 seconds)
    (193/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.276297539 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.298854676 seconds)
    (195/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.606160686 seconds)
    (196/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.266536083 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.287328576 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.702376813 seconds)
    (199/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.034312159 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.89409749 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.477480991 seconds)
    (202/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.248422302 seconds)
    (203/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.33179818 seconds)
    (204/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.293400206 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.588760312 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.05288639 seconds)
    (207/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.267413696 seconds)
    (208/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.977979395 seconds)
    (209/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.248999822 seconds)
    (210/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.33483405 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.580554413 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.290664383 seconds)
    (213/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.489286065 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.398243573 seconds)
    (215/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.297600786 seconds)
    (216/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.388136244 seconds)
    (217/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.275476599 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.311399424 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.565241577 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.985157121 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.259433874 seconds)
    (222/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34608279 seconds)
    (223/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.274364413 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.267585261 seconds)
    (225/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.249995539 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.269134707 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.783087309 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.106303607 seconds)
    (229/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.368633662 seconds)
    (230/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.463329044 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.680998644 seconds)
    (232/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.310657513 seconds)
    (233/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.332929966 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.286235873 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.152638113 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.27967269 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970219128 seconds)
    (238/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.375259759 seconds)
    (239/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.514616669 seconds)
    (240/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.265971338 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.290754368 seconds)
    (242/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.271180396 seconds)
    (243/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.510156404 seconds)
    (244/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.448501043 seconds)
    (245/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.411076139 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.472172752 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.312786971 seconds)
    (248/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.026504564 seconds)
    (249/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.252158658 seconds)
    (250/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.251766384 seconds)
    (251/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.48006207 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.90664035 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.675835598 seconds)
    (254/286) benchmarking ("sort", Int8, true)...
    done (took 6.271083441 seconds)
    (255/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.297555882 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.25511929 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.741745991 seconds)
    (258/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.627856485 seconds)
    (259/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.733130317 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.452222377 seconds)
    (261/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.371584391 seconds)
    (262/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.102238775 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.381881213 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.35375541 seconds)
    (265/286) benchmarking ("sort", Float32, false)...
    done (took 5.262920485 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.287438382 seconds)
    (267/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.366061674 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.387738175 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.335828208 seconds)
    (270/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.252484454 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.100352411 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.298955612 seconds)
    (273/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.254183852 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.31449049 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.289825819 seconds)
    (276/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.253312144 seconds)
    (277/286) benchmarking ("sort", BigInt, false)...
    done (took 6.290894245 seconds)
    (278/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.88532502 seconds)
    (279/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.259153044 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.325306351 seconds)
    (281/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.90809775 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.272886491 seconds)
    (283/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.778857176 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.296355848 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.094903921 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.882998854 seconds)
  done (took 912.845058877 seconds)
done (took 914.018552351 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.305825033 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301897146 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.283601455 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.305555707 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.395349461 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.307317932 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.295081356 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.286184179 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.331447297 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.333241668 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282502111 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.306660164 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285420761 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.284910811 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.284107204 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299753833 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.274649523 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.283854185 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.301568812 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.293477573 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.299423296 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.283686739 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.333671472 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.306320275 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.288223677 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.287917247 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.288231409 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.303283235 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.396865229 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.289817668 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.28843611 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.297679623 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.274757505 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.283585117 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.27973354 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.305269731 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.297687932 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.29529603 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.28868709 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.318056677 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.655790972 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301908812 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.287540409 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.286861373 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.285994291 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.290804255 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.287441634 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.292533349 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302072991 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30217189 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.644698086 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.31727163 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.28977757 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.287258284 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297333382 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.288078596 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.289978831 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305204059 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.306942724 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305311973 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.261655341 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.293224647 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.289193735 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.303804738 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295926325 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.682223561 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.300437244 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292258297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.655057074 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.310172856 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.679511368 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.312257808 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.288970578 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.302862532 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.320788514 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.275573547 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.283064593 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.288515749 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.2954725 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.28748467 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.298779295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303452685 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.293650685 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.288775873 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305471618 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.312020297 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.299782906 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.290197979 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.298545481 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.309208328 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.298039212 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.300900012 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.292472952 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.284528699 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.298495936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.292178662 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29256162 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.29320464 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.293989685 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.30024083 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.652585951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323559258 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.287559189 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.287042096 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.289790805 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303772557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.652959134 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.306967108 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.312806087 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.337418329 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.290995862 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.265948362 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.295214035 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309702821 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.298879146 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.293693724 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.286187187 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.264474082 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.648089077 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322437399 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.291869686 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.289056718 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309787833 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.293178126 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.289120429 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278467148 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.293970094 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307383454 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.412813991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.303490882 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.323646791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.290250915 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.295823262 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.315980227 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309981353 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.324637552 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.294972262 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309870058 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.307739793 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.289111845 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304006081 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.303467252 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.294589097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299154696 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.286681024 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.317043685 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308115691 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30801555 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.313964541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.414575164 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.290094938 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.268104441 seconds)
done (took 217.705218508 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.350816174 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.287517916 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.38020457 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.290664497 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.389271439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.388854607 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.287048094 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.287533349 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.288140764 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.69585837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288846989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.287834807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.28517896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.288518932 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.37217993 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.290807463 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288855669 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.653934777 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.291585157 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.361616446 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.287400936 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.28816328 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.291238602 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.670108721 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.291756299 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.283511856 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.361902135 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.292328025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.635624548 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.286501317 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.289810119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.637359102 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.380645271 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.309733058 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.302514906 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.299877848 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391837301 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.309523039 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.372136993 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.371775378 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.38286863 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.329984769 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.287891626 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.28890878 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.293454007 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.292427571 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.290874868 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.319928518 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.288648509 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.289499188 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.655366574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.30153379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300634108 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291338807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.289928617 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.311829135 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.291764254 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.293686648 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.381992449 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.294563704 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.354547249 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.671908293 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.700899556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.294837517 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.291794323 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.291717495 seconds)
  done (took 145.693903728 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.360978437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.365809659 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.401206969 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.310810724 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.344141146 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.40778628 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.310561208 seconds)
  done (took 10.704708914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299145922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.296285717 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.343562088 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343124589 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.295004964 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.475235304 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294991221 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305628327 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.292474988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.348523054 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.296578097 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297163047 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.301924604 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.291155527 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34348357 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.30606054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410066099 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295153786 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.295993043 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.452750801 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293453537 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.30290332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.348154256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306567808 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.296701026 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.301149158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.119233502 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29696739 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294370991 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.296937454 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293215363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.374103993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297264791 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.297157197 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292383455 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412233545 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.296128426 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293058004 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.296598579 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.296628778 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.297751513 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.297479503 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297248553 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.294087431 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.296731706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.320209552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.298480224 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.296979998 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.29983268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.299233003 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.348348842 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299059468 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.295786219 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.296055053 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.35401878 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304060086 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298124374 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.295472101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.298789789 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296228666 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.455107367 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345220636 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.298776919 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345056261 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298801384 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299678273 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.299414075 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.299466722 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352734412 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.298527083 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347077497 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.29682716 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.493979213 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.322159898 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.301609865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.301280137 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30181708 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298507206 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.298760102 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.30393073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.297111111 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300145353 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.304553533 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296147947 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29654571 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.467905861 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407188894 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.299341312 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.312986267 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307282933 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.298111559 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.353051738 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300275757 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.298152818 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35081748 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.41572063 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.354162537 seconds)
  done (took 150.097741577 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.304648938 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.307709507 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.300823947 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.316317947 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300326727 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.301207811 seconds)
  done (took 9.039387426 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301699687 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.30223633 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.301241738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301401681 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.301331358 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.302361633 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.301215119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302737461 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.30362411 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.30237982 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.30209195 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.304074162 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.30275061 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.300271838 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.301155837 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.302760289 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.301750238 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.30041853 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.302755641 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301545531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.397877917 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.301886005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301857043 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.302227742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.307058082 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.301995176 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310336787 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.303144776 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.302735626 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.310370772 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.320779563 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.304107816 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.302422085 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.308727878 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.306422907 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.305054964 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307353505 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.305336322 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.301415151 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.304006819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.305754355 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303401512 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.303929187 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.306771998 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.304186183 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.308224549 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.308652164 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310321887 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.30445322 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.306869736 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.307323326 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.304774427 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305892638 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.307958297 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.307418194 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.324825188 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.31080578 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.30587887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.304610382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.306186299 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.305760688 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.3063539 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306668612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309179528 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.313441524 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.307988753 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.304808642 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.309536288 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306191742 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.306646968 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.306795965 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.30385351 seconds)
  done (took 96.29283195 seconds)
done (took 413.029380637 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.565063113 seconds)
  done (took 7.780087778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.381554912 seconds)
  done (took 7.597692561 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.974707077 seconds)
  done (took 21.195048416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.327795122 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.376546181 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.313583869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.303220648 seconds)
  done (took 26.536515128 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.484395368 seconds)
  done (took 7.699828009 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.302115159 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.30486958 seconds)
  done (took 13.824554081 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.74395727 seconds)
  done (took 7.960499173 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.665392431 seconds)
  done (took 7.886241424 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.312779292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.322834351 seconds)
  done (took 14.11021173 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.281270664 seconds)
  done (took 7.497753007 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.137008229 seconds)
  done (took 11.354663416 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.307338446 seconds)
  done (took 7.526293608 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.359435659 seconds)
  done (took 7.576403122 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.010929762 seconds)
  done (took 9.228278891 seconds)
done (took 158.989597358 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.301380984 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.310106726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.303615839 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.302272308 seconds)
  done (took 26.434726986 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.342630515 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.342939521 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.344096446 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.354177964 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345659981 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.34259639 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335045115 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.33469868 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.353832426 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.345315788 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.344019031 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345699444 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.342505336 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.335957657 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.344958866 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.344594736 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354543792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.345172285 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.33586003 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.34618339 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.311227172 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.355154814 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.34707418 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.310706576 seconds)
  done (took 33.422375576 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.830112839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.381163942 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.464413922 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.361195657 seconds)
  done (took 7.255614589 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.363232844 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.364039895 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.375346878 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.414561554 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.440891583 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.372803093 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.334571744 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.332798735 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.318308639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.365011167 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441207304 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.380930348 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.447859806 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.310077932 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.499422355 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.310709103 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.311718352 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.363461163 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.414771678 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.431671995 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.312011915 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.363273745 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.367386607 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.381694963 seconds)
  done (took 34.237412238 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.312590385 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.330815582 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.311449452 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.311192248 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.320032077 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.311901328 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311900932 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.313974869 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.311785537 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.318744438 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.309841091 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.326000354 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.31119761 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.312598348 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.318995765 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.31374009 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.319556479 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.313431854 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.312338339 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.319027287 seconds)
  done (took 27.532584445 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.306771915 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.160524771 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.659099745 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.562975554 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.308311927 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.306858233 seconds)
  done (took 27.526014199 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.380640815 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.525550508 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.313994525 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.653862212 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.743977428 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329737927 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.313800016 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.545535147 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.850962677 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.838195763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37268063 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380220359 seconds)
  done (took 19.471428059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.310409485 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.309364968 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.312671228 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.32756356 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.36566389 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.334442719 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.320657543 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.306877161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37009802 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.38680683 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.334782953 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.368631677 seconds)
  done (took 37.269869467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395965885 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352991537 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.199457165 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387968666 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02714119 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521116203 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325935386 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013691732 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.333543387 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583990934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312524812 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399288908 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564654267 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321191043 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315604329 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.244424264 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557253069 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770298503 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316043122 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.329838954 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340254749 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313960223 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.266047494 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537135405 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54321231 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.291514244 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624922415 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.090192681 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587999653 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326164663 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322316145 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311686045 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585667259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947534377 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425657536 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515652927 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346748152 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858692467 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.299478506 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.185425165 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319822103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313635325 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322838431 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312340379 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246455885 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312443525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022473231 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.336643853 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.024827418 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312802175 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562848901 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409852733 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316922762 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.304521403 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312223335 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.316200971 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.315795135 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40362253 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8998563 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.434959803 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322552337 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.25075738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326697459 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189537479 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934644766 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.337446678 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.317797164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317402324 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248642058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.194272584 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334735173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461563204 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.340562631 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962507731 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9943006 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353768951 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245594775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837647472 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321527079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.251884121 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542441029 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093018239 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250109991 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.261910711 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.249683331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988860459 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326436787 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.66387996 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340328832 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01956589 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.540263725 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35216156 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33904928 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539058607 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.194395702 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314283326 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.315724784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460548279 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337394826 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.006170685 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269398348 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.320211203 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57201965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.527586282 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320771222 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.259225066 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799522127 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335640778 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.339736931 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31661906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528287273 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.892785256 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348937698 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440048715 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337477022 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.093027132 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022473084 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328176291 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.324189129 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319159639 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585048911 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.038312285 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205252289 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385055933 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324768057 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.316625473 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.222096064 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179374756 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.478132387 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.508100018 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349576202 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.331438994 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.318791187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26292389 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.316420155 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318749007 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.099584948 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541737179 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329438893 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597377082 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252965276 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466316965 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.329453384 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.541655647 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.481658801 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.341325148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579130772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319578913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344680259 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333523321 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337765883 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420719477 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342320378 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.322646604 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57861229 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.323031556 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324481989 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234200896 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.104368064 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322228164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.32479294 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321932861 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888719777 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317941258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324942406 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207110066 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.334184594 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386453104 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326757459 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527933324 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.51443554 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33609629 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.326448711 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.323019347 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542364493 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329985056 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.22408539 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40741536 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.779349706 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.905797457 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351366276 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.255667818 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.032252542 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.014654308 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322212212 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.511619713 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323070439 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527779356 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35629629 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328362567 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886191753 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340503269 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228494044 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.332576016 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3353376 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.327862249 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323895723 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.484556332 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480592372 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335483191 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.336790129 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466399265 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.336506143 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255875547 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.840249376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328439148 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324118298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.101343724 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358189466 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.23799654 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108675158 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59994692 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32609145 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576126723 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.318349777 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.359120146 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.323166739 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338643315 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327155556 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.335383361 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331542058 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.334214938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.231472523 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.767736635 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896120621 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018114294 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863836612 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595970823 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.352707221 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.210647969 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019572591 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277682895 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981964515 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556894781 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035862475 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288856601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789782222 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.511936374 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084606809 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58170113 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55485969 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.578994534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.345382743 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581126621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53830028 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360349138 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332999535 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258700451 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.613633479 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867531387 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345341403 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403735898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022396078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345604316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104347845 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.364079184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.990517186 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720414773 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893626884 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.715233889 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326225759 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331033577 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111003436 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35241354 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.854547337 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938131706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345693271 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.808315187 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281666476 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535762434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.360390883 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.324491233 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.830946049 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.340875248 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.582252092 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582378241 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262878849 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332521276 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845666112 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200360421 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.334520638 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329535592 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048455274 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345280073 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612090591 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.339745438 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.512572488 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349128347 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.263170781 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263518302 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.022369733 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338622436 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304867315 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806771934 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.340672997 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335575866 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352639866 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182524484 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584301685 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.344158082 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900595426 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571261005 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339572909 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353567362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.333944378 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331403216 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.310919886 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222139173 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566437267 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413275306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.552894037 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.251654943 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.233746699 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339191455 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542216057 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213694295 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341107228 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568069086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.058523195 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.333440002 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032831952 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376320032 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33200971 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.782588525 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334670913 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352928435 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420080218 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53912656 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.363491324 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342590024 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725920016 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355010815 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334810512 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.346237059 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425277422 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493794062 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.51152626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.109729128 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904095458 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06746641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92166885 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60661137 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335015299 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334610432 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267796013 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481607754 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858614956 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607844673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462160496 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.337145861 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355759689 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333743611 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342516154 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548061284 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608175866 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.204847893 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333301203 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014049801 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.215094128 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344016393 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.544795291 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818117887 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888329334 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442296143 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346000766 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035287284 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627290761 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.425221091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334552557 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889462951 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.346920601 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.024512988 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.34009098 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34579216 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483489059 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589169882 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979543397 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.363535789 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.49053759 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.109926386 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28273281 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595298338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.770793572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543509249 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931057917 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042803477 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599738285 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406501059 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543995491 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.462607588 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48513642 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.341871538 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218063558 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336672036 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182652368 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.045979927 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.345185987 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910013848 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619295503 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.340135335 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.343378606 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359568201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.347406081 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560190985 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019269899 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564729865 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346646314 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347041231 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906976698 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91047011 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614301629 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273737742 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.340435145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583297028 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594315334 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36280436 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.844611552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.049961676 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875308565 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.32992369 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360464154 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342613054 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028661023 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912591887 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.54369288 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830526055 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003990096 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352115375 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616253215 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343780095 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346336938 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618092487 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.341546015 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351181568 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552325726 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.936495614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106414587 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.357418684 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.316525939 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.279533675 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.565064877 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423022898 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276848504 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343209475 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.739727628 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363996016 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469943288 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350250748 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.350178834 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340266534 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.101951422 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613595732 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.346424751 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.339358907 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.320978091 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352713864 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435824196 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889422462 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36492414 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.013789133 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.694293832 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596672566 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354460156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.324158254 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.34483088 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341517531 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04634764 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308936438 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344262912 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892460037 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.359455386 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.355144837 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34475115 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.557864043 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553052352 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343067084 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569556928 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368818397 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360344871 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.301565889 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.109774828 seconds)
  done (took 1650.050450168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.376870576 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.384839148 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.383219641 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.445564278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352009583 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434808432 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.401553352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458378679 seconds)
  done (took 52.491926361 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.348391974 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.494576916 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.374809378 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.343435285 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.355888509 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.356881058 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.790759131 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.368529721 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.352328641 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.353029265 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.345855457 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.350530664 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.980621112 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.357151815 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.343745068 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.343502556 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.35481705 seconds)
  done (took 65.474432327 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.358677585 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.682614967 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.971150285 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.416222674 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.358937938 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.349066737 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.825903692 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.372872479 seconds)
  done (took 58.591696055 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.361681823 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.361730722 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.36223485 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.360783046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.361670058 seconds)
  done (took 8.064310395 seconds)
done (took 2049.042318498 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.349588442 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352130119 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.34765588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.350919394 seconds)
  done (took 6.656314461 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.324275657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021401338 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.32664264 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339503235 seconds)
  done (took 18.26816993 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.355703991 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.38045756 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026476282 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.943193189 seconds)
  done (took 5.227854805 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.094560052 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107959513 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.091754929 seconds)
  done (took 7.550898456 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.344755523 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.349417714 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.346928555 seconds)
  done (took 20.29845873 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.629507718 seconds)
  done (took 2.886413319 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.493671404 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.541991863 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.662452544 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.68347464 seconds)
  done (took 7.639474056 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.731771034 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.716824943 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.539242628 seconds)
  done (took 6.246508206 seconds)
done (took 88.767767668 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.067208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.588569565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.550929607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.038113568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.577845698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.549175352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.560052588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.009974727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.549823273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.540078525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.045813182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.581014273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.717368958 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.589281377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.726545303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.586322433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.576669354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.108937488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.729736001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.962713596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.561477968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.680172842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.880303593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.695887483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.576545748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.501622613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.271260417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.588000454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.902529537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.289200492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.501879684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.138619566 seconds)
  done (took 193.501052893 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.352643185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.347666436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.364204183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.366164479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.348598329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.347144162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364431957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.348114851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.348481556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.351413651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355476053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361432664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348569396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.360220211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.348871717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361500311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.349476139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.347775178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347841935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348313207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.349832577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.371544775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.348640303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.367486561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.348944669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.368666307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.366346793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366791136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350101571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.36409689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.353192558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.351209277 seconds)
  done (took 204.635224991 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348961002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.348456078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.350316892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365514414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349158886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.352862399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.36699003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.35075288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.370776447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.361072336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.350367668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.360780321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.367188464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.352253987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349694202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.367231064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350312045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.349987894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.366082421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.349848684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354368528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.35489705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.350510302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.351960816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.368582621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.367405303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.366407602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35119664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.366303738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.351232204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.356400255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.355197368 seconds)
  done (took 204.685840754 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.553373623 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.357734852 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.358913885 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.309153825 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.358006024 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.358567669 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.353535676 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.548243867 seconds)
  done (took 14.46085169 seconds)
done (took 618.541333824 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.602712824 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.342184086 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.555033054 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.377894875 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.091256682 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.395988584 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.378339984 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.544722959 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.266070541 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.549883479 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607504566 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394117635 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.746993657 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.377233586 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.632090492 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.479279975 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.221934173 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.335336213 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.691637332 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.868912803 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.633497854 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.821868191 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.562134844 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.264618877 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.758643549 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.820606097 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.047344217 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.212726271 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398884706 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.695383266 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.948794955 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.286116986 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.439867213 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441358225 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.497598332 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.477011569 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.274067011 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.43476284 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.57737833 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.598029963 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.863881867 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.088147078 seconds)
  done (took 91.86631717 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.344132678 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.342851972 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.343398056 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.343807443 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.345179237 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.342784549 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.34289857 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.342758172 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.343527531 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.343478724 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.343888104 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.345257129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.343963969 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.345019181 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.343578814 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.343586218 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.344246734 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.345157075 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.344368868 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.343991061 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.344623322 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34398575 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.344615911 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.344165296 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.344450266 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.344013196 seconds)
  done (took 36.210556537 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.362716126 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.602578974 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.765133262 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.371057825 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.364335779 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.367334066 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.439273745 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.368064409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366725677 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.366600966 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531310103 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.368516333 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397916086 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.792341539 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.370764852 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.364322754 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.364037974 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.365457039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.612536919 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.374087242 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.462384443 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.36681938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.441685396 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.376817225 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.387704768 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.365840863 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.371646713 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.920053858 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.388094032 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.53375239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.128213391 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.440854467 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.872945376 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.800776029 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.134358992 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.370920369 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367310698 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537343214 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.368237595 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.365601264 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.441936033 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.369566553 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.775710047 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.020978508 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.386983898 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.365570888 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.939011136 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.55396709 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.605771535 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376556314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.799567627 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.373751983 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367348715 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.367466482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.605452405 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.373315118 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.36734827 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.917964809 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.393977248 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.442746605 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.371370984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.366840988 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622831227 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.372876478 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.615401706 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.37063572 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376200356 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.387120665 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.778792285 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.374187007 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.048994997 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.389296557 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.367635199 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.535651579 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619553222 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.972069553 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.392187267 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.625235804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890627556 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.462580807 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.378154423 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.941825665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.466192255 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.377645111 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371642493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.370278558 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.368094269 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.415365233 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.441473516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.989986913 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059028162 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.954600096 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.469205551 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.387120654 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.370260636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.930882974 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39379083 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.36943772 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.77904947 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.048870161 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.392263175 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.378945853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.046819931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.394089559 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.446108134 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.380400928 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.786461345 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.375232505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.416543704 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.370758817 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.376797838 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.392506051 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.445884206 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.378249777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370710642 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.015832874 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.565003561 seconds)
  done (took 180.387213446 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.364889347 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.364665788 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.365091456 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.381965269 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.364920688 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.373481814 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.364776339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.365956102 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.371961092 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.364941695 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366275762 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.366094531 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.36732532 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.391001603 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.376705368 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.371474258 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.980842534 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.366623763 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.365831634 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.38129103 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.15417583 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.369781735 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.381921922 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.367393327 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.367760124 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.366622369 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.375643133 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.38955825 seconds)
  done (took 153.064426939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.372787807 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916574004 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.390083045 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49985749 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.397646211 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.371424733 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.497761174 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.433629189 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390351854 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.370605466 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370045605 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.665018139 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.373736266 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.870186547 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.557406686 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.519162557 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.872885636 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.390617938 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372424165 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371277865 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.502552164 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380192431 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.663858421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.919471361 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.391893765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.918429313 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357222398 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.375009959 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373169056 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.920774882 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.38912889 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.666564956 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.448786113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435130296 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.935986354 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.888871736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.888079471 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.517772937 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.37863136 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.372998305 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.373747585 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.358124509 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921032678 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.39237747 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.376636171 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.910538378 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.392313326 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.375467275 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.380644389 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.373567628 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.432796873 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450796699 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.689004729 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928743413 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.464659601 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.391288686 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.502246761 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.778290797 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.37804128 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.872849761 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.358210088 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.927936664 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.395750475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358663624 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.376089397 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380545688 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.519986343 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.507533457 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.87888531 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.392717296 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.87379081 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.538303529 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.379691809 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.375327502 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.377964609 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.929598705 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.892029539 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.537977738 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.51109039 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.570073354 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.365657984 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.376679209 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.361025773 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.45270762 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.380506979 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.930487386 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.892614785 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.394895127 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.37895159 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.377993026 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.379327041 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.54720506 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.95144491 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.471619417 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868180027 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690460181 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.674298575 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.380702139 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.433365804 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.392676183 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.675866877 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381150849 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.433722937 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.842700823 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.675409888 seconds)
  done (took 163.544035524 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.615759006 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.546109134 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.46453728 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.524957942 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.963101676 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.937429001 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.595769246 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.522146631 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.485989307 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.631883468 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.493835228 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468806168 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.58877924 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.455891228 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.081263615 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.464398438 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.487332047 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.527274395 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.531306544 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.363407083 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.061536129 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.657274261 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.570096199 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.19272632 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.469970105 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.113590273 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.930427222 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.900947332 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.55508918 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.632244668 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.896284353 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.476769825 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.320905709 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.047597314 seconds)
  done (took 65.859775521 seconds)
done (took 692.196610749 seconds)
SAVING RESULT...
DONE!
